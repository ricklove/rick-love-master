{"version":3,"sources":["webpack:///D:/Projects/rick-love-master/code/networking/upload-api/client/upload-test-view.tsx"],"names":["UploadTestView","props","webClient","useRef","createUploadApiWebClient","uploadApiConfig","useState","url","setUrl","urlRenewed","setUrlRenewed","error","setError","uploadDownloadData","setUploadDownloadData","getUploadUrl","a","current","createUploadUrl","contentType","result","uploadUrl","console","log","getUploadUrl_human","shareablePath","renewUploadUrl","renewUploadUrlInvalidKey","secretKey","uploadAndDownload","data","timestamp","Date","ok","uploader","createUploader","uploadData","downloadData","downloaded","upload","download","onPress","style","background","padding","whiteSpace","getUrl","putUrl","relativePath","expirationTimestamp","JSON","stringify"],"mappings":"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","file":"34-707f71d866868fe1c711.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { SecureToken } from 'utils/secure-token';\r\nimport { uploadApiConfig } from './config';\r\nimport { createUploadApiWebClient } from './web-client';\r\nimport { UploadUrl } from './types';\r\nimport { createUploader } from './uploader';\r\n\r\nexport const UploadTestView = (props: {}) => {\r\n\r\n    const webClient = useRef(createUploadApiWebClient(uploadApiConfig));\r\n\r\n    const [url, setUrl] = useState(null as null | UploadUrl);\r\n    const [urlRenewed, setUrlRenewed] = useState(null as null | UploadUrl);\r\n    const [error, setError] = useState(null as unknown);\r\n    const [uploadDownloadData, setUploadDownloadData] = useState(null as null | { upload: unknown, download: unknown });\r\n\r\n    const getUploadUrl = async () => {\r\n        const result = await webClient.current.createUploadUrl({\r\n            contentType: `text`,\r\n        });\r\n        setUrl(result.uploadUrl);\r\n        console.log(`UploadView onPress`, { result });\r\n    };\r\n    const getUploadUrl_human = async () => {\r\n        const result = await webClient.current.createUploadUrl({\r\n            contentType: `text`,\r\n            shareablePath: true,\r\n        });\r\n        setUrl(result.uploadUrl);\r\n        console.log(`UploadView onPress`, { result });\r\n    };\r\n\r\n    const renewUploadUrl = async () => {\r\n        if (!url) { return; }\r\n\r\n        const result = await webClient.current.renewUploadUrl({ uploadUrl: url });\r\n        setUrlRenewed(result.uploadUrl);\r\n        console.log(`UploadView onPress`, { result, url });\r\n    };\r\n    const renewUploadUrlInvalidKey = async () => {\r\n        if (!url) { return; }\r\n\r\n        try {\r\n            const result = await webClient.current.renewUploadUrl({ uploadUrl: { ...url, secretKey: `FAKE-KEY` as SecureToken } });\r\n            setUrlRenewed(result.uploadUrl);\r\n            console.log(`UploadView onPress`, { result, url });\r\n        } catch (error_) {\r\n            setError(error_);\r\n        }\r\n    };\r\n    const uploadAndDownload = async () => {\r\n        if (!url) { return; }\r\n\r\n        try {\r\n            const data = { timestamp: new Date(), ok: true };\r\n            const uploader = createUploader(url);\r\n            await uploader.uploadData(data);\r\n            const downloaded = await uploader.downloadData();\r\n\r\n            setUploadDownloadData({ upload: data, download: downloaded });\r\n\r\n            console.log(`UploadView onPress`, { upload: data, download: downloaded });\r\n        } catch (error_) {\r\n            setError(error_);\r\n        }\r\n    };\r\n    return (\r\n        <View>\r\n            <TouchableOpacity onPress={getUploadUrl}>\r\n                <View style={{ background: `#555555`, padding: 4 }}>\r\n                    <Text >Get Upload Url</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Read: ${url?.getUrl ?? ``}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Put : ${url?.putUrl ?? ``}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Path: ${url?.relativePath ?? ``}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Time: ${url?.expirationTimestamp ?? ``}`}</Text>\r\n            <TouchableOpacity onPress={getUploadUrl_human}>\r\n                <View style={{ background: `#555555`, padding: 4 }}>\r\n                    <Text >Get Upload Url - Human</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Read: ${url?.getUrl ?? ``}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Put : ${url?.putUrl ?? ``}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Path: ${url?.relativePath ?? ``}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Time: ${url?.expirationTimestamp ?? ``}`}</Text>\r\n\r\n            <TouchableOpacity onPress={renewUploadUrl}>\r\n                <View style={{ background: `#555555`, padding: 4 }}>\r\n                    <Text >Renew Upload Url</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Read: ${urlRenewed?.getUrl ?? ``}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Put : ${urlRenewed?.putUrl ?? ``}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Path: ${urlRenewed?.relativePath ?? ``}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Url Time: ${urlRenewed?.expirationTimestamp ?? ``}`}</Text>\r\n\r\n            <TouchableOpacity onPress={renewUploadUrlInvalidKey}>\r\n                <View style={{ background: `#555555`, padding: 4 }}>\r\n                    <Text >Renew Upload Url - Invalid Key</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Error: ${JSON.stringify(error, null, 2)}`}</Text>\r\n\r\n            <TouchableOpacity onPress={uploadAndDownload}>\r\n                <View style={{ background: `#555555`, padding: 4 }}>\r\n                    <Text >Upload and Download</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Uploaded : ${JSON.stringify(uploadDownloadData?.upload, null, 2)}`}</Text>\r\n            <Text style={{ whiteSpace: `pre-wrap` }}>{`Downloded: ${JSON.stringify(uploadDownloadData?.download, null, 2)}`}</Text>\r\n\r\n        </View>\r\n    );\r\n};\r\n"],"sourceRoot":""}