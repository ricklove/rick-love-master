{"version":3,"sources":["webpack:///D:/Projects/rick-love-master/code/utils/objects.ts","webpack:///D:/Projects/rick-love-master/code/networking/websockets-api/client/websocket-client-smart.ts","webpack:///D:/Projects/rick-love-master/code/networking/web-mesh/web-mesh-client.ts","webpack:///D:/Projects/rick-love-master/code/utils/random.ts","webpack:///D:/Projects/rick-love-master/code/controls-react/icon-kind.ts","webpack:///D:/Projects/rick-love-master/code/games/doodle/doodle-storage.ts","webpack:///D:/Projects/rick-love-master/code/networking/user-data-service/user-profile-selection-view.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/progress-games/emoji-idle-game/emoji-skills/emoji-skill-tree.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/progress-games/emoji-idle-game/emoji-idle-service.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/progress-games/emoji-idle-game/emoji-idle-view.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/progress-games/progress-game.tsx","webpack:///D:/Projects/rick-love-master/code/utils/email-address.ts","webpack:///D:/Projects/rick-love-master/code/utils/error.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/problems/problems-reviewer.ts","webpack:///D:/Projects/rick-love-master/code/networking/upload-api/client/config.ts","webpack:///D:/Projects/rick-love-master/code/react-native-lite/index.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/utils/voice-chooser.tsx","webpack:///D:/Projects/rick-love-master/code/utils/subscribable.ts","webpack:///D:/Projects/rick-love-master/code/networking/upload-api/client/uploader.ts","webpack:///D:/Projects/rick-love-master/code/games/doodle/doodle-view.tsx","webpack:///D:/Projects/rick-love-master/code/networking/websockets-api/client/websocket-client.ts","webpack:///D:/Projects/rick-love-master/node_modules/@stripe/react-stripe-js/dist/react-stripe.umd.js","webpack:///D:/Projects/rick-love-master/code/utils/phone-number.ts","webpack:///D:/Projects/rick-love-master/node_modules/@stripe/stripe-js/dist/stripe.esm.js","webpack:///D:/Projects/rick-love-master/code/payments/common/process-steps.ts","webpack:///D:/Projects/rick-love-master/code/payments/common/types.ts","webpack:///D:/Projects/rick-love-master/code/payments/providers/stripe/common/stripe-process-steps.ts","webpack:///D:/Projects/rick-love-master/code/payments/providers/stripe/client/stripe-payment-react.tsx","webpack:///D:/Projects/rick-love-master/code/games/doodle/doodle.ts","webpack:///D:/Projects/rick-love-master/code/payments/providers/stripe/client/stripe-client-tokens.ts","webpack:///D:/Projects/rick-love-master/code/games/doodle/doodle-paths.ts","webpack:///D:/Projects/rick-love-master/node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///D:/Projects/rick-love-master/node_modules/react-icons/lib/esm/iconContext.js","webpack:///D:/Projects/rick-love-master/node_modules/react-icons/lib/esm/iconBase.js","webpack:///D:/Projects/rick-love-master/code/networking/upload-api/client/web-client.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/utils/speech.ts","webpack:///D:/Projects/rick-love-master/code/utils/json.ts","webpack:///D:/Projects/rick-love-master/code/controls-react/error-box.tsx","webpack:///D:/Projects/rick-love-master/code/controls-react/button.tsx","webpack:///D:/Projects/rick-love-master/code/controls-react/index.tsx","webpack:///D:/Projects/rick-love-master/code/controls-react/loading.tsx","webpack:///D:/Projects/rick-love-master/code/controls-react/inputs.tsx","webpack:///D:/Projects/rick-love-master/code/utils/delay.ts","webpack:///(webpack)/buildin/global.js","webpack:///D:/Projects/rick-love-master/code/controls-react/icon.tsx","webpack:///D:/Projects/rick-love-master/code/themes/theme.ts","webpack:///D:/Projects/rick-love-master/code/utils/arrays.ts","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/core-js/internals/flatten-into-array.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack:///D:/Projects/rick-love-master/code/utils-react/hooks.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/problems/spelling/spelling-problem-service.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/components/game-pad-analog.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/utils/vectors.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/star-blast-sideways.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/problems/multiples.ts","webpack:///D:/Projects/rick-love-master/code/games/doodle/keyboard-simplified.tsx","webpack:///D:/Projects/rick-love-master/code/games/doodle/doodle-components.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/components/leaderboard.tsx","webpack:///D:/Projects/rick-love-master/code/networking/user-data-service/user-profile-emojis.tsx","webpack:///D:/Projects/rick-love-master/code/networking/user-data-service/user-profile-manager-view.tsx","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/construct.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack:///D:/Projects/rick-love-master/code/utils/web-request.ts","webpack:///D:/Projects/rick-love-master/code/networking/websockets-api/client/config.ts","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/core-js/modules/es.array.flat-map.js","webpack:///D:/Projects/rick-love-master/code/games/educational-games/utils/subject-navigator.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/problems/problem-state-storage.ts","webpack:///D:/Projects/rick-love-master/code/networking/user-data-service/user-data-service.ts","webpack:///D:/Projects/rick-love-master/code/games/console-simulator/utils.ts"],"names":["getValuesAsItems","obj","Object","keys","map","k","filter","x","toKeyValueObject","items","v","forEach","key","value","toMap","Map","toKeyValueArray","createWebMeshClient","channelKey","initialMeshState","initialState","reduceState","reduceClientsState","clientKey","localStorage","getItem","Date","now","Math","floor","random","setItem","config","messageHandler","messages","events","sendRef","outbox","connection","subMessages","subEvents","sendIntervalId","sendOutbox","stateSub","createSubscribable","state","meshState","meshMetaData","clients","firstMessageTimestamp","lastMessageTimestamp","messageHistory","sendSyncStateTimeoutId","setTimeout","websocket","websocketsApiUrl","websocketsApiConfig","message","kind","clearTimeout","c","onStateChange","oldClients","push","lastActivityTimestamp","t","sort","a","b","join","updateClients","pingPongDropTimeoutId","clientKeys","includes","sendPong","some","sendSyncState","distinct_key","m","clientPriority","findIndex","send","createWebsocketClient","connect","subscribeMessages","_r","subscribeConnectionEvents","event","isConnected","setInterval","splice","length","unsubscribe","clearInterval","close","history","sendWebSocketMessage","unshift","pingPongInterval","deadClients2","oldClients2","isClosed","_webSocket","sendMessage","AppError","subscribe","randomIndex","randomItem","IconKind","storageAccess","JSON","parse","stringify","createDoodleDrawingStorageService","remoteDoodle","createSmartUploader","getUploadUrl","doodleUploadUrl","setUploadUrl","uploadApiUrl","uploadApiConfig","uploadUrlPrefix","doodleStoragePaths","doodleDrawingsPrefix","remoteVotes","scoresUploadUrl","doodleVotesPrefix","getSummaryData","uploadUrl","uploadApiWebClient","createUploadApiWebClient","createUploadUrl","serverUrl","getUrl","replace","relativePath","summaryUrl","doodleSummary","console","log","downloadData","summaryDataRaw","summaryData","doodles","prompt","p","timestamp","drawing","decodeDoodleDrawing","d","score","s","memory","doodleScores","doodleVotes","load","voteTotals","doodleKey","service","saveDrawing","doodle","substr","save","encodeDoodleDrawing","saveBestDrawingSelection","find","getDrawings","options","includeOtherPrompts","maxCount","allDoodles","samePromptDrawings","otherPromptDrawings","allDrawings","shuffle","slice","drawings","getAllDrawings","styles","container","flexDirection","flexWrap","justifyContent","profileContainer","alignItems","profileCharacterView","width","height","borderWidth","borderStyle","borderColor","profileCharacterText","fontSize","textAlign","profileNameView","profileNameText","UserProfileSelectionView","props","useAutoLoadingError","doWork","loading","error","useState","userProfiles","setUserProfiles","isManagerVisible","setIsManagerVisible","reload","stopIfObsolete","UserDataService","get","setup","getUserProfiles","profiles","useEffect","onClose","style","onPress","setActiveUser","onUserSelected","emoji","name","buildEmojiSkillTree","maleSkillDoc","child_male","student_male","skillDoc","femaleSkillDoc","child_female","student_female","getFemaleVariant","maleNodes","parseSkillDoc","femaleNodes","babyNode","babyEmoji","gender","pay","requirementEmojis","startEmoji","parent","children","allNodes","root","child","allRequirements","parseRequirementsDoc","requirementsDoc","node","allCosts","r","cost","summary","totalCost","reduce","out","debug_totalRequirementsCost","doc","split","trim","line","parts","Number","parseInt","parseSkillLine","skillLine","payText","p1","end","RegExp","genderCharCodes","male","female","man","woman","String","fromCodePoint","storage","createService","skillTree","reqMap","defaultState","characterEmoji","emotion","lastEmotionTimestamp","money","multiplier","lastMultiplierChangeTimestamp","lastPurchaseTimestamp","townState","characters","sub","changeState","partialState","rewardInner","min","targetEmoji","targetOptions","skillNode","remainingSkills","targetSkillNode","reqs","reqs_remaining","requirementsPurchased","reqs_available","requirementsAvailable","requirementsNeeded","requirementsRemaining","undefined","subscribePetStateChange","reward","reward_major","reward_extreme","punish","max","selectOption","finishedTimestamp","serviceState","instance","EmojiIdleService","fixed","position","top","right","left","zIndex","inner","emotionEmoji","fontFamily","characterEmoji_small","costText","color","costText_small","targetCharacterEmoji","objectEmoji","marginLeft","money_small","foodText","EmojiIdleView","gameState","setGameState","isExpanded","setIsExpanded","purchased","townStyles","background","payText_disabled","moneyText","townMoneyText","TownView","townPersons","character","skill","n","years","missingSkills","townMoney","flex","padding","toLocaleString","toFixed","opacity","CommandsView","offset","setOffset","targetOptionsLength","i","canBuy","borderRadius","paddingLeft","paddingRight","ScoreView","moneySizeOffset","setMoneySizeOffset","multiplierSizeOffset","setMultiplierSizeOffset","lastMultiplier","useRef","multiplierDelta","setMultiplierDelta","update","id","current","transform","padStart","EmojiCharacterView","PurchasedView","EmotionView","text","isEmotion","display","setDisplay","showEmotion","variant","getEmoji","ProgressGameService","onCorrect","onCompleteSection","onCompleteSubject","onWrong","createProgressGameProblemService","problemSource","recordAnswer","problem","answer","isCorrect","isReview","isLastOfSubject","uploadUserData","isLastOfSection","ProgressGameView","hasSelectedProfile","setHasSelectedProfile","userProfile","setUserProfile","getActiveUser","lastPurchase","Platform","OS","window","location","toEmailAddress","email","data","Error","ApiError","createReviewProblemService","maxNewReviewCount","reviewSequencePreviousLength","reviewQuestionPrefix","requiredCorrectInRow","problemSourceHistory","reviewProblems","lastReviewProblem","reviewSequence","repeatState","startReview","getSections","gotoSection","getNextProblem","reviewProblem","rSeq","iNext","iEnd","index","lastReviewProblemIndex","iStart","seq","question","answers","getReviewProblem","correctsInRow","newProblem","problemAlreadyInReview","newReview","_debug_problemKey","mergeStyles","Array","isArray","item","viewStyleDefaults","textStyleDefaults","whiteSpace","finalizeTextStyle","userSelect","MozUserSelect","WebkitUserSelect","View","Text","numberOfLines","allStyles","overflow","wordWrap","textOverflow","TextInput","type","keyboardType","secureTextEntry","autoCompleteType","onKeyPress","onSubmitEditing","e","shiftKey","preventDefault","placeholder","disabled","editable","onFocus","onChange","target","onBlur","TouchableOpacity","lastPressTime","hasTouchStarted","onClick","onTouchStart","onTouchMove","onTouchEnd","role","tabIndex","Pressable","onIgnore","stopPropagation","cancelBubble","returnValue","onPressIn","onPressOut","onMouseDown","onMouseUp","onTouchCancel","onMouseLeave","onTouchEndCapture","ActivityIndicator","size","sizePx","CircleSvg","thickness","dashLength","PI","maxWidth","viewBox","xmlns","fill","stroke","strokeWidth","cx","cy","className","strokeDasharray","transformOrigin","Clipboard","setString","navigator","clipboard","writeText","VoiceChooser","languange","speechService","setLoading","setRenderId","refresh","getVoicesForLanguange","voice","setVoiceForLanguange","speak","margin","isSelected","lang","localService","lastState","callbacks","callback","fetchWithTimeout","method","headers","result","json","createUploader","uploadData","body","putUrl","ok","args","_uploadUrl","setupUploadUrl","prefix","uploader","renewUploadUrl","backupUrl","backupUploader","backgroundColor","DoodleTestView","defaultDoodleDrawing","setDoodle","DoodleDrawerView","DoodleDisplayView","scale","segment","setSegment","segmentClientStart","divHost","nativeEvent","pos","div","rect","getBoundingClientRect","clientX","clientY","y","points","segments","onClientMove","lastPos","abs","onMove","onIgnoreNative","document","addEventListener","passive","removeEventListener","preserveAspectRatio","doodleSegmentToSvgPath_line","ref","bottom","onMouseMove","touches","redrawId","setRedrawId","enableRedraw","DoodleDisplayView_Inner","shouldAnimate","animatePointsPerSecond","tick","setTick","totalPoints","flatMap","ceil","remainingPoints","MAX_SAFE_INTEGER","maxPoints","DoodleBrowser","setDoodles","DoodleBrowseView","grouped","groupItems","g","subscribable","subscribableEvents","createSocket","socket","WebSocket","activeSocket","connectionStatus","messageContainer","reconnect","readyState","OPEN","exports","React","_typeof","Symbol","iterator","constructor","prototype","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","_slicedToArray","arr","_arrayWithHoles","toString","_arr","_n","_d","_e","_s","_i","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","emptyFunction","emptyFunctionWithReset","hasOwnProperty","resetWarningCache","propTypes","fn","module","createCommonjsModule","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","factoryWithThrowingShims","isUnknownObject","raw","isEqual","leftArray","leftPlainObject","leftKeys","rightKeys","keySet","allKeys","l","every","usePrevious","validateStripe","maybeStripe","elements","createToken","createPaymentMethod","confirmCardPayment","parseStripeProp","then","isPromise","tag","stripePromise","Promise","resolve","stripe","ElementsContext","createContext","displayName","useElementsContextWithUseCase","useCaseMessage","ctx","useCase","concat","parseElementsContext","useContext","ElementsConsumer","_ref2","useCallbackReference","cb","apply","arguments","extractUpdateableOptions","paymentRequest","noop","createElementComponent","isServer","str","charAt","toUpperCase","Element","createElement","_ref","_ref$options","_ref$onBlur","_ref$onFocus","_ref$onReady","onReady","_ref$onChange","_ref$onEscape","onEscape","_ref$onClick","elementRef","domNode","callOnReady","callOnBlur","callOnFocus","callOnClick","callOnChange","callOnEscape","useLayoutEffect","create","mount","on","prevOptions","warn","updateableOptions","destroy","__elementType","AuBankAccountElement","CardElement","CardNumberElement","CardExpiryElement","CardCvcElement","FpxBankElement","IbanElement","IdealBankElement","PaymentRequestButtonElement","Elements","rawStripeProp","_final","isMounted","parsed","useMemo","_React$useState2","setContext","prevStripe","anyStripe","_registerWrapper","version","Provider","useElements","useStripe","defineProperty","factory","formatPhoneNumber_UsaCanada","phoneNumberMask_UsaCanada","corrected","toStandardPhoneNumber","digitsNo1","digits","letters","iDigit","iLast","full","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","V3_URL","V3_URL_REGEX","EXISTING_SCRIPT_MESSAGE","loadScript","params","reject","Stripe","script","scripts","querySelectorAll","test","src","findScript","queryString","advancedFraudSignals","headOrBody","head","appendChild","injectScript","initStripe","registerWrapper","stripePromise$1","loadCalled","ProcessSteps_CreateSavedPaymentMethod","PaymentError","ProcessSteps_CreateSavedPaymentMethod_Stripe","_02_Server_SetupSavedPaymentMethod","_03_Client_CollectPaymentDetails","_04_Server_ObtainPaymentMethod","logProcessStep_CreateSavedPaymentMethod_Stripe","step","status","wrapProcessStep_CreateSavedPaymentMethod_Stripe","execute","createPaymentClientComponents_stripe","_len","_key","loadStripe","stripePublicKey","AppWrapperComponent","PaymentMethodEntryComponent","paymentMethodSetupToken","onPaymentMethodReady","stripeError","setStripeError","handleSubmit","_03A_Client_CollectPaymentDetails","setupInfo","stripeDecodeClientSetupToken","confirmCardSetup","clientSecret","payment_method","card","getElement","billing_details","customerBillingDetails","setupIntent","stripeEncodeClientToken","inputStyle","base","textColor","fontSmoothing","invalid","textColor_invalid","iconColor","inputContainerStyle","marginBottom","elementPadding","textPadding","buttonStyle","fontWeight","buttonJustifyContent","buttonAlignment","errorContainerStyle","errorMessageStyle","onSubmit","buttonText","encodeDoodleSegmentPoints","last","decodeDoodleSegmentPoints","pointsString","point","o","w","h","doodleText","stripeEncodeClientSetupToken","doodlePartyDrawingsPrefix","DefaultContext","attr","IconContext","__assign","assign","this","__rest","GenIcon","IconBase","Tree2Element","tree","elem","conf","computedSize","title","svgProps","Consumer","apiRequest","endpoint","url","requestData","webRequest","resultObj","createSpeechService","synth","speechSynthesis","selectedVoices","voiceLang","u","SpeechSynthesisUtterance","voices","getVoices","startsWith","language","jsonStringify_safe","shouldFormat","visited","_","val","errorBoxStyle","view","theme","view_error","text_error","text_errorMessage","icon","icon_errorMessage","button","outlineColor","colors","outline","ErrorBox_Inner","expanded","setExpanded","errorAsString","errorMessage","errorDetails","errorObjText","canExpand","collapsed","copy","retryCallback","retry","Button","styleAlt","button_formAction_alt","button_formAction","extractViewStyle","extractTextStyle","C","Loading","loader","LoadingInline","ErrorBox","ErrorMessage","View_Panel","view_panel","View_Form","view_form","View_FormFields","view_formFields","View_FieldRow","view_fieldRow","View_FormActionRow","view_formActionRow","Text_FormTitle","text_formTitle","Text_FieldLabel","text_fieldLabel","Button_FieldInline","button_fieldInline_alt","button_fieldInline","Button_FormAction","Input_Text","input_fieldEntry","Input_Username","Input_Password","showPassword","setShowPassword","marginRight","eye","eyeSlash","Input_Phone","valueActual","setValueActual","Input_Email","Input_Currency","parseFloat","delay","timeout","Function","Icon","menu","component","MdMenu","back","MdArrowBack","MdErrorOutline","FiChevronDown","FiChevronRight","MdContentCopy","FaRedo","dashboard","MdDashboard","add","FaPlus","remove","FaMinus","FaEye","FaEyeSlash","checkChecked","FaCheckSquare","checkUnchecked","FaSquare","MdCheckBoxOutlineBlank","getIcon","IconComponent","sizes","marginTop","paddingTop","paddingBottom","minWidth","lineHeight","basicThemeColors","text_header","text_button","border","border_minor","border_input","background_field","background_button","background_error","getBorderSizes","all","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","basicThemeSizes","borderWidth_minor","borderWidth_input","sectionGap","elementGap","rowGap","rowPadding","fontSize_input","fontSize_button","fontSize_header","minWidth_label","minWidth_input","minWidth_button","basicFont","fontWeight_normal","fontWeight_button","fontWeight_header","createTheme","font","borderProps","borderProps_minor","borderProps_input","sTextView","moveItem","to","distinct","set","Set","getKey","groups","sameArrayContents","toLength","bind","flattenIntoArray","original","sourceLen","start","depth","mapper","thisArg","targetIndex","sourceIndex","mapFn","addToUnscopables","mounted","useMounted","loadingError","setLoadingError","doWorkInner","getContext","contextInit","doCall","createSpellingProblemService","maxAnswers","sectionSize","speech","spellingEntries","getSpellingEntries","sectionCount","nextIndex","completedSectionKeys","getSectionKey","sectionIndex","loaded","isComplete","correctValue","word","wrongAnswerCount","wrongValues","mispellings","onQuestion","sectionKey","GamepadAnalogStateful","moveDirection","buttons","isDown","onPressStateChange","onMovePressIn","dir","onMovePressOut","inputStyles","alignSelf","section","moveSectionWrapper","moveSectionRotation","row","cellTouch","cellView","pointerEvents","cellText","moveCellText","cellEmptyView","cellTextOcclusionView","GamepadAnalog","cellViewStyle","onKeyDown","onKeyUp","DirectionButton","direction","ActionButton","Fragment","getDistanceSq","EducationalGame_StarBlastSideways_Multiples","problemService","createAutoSavedProblemService","bVal","round","EducationalGame_StarBlastSideways","EducationalGame_StarBlastSideways_Inner","paused","pauseState","setPauseState","pressState","setPressState","problemSourceKey","setProblemSourceKey","gamepad","onOpen","onSubjectNavigation","viewscreen","gameStyles","directAnswerButtonContainer","directAnswerButton","directAnswerButton_hidden","viewscreenView","sprite","viewSize","fontSize_small","gameOver","GameView","getDefaultGameState","lastActualTimeMs","lastGameTime","gameSpeed","lives","getGameTime","actualTimePassed","gameTime","gameTimePassed","playerPositionState","rotation","projectilesState","lastShotActualTime","shots","debris","enemiesState","enemies","problemsState","restartGame","e2","gotoNextProblem","pSize","newProblemState","problemTime","isAnsweredWrong","newEnemyState","ans","enemy","vel","onHit","ignore","destroyed","gameLastTime","requestAnimationFrame","gameLoop","gameDeltaTime","getCommonState","playerPosition","onLoseLife","deadTime","gameOverTime","gameResult","updateGame","playerResult","updatePlayer","projectilesResult","updateProjectiles","enemiesResult","updateEnemies","timeSinceProblem","hasHitGround","explodeTime","weaponsLock","lockedEnemy","lockedAtPlayerPosition","playerTargetPosition","directAnswer","dirPress","targetPos","sign","targetRotation","gw","gh","playerPos","didShoot","destoyed","pad","hPad","shift","newShots","radius","radiusSq","radiusSq_enemies","i2","swap","radiusSq_player","wPad","closestEnemyToPlayer","newEnemies","Sprite","offsetX","offsetY","getSpriteEmoji","stylePosition","styleRotation","TextPositioned","englishKeyboard","rows","rowView","keyView","keyView_disabled","keyText","keyText_wrong","KeyboardSimplified","expectedCharacter","showHints","onExpectedKeyPress","keyboard","hintKeys","setHintKeys","wrongKeys","setWrongKeys","hints","iRow","drawingChoicesView","drawingChoiceWrapper","drawingChoice","titleView","titleText","promptView","promptText","hintText","buttonRowView","buttonView","DoodleGameView_DrawWord","setDrawing","hint","onSkip","onDone","DoodleGameView_ChooseBest","onChooseBest","typeStyles","completedText","DoodleGameView_TypeExpected","completed","remaining","setStatus","sayAgain","nextChar","createLeaderboard","leaderboard","saveScore","loadScore","sortKey","storageKey","sortDescending","leaderboardInputStyles","textInput","LeaderboardNameInput","setName","leaderboardStyles","scoreView","nameText","scoreText","LeaderboardViewInner","scoreColumns","scores","getValue","useLeaderboard","getScore","leaderboardScores","setLeaderboardScores","LeaderboardArea","onScoreSaved","userProfileChracters","UserProfileManagerView","onActiveUserChange","onUserProfileChange","onUserAdded","AddUserProfileView","shareCode","setShareCode","addUserFromShareCode","UserProfileView","setCharacters","setUserProfileInfo","isActive","onNameChange","createShareCode","UserProfileName","isEditingName","setIsEditingName","changeName","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Parent","Class","_cache","has","Wrapper","enumerable","writable","configurable","race","fetch","reqData","catch","responseStatus","request","$","toObject","aFunction","arraySpeciesCreate","proto","callbackfn","A","O","subjectStyles","header","SubjectNavigator","scrollTo","createProblemStateStorage","uploadApi","getUserProfile","getActiveUserProfile","uploadBackup","uploadWithAutoRenew","updateUserProfileFromServer","updateAllProfilesFromServer","isSetupStarted","isSetupDone","getUserDataServiceState","setUserDataServiceState","getUserData","userState","activeUserProfileKey","metadata","clearUserData","removeItem","lastUploadTimestamp","setUserData","userData","userProfileKey","upload","newUploarUrl","doSetup","newUploadUrlResult","newState","changeTimestamp","user","stateJson","downloadUserDataIfNewer","info","uData","shareablePath","shareUrlResult","shareGetUrl","sharedUploadUrl","userKey","randomBinary","fromCharCode"],"mappings":"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","file":"commons-42be048119f8a6f09788.js","sourcesContent":["export const getValuesAsItems = <T>(obj: T) => {\r\n    return Object.keys(obj).map(k => k as keyof typeof obj).map(k => obj[k]).filter(x => x);\r\n};\r\n\r\nexport const toKeyValueObject = <T>(items: { key: string, value: T }[]): { [key: string]: T } => {\r\n    const v = {} as { [key: string]: T };\r\n    items.forEach(x => { v[x.key] = x.value; });\r\n    return v;\r\n};\r\n\r\nexport const toMap = <T>(items: { key: string, value: T }[]): Map<string, T> => {\r\n    const v = new Map(items.map(x => [x.key, x.value]));\r\n    return v;\r\n};\r\n\r\nexport const toKeyValueArray = <T>(obj: { [key: string]: T }): { key: string, value: T }[] => {\r\n    return Object.keys(obj).map(k => k as keyof typeof obj).map(k => ({ key: k as string, value: obj[k] }));\r\n};\r\n","import { WebsocketConnectionEvent } from './types';\r\nimport { createWebsocketClient } from './websocket-client';\r\n\r\nexport const createWebsocketConnection_smart = <TWebsocketMessage>(config: { websocketsApiUrl: string, channelKey: string }, messageHandler: (message: TWebsocketMessage) => void) => {\r\n    const messages = [] as (TWebsocketMessage & { _r: number })[];\r\n    const events = [] as WebsocketConnectionEvent[];\r\n    const sendRef = {\r\n        send: null as null | ((message: TWebsocketMessage) => void),\r\n    };\r\n    const outbox = [] as TWebsocketMessage[];\r\n\r\n    const connection = createWebsocketClient({ websocketsApiUrl: config.websocketsApiUrl })\r\n        .connect<TWebsocketMessage>({ channelKey: config.channelKey });\r\n\r\n    const subMessages = connection.subscribeMessages(message => {\r\n        messageHandler(message);\r\n        messages.push({ ...message, _r: Date.now() });\r\n    });\r\n    const subEvents = connection.subscribeConnectionEvents(event => {\r\n        sendRef.send = connection.isConnected() ? connection.send : null;\r\n        events.push(event);\r\n    });\r\n\r\n    const sendIntervalId = setInterval(() => sendOutbox(), 250);\r\n\r\n    const unsubscribe = () => {\r\n        clearInterval(sendIntervalId);\r\n        sendRef.send = null;\r\n        subMessages.unsubscribe();\r\n        subEvents.unsubscribe();\r\n        connection.close();\r\n    };\r\n\r\n    const sendOutbox = () => {\r\n        if (!sendRef.send) { return; }\r\n\r\n        const o = outbox.splice(0, outbox.length);\r\n        for (const x of o) {\r\n            sendRef.send(x);\r\n        }\r\n    };\r\n\r\n    const sendMessageWithOutbox = (message: TWebsocketMessage) => {\r\n        if (!sendRef.send) {\r\n            outbox.push(message);\r\n            return;\r\n        }\r\n\r\n        sendOutbox();\r\n        sendRef.send(message);\r\n    };\r\n\r\n\r\n    return {\r\n        send: sendMessageWithOutbox,\r\n        unsubscribe,\r\n        history: {\r\n            messages,\r\n            events,\r\n        },\r\n    };\r\n};\r\n","import { createWebsocketConnection_smart } from 'websockets-api/client/websocket-client-smart';\r\nimport { createSubscribable } from 'utils/subscribable';\r\nimport { AppError } from 'utils/error';\r\nimport { websocketsApiConfig } from 'websockets-api/client/config';\r\nimport { distinct_key } from 'utils/arrays';\r\n\r\ntype Timestamp = number & { __type: 'Timestamp' }\r\ntype ClientKey = string & { __type: 'ClientKey' }\r\nconst createWebMeshClient_websocketOnly = <TMeshState, TMeshMessage>({\r\n    channelKey,\r\n    initialState: initialMeshState,\r\n    reduceState,\r\n    reduceClientsState,\r\n}: {\r\n    channelKey: string;\r\n    initialState: TMeshState;\r\n    reduceState: (previousState: TMeshState, message: TMeshMessage) => TMeshState;\r\n    reduceClientsState: (previousState: TMeshState, clients: { key: string, lastActivityTimestamp: Timestamp }[]) => TMeshState;\r\n}) => {\r\n    const WEB_MESH_CLIENT_KEY = `_webMeshClientKey`;\r\n    const clientKey = (localStorage.getItem(WEB_MESH_CLIENT_KEY) ?? (`${Date.now()}-${Math.floor(Math.random() * 999999)}`)) as ClientKey;\r\n    localStorage.setItem(WEB_MESH_CLIENT_KEY, clientKey);\r\n\r\n    const stateSub = createSubscribable<TMeshState>();\r\n    const state = {\r\n        meshState: initialMeshState,\r\n        meshMetaData: {\r\n            clients: [] as { key: string, lastActivityTimestamp: Timestamp }[],\r\n            firstMessageTimestamp: 0 as Timestamp,\r\n            lastMessageTimestamp: 0 as Timestamp,\r\n        },\r\n    };\r\n    const messageHistory = [] as WebSocketMessageWithSenderInfo[];\r\n\r\n    type WebSocketMessage = (\r\n        { kind: 'join' }\r\n        | { kind: 'close' }\r\n        | { kind: 'sync', state: typeof state }\r\n        | { kind: 'ping', clientKeys: string[] }\r\n        | { kind: 'pong' }\r\n        | { kind: 'drop', clientKeys: string[] }\r\n        | { kind: 'message', message: TMeshMessage }\r\n    );\r\n    type WebSocketMessageWithSenderInfo = { t: Timestamp, c: ClientKey } & WebSocketMessage;\r\n\r\n    const updateClients = (message: { c: ClientKey, t: Timestamp }) => {\r\n        const oldClients = [...state.meshMetaData.clients];\r\n        state.meshMetaData.clients = state.meshMetaData.clients.filter(x => x.key !== message.c);\r\n        state.meshMetaData.clients.push({ key: message.c, lastActivityTimestamp: message.t });\r\n        state.meshMetaData.clients.sort((a, b) => -(a.lastActivityTimestamp - b.lastActivityTimestamp));\r\n\r\n        if (oldClients.map(x => x.key).join(`;`) !== state.meshMetaData.clients.map(x => x.key).join(`;`)) {\r\n            state.meshState = reduceClientsState(state.meshState, state.meshMetaData.clients);\r\n            stateSub.onStateChange(state.meshState);\r\n        }\r\n    };\r\n\r\n    let sendSyncStateTimeoutId = setTimeout(() => { }, 0);\r\n    const websocket = createWebsocketConnection_smart<WebSocketMessageWithSenderInfo>({ websocketsApiUrl: websocketsApiConfig.websocketsApiUrl, channelKey: `wm_${channelKey}` }, message => {\r\n\r\n        if (message.kind === `close`) {\r\n            clearTimeout(sendSyncStateTimeoutId);\r\n            state.meshMetaData.clients = state.meshMetaData.clients.filter(x => x.key !== message.c);\r\n            state.meshState = reduceClientsState(state.meshState, state.meshMetaData.clients);\r\n            stateSub.onStateChange(state.meshState);\r\n            return;\r\n        }\r\n\r\n        updateClients(message);\r\n\r\n        if (message.kind === `pong`) {\r\n            clearTimeout(pingPongDropTimeoutId ?? 0);\r\n            pingPongDropTimeoutId = null;\r\n            return;\r\n        }\r\n        if (message.kind === `ping`) {\r\n            clearTimeout(pingPongDropTimeoutId ?? 0);\r\n            pingPongDropTimeoutId = null;\r\n            if (message.clientKeys.includes(clientKey)) {\r\n                setTimeout(sendPong);\r\n            }\r\n            return;\r\n        }\r\n        if (message.kind === `drop`) {\r\n            clearTimeout(pingPongDropTimeoutId ?? 0);\r\n            pingPongDropTimeoutId = null;\r\n            state.meshMetaData.clients = state.meshMetaData.clients.filter(x => !message.clientKeys.some(c => c === x.key));\r\n            state.meshState = reduceClientsState(state.meshState, state.meshMetaData.clients);\r\n            stateSub.onStateChange(state.meshState);\r\n            return;\r\n        }\r\n\r\n        if (message.kind === `join`) {\r\n            clearTimeout(sendSyncStateTimeoutId);\r\n\r\n            // Is self, ignore\r\n            if (message.c === clientKey) { return; }\r\n\r\n            // Respond with sync\r\n            const clientPriority = state.meshMetaData.clients.findIndex(x => x.key === clientKey) - 1;\r\n            const waitTime = clientPriority >= 0 ? clientPriority * 2000 : 10 * 1000;\r\n            sendSyncStateTimeoutId = setTimeout(sendSyncState, waitTime);\r\n            return;\r\n        }\r\n        if (message.kind === `sync`) {\r\n            // Is self, ignore\r\n            if (message.c === clientKey) { return; }\r\n\r\n            if (state.meshMetaData.firstMessageTimestamp\r\n                && state.meshMetaData.firstMessageTimestamp < message.state.meshMetaData.firstMessageTimestamp) {\r\n                // Ignore if the data is not complete (and send new sync message if needed)\r\n                sendSyncStateTimeoutId = setTimeout(sendSyncState, 10 * 1000);\r\n                return;\r\n            }\r\n\r\n            clearTimeout(sendSyncStateTimeoutId);\r\n\r\n            state.meshMetaData.firstMessageTimestamp = message.state.meshMetaData.firstMessageTimestamp;\r\n            state.meshMetaData.lastMessageTimestamp = message.state.meshMetaData.lastMessageTimestamp;\r\n            // state.meshMetaData.clients = message.state.meshMetaData.clients;\r\n            state.meshMetaData.clients = distinct_key([...state.meshMetaData.clients, ...message.state.meshMetaData.clients], x => x.key);\r\n            state.meshState = message.state.meshState;\r\n\r\n            // TODO: What about out of order messages?\r\n            // Replay missing messages\r\n            const missingMessages = messageHistory.filter(x => x.t > state.meshMetaData.lastMessageTimestamp);\r\n            for (const m of missingMessages) {\r\n                if (m.kind !== `message`) { return; }\r\n                state.meshState = reduceState(state.meshState, m.message);\r\n                state.meshMetaData.lastMessageTimestamp = m.t;\r\n            }\r\n\r\n            state.meshState = reduceClientsState(state.meshState, state.meshMetaData.clients);\r\n            stateSub.onStateChange(state.meshState);\r\n            return;\r\n        }\r\n        if (message.kind === `message`) {\r\n            // Accept own message into state once it returns\r\n            messageHistory.push(message);\r\n\r\n            if (!state.meshMetaData.firstMessageTimestamp) { state.meshMetaData.firstMessageTimestamp = message.t; }\r\n            state.meshMetaData.lastMessageTimestamp = message.t;\r\n            state.meshState = reduceState(state.meshState, message.message);\r\n            stateSub.onStateChange(state.meshState);\r\n        }\r\n    });\r\n\r\n    const sendWebSocketMessage = (message: WebSocketMessage) => {\r\n        websocket.send({ ...message, c: clientKey, t: Date.now() as Timestamp });\r\n    };\r\n    const connect = () => {\r\n        sendWebSocketMessage({ kind: `join` });\r\n    };\r\n    const sendSyncState = () => {\r\n        // Move self to front of client list\r\n        state.meshMetaData.clients = state.meshMetaData.clients.filter(x => x.key !== clientKey);\r\n        state.meshMetaData.clients.unshift({ key: clientKey, lastActivityTimestamp: Date.now() as Timestamp });\r\n\r\n        sendWebSocketMessage({ kind: `sync`, state });\r\n    };\r\n\r\n    // Ping-pong (Keep Alive)\r\n    const sendPong = () => {\r\n        sendWebSocketMessage({ kind: `pong` });\r\n    };\r\n    let pingPongDropTimeoutId = null as null | ReturnType<typeof setTimeout>;\r\n    const pingPongInterval = setInterval(() => {\r\n        if (pingPongDropTimeoutId) { return; }\r\n\r\n        const deadClients = state.meshMetaData.clients.filter(x => Date.now() > 45 * 1000 + x.lastActivityTimestamp);\r\n        if (deadClients.length > 0) {\r\n            // state.meshMetaData.clients = state.meshMetaData.clients.filter(x => !deadClients.some(d => d.key === x.key));\r\n            const clientPriority = state.meshMetaData.clients.findIndex(x => x.key === clientKey);\r\n            pingPongDropTimeoutId = setTimeout(() => {\r\n                pingPongDropTimeoutId = null;\r\n                const deadClients2 = state.meshMetaData.clients.filter(x => Date.now() > 45 * 1000 + x.lastActivityTimestamp);\r\n                if (deadClients2.length <= 0) { return; }\r\n                sendWebSocketMessage({ kind: `drop`, clientKeys: deadClients2.map(x => x.key) });\r\n            }, clientPriority * 5000);\r\n            return;\r\n        }\r\n\r\n        const oldClients = state.meshMetaData.clients.filter(x => Date.now() > 30 * 1000 + x.lastActivityTimestamp);\r\n        if (oldClients.length <= 0) { return; }\r\n\r\n        const clientPriority = state.meshMetaData.clients.findIndex(x => x.key === clientKey);\r\n        pingPongDropTimeoutId = setTimeout(() => {\r\n            pingPongDropTimeoutId = null;\r\n            const oldClients2 = state.meshMetaData.clients.filter(x => Date.now() > 30 * 1000 + x.lastActivityTimestamp);\r\n            if (oldClients2.length <= 0) { return; }\r\n\r\n            sendWebSocketMessage({ kind: `ping`, clientKeys: oldClients2.map(x => x.key) });\r\n        }, clientPriority * 5000);\r\n    }, 5000);\r\n\r\n    // Close\r\n    let isClosed = false;\r\n    const close = () => {\r\n        if (isClosed) { return; }\r\n        isClosed = true;\r\n        sendWebSocketMessage({ kind: `close` });\r\n        websocket.unsubscribe();\r\n        clearInterval(pingPongInterval);\r\n    };\r\n    const sendMessage = (message: TMeshMessage) => {\r\n        if (isClosed) { throw new AppError(`The connection is closed`); }\r\n        sendWebSocketMessage({ kind: `message`, message });\r\n    };\r\n\r\n\r\n    // Begin\r\n    connect();\r\n\r\n    return {\r\n        _webSocket: {\r\n            history: websocket.history,\r\n        },\r\n        clientKey,\r\n        sendMessage,\r\n        subscribe: stateSub.subscribe,\r\n        close,\r\n    };\r\n};\r\n\r\nexport type WebMeshClient = ReturnType<typeof createWebMeshClient>;\r\nexport type WebMeshClientWebSocketHistory = WebMeshClient['_webSocket']['history'];\r\nexport const createWebMeshClient = createWebMeshClient_websocketOnly;\r\n","export const randomIndex = (length: number) => {\r\n    const x = Math.floor(length * Math.random());\r\n    return x >= length ? length - 1 : x;\r\n};\r\nexport const randomItem = <T>(items: T[]) => items[randomIndex(items.length)];\r\n","\r\nexport enum IconKind {\r\n    // common icons\r\n    menu,\r\n    back,\r\n    error,\r\n    expanded,\r\n    collapsed,\r\n    copy,\r\n    retry,\r\n    dashboard,\r\n    add,\r\n    remove,\r\n    eye,\r\n    eyeSlash,\r\n\r\n    checkChecked,\r\n    checkUnchecked,\r\n\r\n    // navigation icons\r\n    account,\r\n    message,\r\n    subscription,\r\n    calendar,\r\n    contacts,\r\n    keys,\r\n    resources,\r\n    admin,\r\n}\r\n","import { randomItem } from 'utils/random';\r\nimport { shuffle, distinct_key } from 'utils/arrays';\r\nimport { UploadUrl } from 'upload-api/client/types';\r\nimport { uploadApiConfig } from 'upload-api/client/config';\r\nimport { createSmartUploader, downloadData } from 'upload-api/client/uploader';\r\nimport { toKeyValueArray } from 'utils/objects';\r\nimport { createUploadApiWebClient } from 'upload-api/client/web-client';\r\nimport { DoodleDrawingStorageService, DoodleData, decodeDoodleDrawing, encodeDoodleDrawing, DoodleScoreVote, DoodleScore, DoodleUserDrawingDataJson, DoodleUserVotesDataJson, DoodleSummaryDataJson } from './doodle';\r\nimport { doodleStoragePaths } from './doodle-paths';\r\n\r\ntype DoodleStorageData = {\r\n    doodleUploadUrl?: UploadUrl;\r\n    scoresUploadUrl?: UploadUrl;\r\n};\r\n\r\nconst storageAccess = {\r\n    load: (): null | DoodleStorageData => {\r\n        try {\r\n            return JSON.parse(localStorage.getItem(`doodleStorage.v2`) ?? `NULL!{}`);\r\n        } catch{ return null; }\r\n    },\r\n    save: (value: DoodleStorageData) => {\r\n        localStorage.setItem(`doodleStorage.v2`, JSON.stringify(value));\r\n    },\r\n};\r\n\r\n\r\nexport const createDoodleDrawingStorageService = async () => {\r\n\r\n    const remoteDoodle = createSmartUploader<DoodleUserDrawingDataJson>({\r\n        getUploadUrl: async () => storageAccess.load()?.doodleUploadUrl ?? null,\r\n        setUploadUrl: async (x) => storageAccess.save({ ...(storageAccess.load() ?? {}), doodleUploadUrl: x }),\r\n        uploadApiUrl: uploadApiConfig.uploadApiUrl,\r\n        uploadUrlPrefix: doodleStoragePaths.doodleDrawingsPrefix,\r\n    });\r\n    const remoteVotes = createSmartUploader<DoodleUserVotesDataJson>({\r\n        getUploadUrl: async () => storageAccess.load()?.scoresUploadUrl ?? null,\r\n        setUploadUrl: async (x) => storageAccess.save({ ...(storageAccess.load() ?? {}), scoresUploadUrl: x }),\r\n        uploadApiUrl: uploadApiConfig.uploadApiUrl,\r\n        uploadUrlPrefix: doodleStoragePaths.doodleVotesPrefix,\r\n    });\r\n\r\n    const getSummaryData = async () => {\r\n        try {\r\n            let uploadUrl = storageAccess.load()?.doodleUploadUrl;\r\n\r\n            if (!uploadUrl) {\r\n                const uploadApiWebClient = createUploadApiWebClient(uploadApiConfig);\r\n                uploadUrl = (await uploadApiWebClient.createUploadUrl({})).uploadUrl;\r\n            }\r\n\r\n            const serverUrl = uploadUrl?.getUrl.replace(uploadUrl.relativePath, ``);\r\n            const summaryUrl = `${serverUrl}${doodleStoragePaths.doodleSummary}`;\r\n            console.log(`getSummaryData`, { uploadUrl, serverUrl, summaryUrl });\r\n\r\n            const summaryDataRaw = await downloadData(summaryUrl) as DoodleSummaryDataJson;\r\n            const summaryData = {\r\n                doodles: summaryDataRaw.doodles.map(x => ({\r\n                    key: x.k,\r\n                    prompt: x.p,\r\n                    timestamp: x.t,\r\n                    drawing: decodeDoodleDrawing(x.d),\r\n                    score: x.s,\r\n                })),\r\n            };\r\n            return summaryData;\r\n        } catch{\r\n            return { doodles: [] };\r\n        }\r\n    };\r\n    const summaryData = await getSummaryData();\r\n\r\n    const memory = {\r\n        doodles: [] as DoodleData[],\r\n        doodleScores: [] as DoodleScore[],\r\n        doodleVotes: [] as DoodleScoreVote[],\r\n    };\r\n\r\n\r\n    // Load from server\r\n    memory.doodles = (await remoteDoodle.load())?.doodles.map(x => ({\r\n        key: x.k,\r\n        prompt: x.p,\r\n        timestamp: x.t,\r\n        drawing: x.d ? decodeDoodleDrawing(x.d) : (x as unknown as DoodleData).drawing,\r\n    })) ?? [];\r\n    memory.doodleVotes = (await remoteVotes.load())?.doodleVotes ?? [];\r\n\r\n    const voteTotals = {} as { [key: string]: number };\r\n    // memory.doodleVotes.forEach(x => { voteTotals[x.k] = (voteTotals[x.k] ?? 0) + 1; });\r\n    summaryData.doodles.forEach(x => { voteTotals[x.key] = (voteTotals[x.key] ?? 0) + x.score; });\r\n    memory.doodleScores = toKeyValueArray(voteTotals).map(x => ({\r\n        doodleKey: x.key,\r\n        score: x.value,\r\n    }));\r\n\r\n    const service: DoodleDrawingStorageService = {\r\n        saveDrawing: async (prompt, drawing) => {\r\n            const doodle = { key: `${prompt.substr(0, 8)}:${Date.now()}:${Math.floor(Math.random() * 999999)}`, drawing, prompt, timestamp: Date.now() };\r\n            memory.doodles.push(doodle);\r\n\r\n            // Save to server\r\n            setTimeout(async () => {\r\n                await remoteDoodle.save({\r\n                    doodles: memory.doodles.map(x => ({\r\n                        k: x.key,\r\n                        p: x.prompt,\r\n                        t: x.timestamp,\r\n                        d: encodeDoodleDrawing(x.drawing),\r\n                    })),\r\n                });\r\n            });\r\n        },\r\n        saveBestDrawingSelection: async (doodle) => {\r\n            memory.doodleVotes.push({\r\n                k: doodle.key,\r\n                t: Date.now(),\r\n            });\r\n\r\n            let d = memory.doodleScores.find(x => x.doodleKey === doodle.key);\r\n            if (!d) {\r\n                d = {\r\n                    doodleKey: doodle.key,\r\n                    score: 0,\r\n                };\r\n                memory.doodleScores.push(d);\r\n            }\r\n            d.score = (d.score ?? 0) + 1;\r\n\r\n            // Save to server\r\n            setTimeout(async () => {\r\n                await remoteVotes.save({\r\n                    doodleVotes: memory.doodleVotes,\r\n                });\r\n            });\r\n        },\r\n        getDrawings: async (prompt, options) => {\r\n            const {\r\n                includeOtherPrompts = false,\r\n                maxCount = 4,\r\n            } = options ?? {};\r\n\r\n            const allDoodles = distinct_key([...summaryData.doodles, ...memory.doodles.map(x => ({ ...x, score: memory.doodleScores.find(s => s.doodleKey === x.key)?.score ?? 0 }))], x => x.key);\r\n\r\n            const samePromptDrawings = allDoodles.filter(x => x.prompt === prompt).sort((a, b) => -(a.score - b.score));\r\n            console.log(`getDrawings`, { samePromptDrawings });\r\n\r\n            const otherPromptDrawings = includeOtherPrompts ? allDoodles.filter(x => x.prompt !== prompt) : [];\r\n            const allDrawings =\r\n                includeOtherPrompts ? [randomItem(samePromptDrawings), ...shuffle(otherPromptDrawings).slice(0, maxCount - 1)]\r\n                    : samePromptDrawings;\r\n            const drawings = shuffle(allDrawings).slice(0, maxCount);\r\n            return { doodles: drawings };\r\n        },\r\n        getAllDrawings: async () => {\r\n            const allDoodles = distinct_key([...summaryData.doodles, ...memory.doodles.map(x => ({ ...x, score: memory.doodleScores.find(s => s.doodleKey === x.key)?.score ?? 0 }))], x => x.key);\r\n            return { doodles: allDoodles };\r\n        },\r\n    };\r\n\r\n    return service;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { useAutoLoadingError } from 'utils-react/hooks';\r\nimport { UserDataService, UserProfileInfo } from './user-data-service';\r\nimport { UserProfileManagerView } from './user-profile-manager-view';\r\n\r\nconst styles = {\r\n    container: {\r\n        flexDirection: `row`,\r\n        flexWrap: `wrap`,\r\n        justifyContent: `space-around`,\r\n    },\r\n    profileContainer: {\r\n        flexDirection: `column`,\r\n        alignItems: `center`,\r\n    },\r\n    profileCharacterView: {\r\n        width: 80,\r\n        height: 80,\r\n        borderWidth: 1,\r\n        borderStyle: `solid`,\r\n        borderColor: `#888888`,\r\n    },\r\n    profileCharacterText: {\r\n        fontSize: 48,\r\n        textAlign: `center`,\r\n    },\r\n    profileNameView: {\r\n    },\r\n    profileNameText: {\r\n\r\n    },\r\n} as const;\r\n\r\nexport const UserProfileSelectionView = (props: { onUserSelected: () => void }) => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [userProfiles, setUserProfiles] = useState(null as null | UserProfileInfo[]);\r\n    const [isManagerVisible, setIsManagerVisible] = useState(false);\r\n\r\n    const reload = () => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setup();\r\n        stopIfObsolete();\r\n\r\n        const profiles = await UserDataService.get().getUserProfiles();\r\n        setUserProfiles(profiles);\r\n    });\r\n\r\n    const selectUser = (key: string) => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setActiveUser(key);\r\n        props.onUserSelected();\r\n    });\r\n\r\n    const onEditProfiles = () => {\r\n        setIsManagerVisible(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        reload();\r\n    }, []);\r\n\r\n    if (!userProfiles) {\r\n        return (<></>);\r\n    }\r\n\r\n    if (isManagerVisible) {\r\n        return <UserProfileManagerView onClose={() => { setIsManagerVisible(false); reload(); }} />;\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {userProfiles.map(x => (\r\n                <TouchableOpacity key={x.key} onPress={() => selectUser(x.key)}>\r\n                    <View style={styles.profileContainer}>\r\n                        <View style={styles.profileCharacterView}>\r\n                            <Text style={styles.profileCharacterText}>{x.emoji ?? `👤`}</Text>\r\n                        </View>\r\n                        <View style={styles.profileNameView}>\r\n                            <Text style={styles.profileNameText}>{x.name}</Text>\r\n                        </View>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            ))}\r\n            <TouchableOpacity onPress={onEditProfiles}>\r\n                <View style={styles.profileContainer}>\r\n                    <View style={styles.profileCharacterView}>\r\n                        <Text style={styles.profileCharacterText}>{` 👤 `}</Text>\r\n                    </View>\r\n                    <View style={styles.profileNameView}>\r\n                        <Text style={styles.profileNameText}>Edit</Text>\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n","export type EmojiSkillNode = {\r\n    emoji: string;\r\n    name: string;\r\n    gender: `baby` | `male` | `female`;\r\n    pay: number;\r\n    startEmoji: null | string;\r\n    requirementEmojis: string[];\r\n    debug_totalRequirementsCost?: string;\r\n\r\n    parent: null | EmojiSkillNode;\r\n    children: EmojiSkillNode[];\r\n};\r\nexport type EmojiSkillRequirement = {\r\n    emoji: string;\r\n    cost: number;\r\n};\r\nexport type EmojiSkillTree = {\r\n    allNodes: EmojiSkillNode[];\r\n    allRequirements: EmojiSkillRequirement[];\r\n    root: EmojiSkillNode;\r\n};\r\n\r\n\r\nexport const buildEmojiSkillTree = (): EmojiSkillTree => {\r\n    const maleSkillDoc = `${child_male}\\n${student_male}\\n${skillDoc}`;\r\n    const femaleSkillDoc = `${child_female}\\n${student_female}\\n\\n${getFemaleVariant(skillDoc)}`;\r\n    const maleNodes = parseSkillDoc(maleSkillDoc, `male`);\r\n    const femaleNodes = parseSkillDoc(femaleSkillDoc, `female`);\r\n    const babyNode: EmojiSkillNode = {\r\n        emoji: babyEmoji,\r\n        name: `baby`,\r\n        gender: `baby`,\r\n        pay: 0,\r\n        requirementEmojis: [],\r\n        startEmoji: null,\r\n        parent: null,\r\n        children: [],\r\n    };\r\n    const allNodes = [babyNode, ...maleNodes, ...femaleNodes];\r\n    const root = babyNode;\r\n\r\n    allNodes.forEach(child => {\r\n        const parent = allNodes.find(x => child.startEmoji === x.emoji);\r\n        if (!parent) { return; }\r\n\r\n        parent.children.push(child);\r\n        child.parent = parent;\r\n    });\r\n\r\n    const allRequirements = parseRequirementsDoc(requirementsDoc);\r\n\r\n    allNodes.forEach(node => {\r\n        const allCosts = node.requirementEmojis\r\n            .map(r => allRequirements.find(x => x.emoji === r) ?? { emoji: r, cost: 0 });\r\n\r\n        const summary = allCosts\r\n            .map(x => `${x.emoji} = ${x.cost}`)\r\n            .join(`\\n`);\r\n\r\n        // eslint-disable-next-line unicorn/no-reduce\r\n        const totalCost = allCosts.reduce((out, x) => { out += x.cost; return out; }, 0);\r\n        node.debug_totalRequirementsCost = `${totalCost} =\\n${summary}`;\r\n    });\r\n\r\n    const tree: EmojiSkillTree = {\r\n        allNodes,\r\n        root,\r\n        allRequirements,\r\n    };\r\n\r\n    // const allRequirements = distinct(allNodes.flatMap(x => x.requirementEmojis));\r\n    // const allRequirementsDoc = allRequirements.map(x => `${x} = 0`).join(`\\n`);\r\n\r\n    // console.log(`buildSkillTree`, { tree, maleSkillDoc, femaleSkillDoc });\r\n    return tree;\r\n};\r\n// setTimeout(buildEmojiSkillTree);\r\n\r\nconst parseRequirementsDoc = (doc: string) => {\r\n    const lines = doc.split(`\\n`).map(x => x.trim()).filter(x => x);\r\n    const nodes = lines.map(line => {\r\n        const parts = line.split(`=`).map(x => x.trim()).filter(x => x);\r\n        const r: EmojiSkillRequirement = {\r\n            emoji: parts[0],\r\n            cost: Number.parseInt(parts[1], 10),\r\n        };\r\n        return r;\r\n    });\r\n    return nodes;\r\n};\r\n\r\nconst parseSkillDoc = (doc: string, gender: 'male' | 'female') => {\r\n    const lines = doc.split(`\\n`).map(x => x.trim()).filter(x => x);\r\n    const nodes = lines.map(x => parseSkillLine(x, gender));\r\n    return nodes;\r\n};\r\n\r\nconst parseSkillLine = (skillLine: string, gender: 'male' | 'female'): EmojiSkillNode => {\r\n    const [name, payText, p1] = skillLine.split(`:`).map(x => x.trim());\r\n    const pay = Number.parseInt(payText, 10);\r\n    const [end, p2] = p1.split(`=`).map(x => x.trim());\r\n    const [start, requirementsStr] = p2.split(`+`).map(x => x.trim());\r\n    const requirements = requirementsStr.split(` `).map(x => x.trim()).filter(x => x);\r\n    return { name, pay, emoji: end, startEmoji: start, requirementEmojis: requirements, children: [], parent: null, gender };\r\n};\r\n\r\nconst getFemaleVariant = (emoji: string) => {\r\n    return emoji\r\n        .replace(new RegExp(genderCharCodes.male, `g`), genderCharCodes.female)\r\n        .replace(new RegExp(genderCharCodes.man, `g`), genderCharCodes.woman);\r\n};\r\n\r\nconst genderCharCodes = {\r\n    man: String.fromCodePoint(0x1F468),\r\n    woman: String.fromCodePoint(0x1F469),\r\n    male: String.fromCodePoint(0x1F469),\r\n    female: String.fromCodePoint(0x1F469),\r\n};\r\n\r\nconst babyEmoji = `👶`;\r\nconst child_male = `boy               : 0 : 👦 = 👶 + 🍼 🧸 👕 👖 🧦 🩲 👟 📖 🪁 🚲 🎮`;\r\nconst child_female = `girl            : 0 : 👧 = 👶 + 🍼 🧸 👚 👗 🩰 🩱 🥿 📖 🪁 🚲 🎮`;\r\nconst student_male = `  student_boy   : 0 : 👨‍🎓 = 👦 + 🍕 ✏️ 📓 📚 ⏰ 📱 💻 🚗 🧳 🎓`;\r\nconst student_female = `student_girl  : 0 : 👩‍🎓 = 👧 + 🍕 ✏️ 📓 📚 ⏰ 📱 💻 🚗 🧳 🎓`;\r\n\r\nconst skillDoc = `\r\nfactory_worker      :   20000 : 👨‍🏭 = 👨‍🎓 + 🧤 🥾 🔧 ⏲ 📋 🚗              \r\nmechanic            :   30000 : 👨‍🔧 = 👨‍🎓 + 🧤 🥾 🧰 🔧 🔩 🚚         \r\nconstruction_worker :   75000 : 👷‍♂️ = 👨‍🎓 + 🦺 🥾 🧰 🔧 🔨 ⚒ 🧱 🧨 🚙                    \r\nartist              :   35000 : 👨‍🎨 = 👨‍🎓 + 🎨 🖌 🖊 🖋 🖍 ✏️ 📒 🖼 💡 📷 🚗          \r\nsinger              :   40000 : 👨‍🎤 = 👨‍🎓 + 🎤 🎧 🎼 🎹 🥁 🎻 🎥 🚗       \r\nfarmer              :   50000 : 👨‍🌾 = 👨‍🎓 + 🧢 🥾 🥚 🐕 🐈 🐓 🐄 🐖 🐑 🐐 🚜        \r\ncook                :   40000 : 👨‍🍳 = 👨‍🎓 + 🍓 🥑 🥕 🥩 🍤 🥚 🥫 🥄 🍴 🧂 ⏰ 🔪 🚗      \r\nfirefighter         :   55000 : 👨‍🚒 = 👨‍🎓 + ⛑️ 🧯 🥾 🪓 🔔 🚒    \r\npolice_officer      :   60000 : 👮‍♂️ = 👨‍🎓 + 🧢 ⚖️ 🔫 🥊 🤼 📢 🚓             \r\ndetective           :   70000 : 🕵️‍♂️ = 👨‍🎓 + 👔 ⚖️ 🔦 🔎 📋 💼 🚓          \r\nteacher             :   50000 : 👨‍🏫 = 👨‍🎓 + 📝 📒 📕 📗 📘 📙 🚐\r\noffice_worker       :   60000 : 👨‍💼 = 👨‍🎓 + 👔 💼 💻 🗄 🪑 📁 📊 🚗             \r\ntechnologist        :   80000 : 👨‍💻 = 👨‍🎓 + 💻 ⌨️ 🖥 📱 🖱 🎮 🤖 🚗              \r\nscientist           :   90000 : 👨‍🔬 = 👨‍🎓 + 🥼 🥽 🔬 💻 🧫 🧪 ⚗️ 🚗            \r\njudge               :  120000 : 👨‍⚖️ = 👨‍🎓 + 👔 ⚖️ 💼 📚 🗃 🕰 🚗   \r\nhealth_worker       :  100000 : 👨‍⚕️ = 👨‍🎓 + 🥼 ⛑ 🔬 🩹 🩺 💊 💉 🧫 ⛑ 🚑\r\npilot               :  110000 : 👨‍✈️ = 👨‍🎓 + 🧥 🧭 💻 🕹 ✈️       \r\nastronaut           :  130000 : 👨‍🚀 = 👨‍🎓 + 🧥 🔭 💻 🕹 🚀  \r\n`;\r\n\r\nconst requirementsDoc = `\r\n🍼 = 10\r\n🧸 = 10\r\n👕 = 20\r\n👖 = 20\r\n🧦 = 10\r\n🩲 = 20\r\n👟 = 30\r\n📖 = 50\r\n🪁 = 25\r\n🚲 = 150\r\n🎮 = 200\r\n\r\n👚 = 20\r\n👗 = 20\r\n🩰 = 10\r\n🩱 = 20\r\n🥿 = 30\r\n\r\n🍕 = 30\r\n✏️ = 10\r\n📓 = 20\r\n📚 = 500\r\n⏰ = 15\r\n📱 = 350\r\n💻 = 1250\r\n🚗 = 7000\r\n🧳 = 800\r\n🎓 = 10000\r\n\r\n🧤 = 20\r\n🥾 = 80\r\n🔧 = 110\r\n⏲ = 25\r\n📋 = 15\r\n🧰 = 300\r\n🔩 = 700\r\n🚚 = 35000\r\n🦺 = 150\r\n🔨 = 75\r\n⚒ = 150\r\n🧱 = 3000\r\n🧨 = 16000\r\n🚙 = 32000\r\n🎨 = 100\r\n🖌 = 70\r\n🖊 = 50\r\n🖋 = 35\r\n🖍 = 15\r\n📒 = 15\r\n🖼 = 80\r\n💡 = 150\r\n📷 = 400\r\n🎤 = 150\r\n🎧 = 120\r\n🎼 = 750\r\n🎹 = 320\r\n🥁 = 450\r\n🎻 = 320\r\n🎥 = 1450\r\n🧢 = 25\r\n🥚 = 10\r\n🐕 = 35\r\n🐈 = 25\r\n🐓 = 30\r\n🐄 = 350\r\n🐖 = 150\r\n🐑 = 120\r\n🐐 = 100\r\n🚜 = 15000\r\n🍓 = 25\r\n🥑 = 30\r\n🥕 = 20\r\n🥩 = 75\r\n🍤 = 100\r\n🥫 = 50\r\n🥄 = 120\r\n🍴 = 350\r\n🧂 = 120\r\n🔪 = 225\r\n⛑️ = 150\r\n🧯 = 250\r\n🪓 = 50\r\n🔔 = 75\r\n🚒 = 135000\r\n⚖️ = 15000\r\n🔫 = 750\r\n🥊 = 500\r\n🤼 = 1250\r\n📢 = 150\r\n🚓 = 55000\r\n👔 = 250\r\n🔦 = 55\r\n🔎 = 85\r\n💼 = 125\r\n📝 = 25\r\n📕 = 75\r\n📗 = 25\r\n📘 = 60\r\n📙 = 30\r\n🚐 = 16000\r\n🗄 = 250\r\n🪑 = 150\r\n📁 = 50\r\n📊 = 750\r\n⌨️ = 75\r\n🖥 = 150\r\n🖱 = 50\r\n🤖 = 1500\r\n🥼 = 150\r\n🥽 = 25\r\n🔬 = 3500\r\n🧫 = 150\r\n🧪 = 300\r\n⚗️ = 250\r\n🗃 = 150\r\n🕰 = 650\r\n⛑ = 150\r\n🩹 = 100\r\n🩺 = 120\r\n💊 = 1200\r\n💉 = 1500\r\n🚑 = 75000\r\n🧥 = 550\r\n🧭 = 50\r\n🕹 = 850\r\n✈️ = 1500000\r\n🔭 = 350\r\n🚀 = 150000000\r\n`;\r\n","import { createSubscribable } from 'utils/subscribable';\r\nimport { toMap } from 'utils/objects';\r\nimport { buildEmojiSkillTree } from './emoji-skills/emoji-skill-tree';\r\n\r\nexport type EmojiIdleEmotionKind = 'excited' | 'happy' | 'normal' | 'angry' | 'sick' | 'dead';\r\nexport type EmojiIdleState = {\r\n    characterEmoji: string;\r\n    targetEmoji?: string;\r\n    targetOptions?: { emoji: string }[];\r\n    requirementsPurchased?: string[];\r\n    requirementsAvailable?: { emoji: string, cost: number }[];\r\n    requirementsRemaining?: { emoji: string, cost: number }[];\r\n    requirementsNeeded?: { emoji: string, cost: number }[];\r\n    lastPurchaseTimestamp: number;\r\n\r\n    emotion: EmojiIdleEmotionKind;\r\n    lastEmotionTimestamp: number;\r\n\r\n    money: number;\r\n\r\n    multiplier: number;\r\n    lastMultiplierChangeTimestamp: number;\r\n\r\n    townState: {\r\n        characters: {\r\n            characterEmoji: string;\r\n            finishedTimestamp: number;\r\n            // requirementsPurchased: string[];\r\n        }[];\r\n    };\r\n};\r\n\r\nconst storageKey = `EmojiIdleState`;\r\nconst storage = {\r\n    save: (value: EmojiIdleState) => { localStorage.setItem(storageKey, JSON.stringify(value)); },\r\n    load: () => {\r\n        if (!localStorage.getItem(storageKey)) { return null; }\r\n        try {\r\n            return JSON.parse(localStorage.getItem(storageKey) ?? ``);\r\n        } catch{\r\n            return null;\r\n        }\r\n    },\r\n};\r\n\r\nconst createService = () => {\r\n    const skillTree = buildEmojiSkillTree();\r\n    const reqMap = toMap(skillTree.allRequirements.map(x => ({ key: x.emoji, value: x })));\r\n\r\n    const defaultState: EmojiIdleState = {\r\n        characterEmoji: skillTree.root.emoji,\r\n        emotion: `normal`,\r\n        lastEmotionTimestamp: Date.now(),\r\n        money: 0,\r\n        multiplier: 1,\r\n        lastMultiplierChangeTimestamp: Date.now(),\r\n        lastPurchaseTimestamp: Date.now(),\r\n        townState: {\r\n            characters: [],\r\n        },\r\n    };\r\n    let s: EmojiIdleState = storage.load() ?? defaultState;\r\n\r\n    // Load missing state fields\r\n    s = { ...defaultState, ...s };\r\n\r\n    // // Hard code Missing Town Characters for Kids Accounts\r\n    // s.townState = {\r\n    //     // characters: [...skillTree.allNodes.filter(x => x.children.length <= 0).slice(0, 5).map(x => ({\r\n    //     //     characterEmoji: x.emoji,\r\n    //     //     finishedTimestamp: Date.now() - Math.random() * 1000 * 60 * 60 * 24 * 7,\r\n    //     // }))],\r\n    //     characters: [...skillTree.allNodes\r\n    //         .filter(x => x.name === `artist` && x.gender === `female`)\r\n    //         .map(x => ({\r\n    //             characterEmoji: x.emoji,\r\n    //             finishedTimestamp: Math.floor(Date.now() - 0.25 * 1000 * 60 * 60 * 24),\r\n    //         }))],\r\n    // };\r\n\r\n    const sub = createSubscribable<EmojiIdleState>(s);\r\n\r\n    const changeState = (partialState: Partial<EmojiIdleState>) => {\r\n        // console.log(`changePetState`, { partialState, before: { ...s } });\r\n        s = { ...s, ...partialState };\r\n        sub.onStateChange(s);\r\n        storage.save(s);\r\n    };\r\n\r\n    const rewardInner = (value: number) => {\r\n        // max multiplier - keeps things more linear?\r\n        const maxMultiplier = 100;\r\n        changeState({\r\n            money: s.money + s.multiplier,\r\n            multiplier: Math.min(maxMultiplier, s.multiplier + value),\r\n            lastMultiplierChangeTimestamp: Date.now(),\r\n        });\r\n    };\r\n\r\n    const punish = () => {\r\n        // This is the only way to lose multiplier\r\n        changeState({\r\n            multiplier: Math.max(1, s.multiplier - 5),\r\n            lastMultiplierChangeTimestamp: Date.now(),\r\n        });\r\n    };\r\n\r\n    const selectOption = (emoji: string) => {\r\n        // console.log(`selectOption`, { emoji });\r\n\r\n        // Choose character\r\n        if (s.targetOptions?.find(x => x.emoji === emoji)) {\r\n            if (emoji === skillTree.root.emoji) {\r\n                // Add finished character to town\r\n                s.townState.characters.push({\r\n                    characterEmoji: s.characterEmoji,\r\n                    finishedTimestamp: Date.now(),\r\n                });\r\n            }\r\n\r\n            changeState({\r\n                targetEmoji: emoji,\r\n                targetOptions: undefined,\r\n                emotion: `excited`,\r\n                lastEmotionTimestamp: Date.now(),\r\n                lastPurchaseTimestamp: Date.now(),\r\n\r\n                money: 0,\r\n                // money: emoji === skillTree.root.emoji ? 0 : s.money,\r\n            });\r\n        }\r\n\r\n        // Purchases\r\n        const r = s.requirementsAvailable?.find(x => x.emoji === emoji);\r\n        if (r && r.cost <= s.money) {\r\n            // Purchase \r\n            changeState({\r\n                requirementsPurchased: [...s.requirementsPurchased ?? [], r.emoji],\r\n                requirementsRemaining: undefined,\r\n                money: s.money - r.cost,\r\n                requirementsAvailable: undefined,\r\n                emotion: `excited`,\r\n                lastEmotionTimestamp: Date.now(),\r\n                lastPurchaseTimestamp: Date.now(),\r\n            });\r\n        }\r\n\r\n        // Ignore\r\n    };\r\n\r\n    // Update state\r\n    setInterval(() => {\r\n        const second = 1000;\r\n        const minute = 60 * second;\r\n        const hour = 60 * minute;\r\n\r\n        // console.log(`emoji - idle - service update`, {});\r\n\r\n        // This is too powerful against slow players\r\n        // // Decrease Multiplier over time\r\n        // const decTime = 3 * second;\r\n        // if (s.multiplier > 1 && Date.now() > s.lastMultiplierChangeTimestamp + decTime) {\r\n        //     const timeDelta = Date.now() - s.lastMultiplierChangeTimestamp;\r\n        //     const multChange = Math.floor(timeDelta / decTime);\r\n\r\n        //     // console.log(`emoji - idle - service`, { timeDelta, multChange });\r\n        //     changeState({\r\n        //         multiplier: Math.max(1, s.multiplier - multChange),\r\n        //         lastMultiplierChangeTimestamp: Date.now(),\r\n        //     });\r\n        // }\r\n\r\n        // Choose target\r\n        if (!s.targetEmoji && !s.targetOptions) {\r\n            const skillNode = skillTree.allNodes.find(x => x.emoji === s.characterEmoji);\r\n            if (skillNode) {\r\n                let t = skillNode.children.map(x => ({ emoji: x.emoji }));\r\n                const remainingSkills = t.filter(x => !s.townState.characters.find(c => c.characterEmoji));\r\n\r\n                if (remainingSkills.length > 0) {\r\n                    t = remainingSkills;\r\n                }\r\n\r\n                if (t.length === 0) {\r\n                    // Top of skill tree\r\n                    changeState({\r\n                        targetOptions: [{ emoji: skillTree.root.emoji }],\r\n                    });\r\n                }\r\n                // else if (t.length === 1) {\r\n                //     // Auto select\r\n                //     changeState({\r\n                //         targetEmoji: t[0].emoji,\r\n                //     });\r\n                // } \r\n                else {\r\n                    changeState({\r\n                        targetOptions: t,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Populate Available Requirements\r\n        if (s.targetEmoji) {\r\n            const targetSkillNode = skillTree.allNodes.find(x => x.emoji === s.targetEmoji);\r\n            if (targetSkillNode) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                const reqs = targetSkillNode.requirementEmojis.map(x => reqMap.get(x)).filter(x => x).map(x => x!);\r\n                const reqs_remaining = reqs.filter(x => !s.requirementsPurchased?.includes(x.emoji));\r\n                reqs_remaining.sort((a, b) => a.cost - b.cost);\r\n                const reqs_available = reqs_remaining.filter(x => x.cost <= s.money);\r\n\r\n                if (reqs_available.length !== s.requirementsAvailable?.length) {\r\n                    changeState({\r\n                        requirementsNeeded: reqs,\r\n                        requirementsAvailable: reqs_available,\r\n                    });\r\n                }\r\n\r\n                if (reqs_remaining.length !== s.requirementsRemaining?.length) {\r\n                    changeState({\r\n                        requirementsRemaining: reqs_remaining,\r\n                    });\r\n                }\r\n\r\n                // Target completed\r\n                if (reqs_remaining.length <= 0) {\r\n                    changeState({\r\n                        characterEmoji: s.targetEmoji,\r\n                        targetEmoji: undefined,\r\n                        targetOptions: undefined,\r\n                        requirementsAvailable: undefined,\r\n                        requirementsNeeded: undefined,\r\n                        requirementsPurchased: undefined,\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Emotion\r\n            if (Date.now() > (s.lastEmotionTimestamp ?? 0) + 15 * second) {\r\n                // TODO: Sickness\r\n                const emotion = Date.now() > (s.lastPurchaseTimestamp ?? 0) + 5 * minute ? `angry`\r\n                    : `normal`;\r\n\r\n                if (s.emotion !== emotion) {\r\n                    changeState({ emotion, lastEmotionTimestamp: Date.now() });\r\n                }\r\n            }\r\n        }\r\n\r\n    }, 1000);\r\n\r\n    return {\r\n        subscribePetStateChange: sub.subscribe,\r\n        reward: () => rewardInner(1),\r\n        reward_major: () => rewardInner(10),\r\n        reward_extreme: () => rewardInner(100),\r\n        punish,\r\n\r\n        selectOption,\r\n    };\r\n};\r\n\r\nexport type EmojiIdleService = ReturnType<typeof createService>;\r\n\r\nconst serviceState = {\r\n    instance: null as null | EmojiIdleService,\r\n};\r\nexport const EmojiIdleService = {\r\n    get: () => {\r\n        // eslint-disable-next-line no-return-assign\r\n        return serviceState.instance ?? (serviceState.instance = createService());\r\n    },\r\n    reset: () => {\r\n        serviceState.instance = createService();\r\n    },\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { shuffle } from 'utils/arrays';\r\nimport { EmojiIdleService, EmojiIdleState, EmojiIdleEmotionKind } from './emoji-idle-service';\r\nimport { buildEmojiSkillTree } from './emoji-skills/emoji-skill-tree';\r\n\r\nexport const styles = {\r\n    container: {\r\n        height: 40,\r\n    },\r\n    fixed: {\r\n        position: `fixed`,\r\n        top: 0, right: 0, left: 0,\r\n        zIndex: 1000,\r\n    },\r\n    inner: {\r\n        position: `relative`,\r\n        height: 40,\r\n    },\r\n    emotionEmoji: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 24,\r\n    },\r\n    characterEmoji: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 24,\r\n    },\r\n    characterEmoji_small: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n    },\r\n    costText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n        color: `#00FF00`,\r\n    },\r\n    costText_small: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 10,\r\n        color: `#00FF00`,\r\n    },\r\n    targetCharacterEmoji: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n    },\r\n    objectEmoji: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 12,\r\n    },\r\n\r\n    money: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 20,\r\n        color: `#FFFF00`,\r\n        marginLeft: 8,\r\n    },\r\n    money_small: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n        color: `#FFFF00`,\r\n    },\r\n    multiplier: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 14,\r\n        color: `#FF00FF`,\r\n        marginLeft: 8,\r\n    },\r\n    foodText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 12,\r\n        color: `#333300`,\r\n    },\r\n} as const;\r\n\r\nexport const EmojiIdleView = (props: {}) => {\r\n    const [gameState, setGameState] = useState(null as null | EmojiIdleState);\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    useEffect(() => {\r\n        const service = EmojiIdleService.get();\r\n        const sub = service.subscribePetStateChange(setGameState);\r\n        return () => sub.unsubscribe();\r\n    });\r\n\r\n    if (isExpanded && gameState) {\r\n        return (\r\n            <TownView gameState={gameState} onClose={() => setIsExpanded(false)} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.fixed}>\r\n                <View style={styles.inner}>\r\n                    <EmojiCharacterView\r\n                        emoji={gameState?.characterEmoji ?? ``}\r\n                        targetEmoji={gameState?.targetEmoji ?? ``}\r\n                        emotion={gameState?.emotion ?? null}\r\n                        purchased={gameState?.requirementsPurchased ?? []}\r\n                        onPress={() => setIsExpanded(s => !s)}\r\n                    />\r\n                    {gameState && <CommandsView gameState={gameState} />}\r\n                    {/* {gameState && gameState.food > 0 && [...new Array(gameState.food)].map((x, i) => (\r\n                        // eslint-disable-next-line react/no-array-index-key\r\n                        <View key={`${i}`} style={{ position: `absolute`, transform: `translate(${100 + i * 87 % 100}px,${4 + i * 43 % 12}px)` }} >\r\n                            <Text style={styles.foodText}>{getFoodVariant(i)}</Text>\r\n                        </View>\r\n                    ))} */}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const townStyles = {\r\n    container: {\r\n        background: `#555555`,\r\n    },\r\n    payText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 14,\r\n        color: `#FFFFFF`,\r\n    },\r\n    payText_disabled: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 14,\r\n        color: `#CCCCCC`,\r\n    },\r\n    moneyText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n        color: `#FFFF00`,\r\n    },\r\n    townMoneyText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n        color: `#00FF00`,\r\n    },\r\n} as const;\r\n\r\nconst skillTree = buildEmojiSkillTree();\r\nconst TownView = ({ gameState, onClose }: { gameState: EmojiIdleState, onClose: () => void }) => {\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const townPersons = gameState.townState.characters.map(x => ({\r\n        character: x,\r\n        skill: skillTree.allNodes.find(n => n.emoji === x.characterEmoji) ?? skillTree.root,\r\n    }))\r\n        .filter(x => x.skill.pay)\r\n        .map(x => ({\r\n            ...x,\r\n            years: (Date.now() - x.character.finishedTimestamp) / (24 * 60 * 60 * 1000),\r\n            money: Math.floor((Date.now() - x.character.finishedTimestamp) / (24 * 60 * 60 * 1000) * x.skill.pay),\r\n        }));\r\n    const missingSkills = skillTree.allNodes.filter(x => x.children.length <= 0 && !gameState.townState.characters.find(t => t.characterEmoji === x.emoji));\r\n    // eslint-disable-next-line unicorn/no-reduce\r\n    const townMoney = townPersons.reduce((out, x) => { out += x.money ?? 0; return out; }, 0);\r\n    return (\r\n        <View style={townStyles.container}>\r\n            <View>\r\n                <View style={{ background: `#333333`, flexDirection: `row`, alignItems: `center` }}>\r\n                    <View style={{ position: `relative`, width: 100, height: 40 }}>\r\n                        <View style={{ position: `absolute`, left: 0, top: 0, flexDirection: `column`, alignItems: `flex-end` }} >\r\n                            <TouchableOpacity onPress={() => onClose()}>\r\n                                <Text style={styles.characterEmoji}>{` 🏙 `}</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={{ flex: 1 }} />\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.townMoneyText}>{`$${(townMoney).toLocaleString()}`}</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={{ background: `#333333`, flexDirection: `row`, alignItems: `center` }}>\r\n                <View style={{ position: `relative`, width: 100, height: 40 }}>\r\n                    <EmojiCharacterView\r\n                        emoji={gameState?.characterEmoji ?? ``}\r\n                        targetEmoji={gameState?.targetEmoji ?? ``}\r\n                        emotion={gameState?.emotion ?? null}\r\n                        purchased={gameState?.requirementsPurchased ?? []}\r\n                        onPress={() => onClose()}\r\n                    />\r\n                </View>\r\n            </View>\r\n            {/* Finished Characters */}\r\n            {townPersons.map(x => (\r\n                <View style={{ background: `#333333`, flexDirection: `row`, alignItems: `center` }}>\r\n                    <View style={{ position: `relative`, width: 100, height: 40 }}>\r\n                        <EmojiCharacterView\r\n                            emoji={x.character.characterEmoji}\r\n                            targetEmoji=''\r\n                            emotion='happy'\r\n                            purchased={x.skill?.requirementEmojis ?? []}\r\n                        />\r\n                    </View>\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.payText}>{`$${(x.skill?.pay ?? 0).toLocaleString()}`}</Text>\r\n                    </View>\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.payText}>{`x${(x.years).toFixed(1)}`}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }} />\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.moneyText}>{`$${(x.money).toLocaleString()}`}</Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n            {/* Missing Characters */}\r\n            {missingSkills.map(x => (\r\n                <View style={{ background: `#555555`, flexDirection: `row`, alignItems: `center` }}>\r\n                    <View style={{ position: `relative`, width: 100, height: 40, opacity: 0.5 }}>\r\n                        <EmojiCharacterView\r\n                            emoji={x.emoji}\r\n                            targetEmoji=''\r\n                            emotion={null}\r\n                            purchased={[]}\r\n                        />\r\n                    </View>\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.payText_disabled}>{`$${(x.pay).toLocaleString()}`}</Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst CommandsView = ({ gameState }: { gameState: EmojiIdleState }) => {\r\n\r\n    const [offset, setOffset] = useState(0);\r\n    useEffect(() => {\r\n        setOffset(0);\r\n    }, [gameState.targetOptions, gameState.requirementsAvailable]);\r\n\r\n    if (gameState.targetOptions && gameState.targetOptions.length > 0) {\r\n        const listSize = 4;\r\n        const targetOptionsLength = gameState.targetOptions.length;\r\n        return (\r\n            <View style={{ position: `absolute`, top: 0, left: 0, right: 0 }} >\r\n                <View style={{ flexDirection: `row`, justifyContent: `center` }}>\r\n                    {gameState.targetOptions.slice(offset, offset + listSize).map(x => (\r\n                        <TouchableOpacity key={x.emoji} onPress={() => EmojiIdleService.get().selectOption(x.emoji)}>\r\n                            <View>\r\n                                <Text style={styles.characterEmoji}>{x.emoji}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                    {targetOptionsLength > listSize && (\r\n                        <TouchableOpacity onPress={() => setOffset(s => { const i = s + 5; return i >= targetOptionsLength ? 0 : i; })}>\r\n                            <View>\r\n                                <Text style={styles.characterEmoji}>{offset + listSize < targetOptionsLength ? `⏩` : `⏮`}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    // if (gameState.requirementsAvailable && gameState.requirementsAvailable.length > 0) {\r\n    //     return (\r\n    //         <View style={{ position: `absolute`, top: 0, left: 0, right: 0 }} >\r\n    //             <View style={{ alignSelf: `center`, alignItems: `center`, background: `#222222`, borderRadius: 4, padding: 4 }}>\r\n    //                 <View style={{ flexDirection: `row`, justifyContent: `center` }}>\r\n    //                     {gameState.requirementsAvailable.slice(0, 5).map(x => (\r\n    //                         <TouchableOpacity key={x.emoji} onPress={() => EmojiIdleService.get().selectOption(x.emoji)}>\r\n    //                             <View style={{ flexDirection: `column`, margin: 4, alignItems: `center`, background: `#333333`, borderRadius: 4 }}>\r\n    //                                 <Text style={styles.characterEmoji}>{x.emoji}</Text>\r\n    //                                 <Text style={styles.costText}>{`$${x.cost.toLocaleString()}`}</Text>\r\n    //                             </View>\r\n    //                         </TouchableOpacity>\r\n    //                     ))}\r\n    //                 </View>\r\n    //                 <Text style={styles.money_small}>{`$${(gameState.money ?? 0).toLocaleString()}`}</Text>\r\n    //             </View>\r\n    //         </View>\r\n    //     );\r\n    // }\r\n\r\n    const reqs = gameState.requirementsRemaining ?? [];\r\n    const reqShowLength = 3;\r\n    return (\r\n        <View>\r\n            <ScoreView {...gameState ?? { money: 0, multiplier: 1 }} />\r\n            <View style={{ position: `absolute`, left: 90, top: 0, flexDirection: `row`, zIndex: 10 }} >\r\n                {reqs.slice(0, reqShowLength).map(x => {\r\n                    const canBuy = x.cost <= gameState.money;\r\n                    return (\r\n                        <TouchableOpacity key={x.emoji} onPress={() => EmojiIdleService.get().selectOption(x.emoji)}>\r\n                            <View style={{ flexDirection: `column`, alignItems: `center`, background: canBuy ? `#003300` : `#553300`, borderRadius: 4, paddingLeft: 2, paddingRight: 2 }}>\r\n                                <Text style={styles.characterEmoji_small}>{x.emoji}</Text>\r\n                                <Text style={{ ...styles.costText_small, ...(canBuy ? {} : { color: `#FF0000` }) }}>{`$${x.cost.toLocaleString()}`}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    );\r\n                })}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst ScoreView = ({ money, multiplier }: { money: number, multiplier: number }) => {\r\n\r\n    const [moneySizeOffset, setMoneySizeOffset] = useState(0);\r\n    const [multiplierSizeOffset, setMultiplierSizeOffset] = useState(0);\r\n    const lastMultiplier = useRef(multiplier);\r\n    const [multiplierDelta, setMultiplierDelta] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        setMoneySizeOffset(5);\r\n\r\n        const update = () => {\r\n            setMoneySizeOffset(s => {\r\n                if (s > 0) {\r\n                    return s - 1;\r\n                }\r\n                clearInterval(id);\r\n                return 0;\r\n            });\r\n        };\r\n        update();\r\n\r\n        const id = setInterval(update, 25);\r\n        return () => clearInterval(id);\r\n    }, [money]);\r\n\r\n    useEffect(() => {\r\n        setMultiplierSizeOffset(10);\r\n        setMultiplierDelta(multiplier - lastMultiplier.current);\r\n        lastMultiplier.current = multiplier;\r\n\r\n        const update = () => {\r\n            setMultiplierSizeOffset(s => {\r\n                if (s > 0) {\r\n                    return s - 1;\r\n                }\r\n                clearInterval(id);\r\n                return 0;\r\n            });\r\n        };\r\n        update();\r\n\r\n        const id = setInterval(update, 25);\r\n        return () => clearInterval(id);\r\n    }, [multiplier]);\r\n\r\n\r\n    return (\r\n        <View style={{ position: `absolute`, top: 0, right: 4 }} >\r\n            <View style={{ flexDirection: `row`, justifyContent: `flex-end` }}>\r\n                <View style={{ transform: `translate(-${moneySizeOffset}px,${2 * moneySizeOffset}px) scale(${moneySizeOffset * 0.1 + 1})` }}>\r\n                    <Text style={styles.money}>{`$${(money ?? 0).toLocaleString()}`}</Text>\r\n                </View>\r\n                <View style={{ transform: `translate(-${multiplierSizeOffset}px,${2 * multiplierSizeOffset}px) scale(${multiplierSizeOffset * 0.1 + 1})` }}>\r\n                    <Text style={{ ...styles.multiplier, ...(multiplierDelta < -5 ? { color: `#FF0000` } : multiplierDelta < 0 ? { color: `#FFFF00` } : { color: `#00FF00` }) }}>{`x${(multiplier ?? 1).toLocaleString()}`.padStart(4, ` `)}</Text>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst EmojiCharacterView = ({ emoji, targetEmoji, emotion, purchased, onPress }: { emoji: string, targetEmoji: string, emotion: null | EmojiIdleEmotionKind, purchased: string[], onPress?: () => void }) => {\r\n    return (\r\n        <>\r\n            <PurchasedView purchased={purchased} />\r\n            <View style={{ position: `absolute`, left: 20, top: 0, flexDirection: `column`, alignItems: `flex-end` }} >\r\n                <TouchableOpacity onPress={() => onPress?.()}>\r\n                    <EmotionView emotion={emotion ?? null} emoji={emoji} />\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={{ position: `absolute`, left: 66, top: 0, flexDirection: `column`, alignItems: `flex-end` }} >\r\n                <Text style={styles.targetCharacterEmoji}>{`${targetEmoji}`}</Text>\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\nconst PurchasedView = ({ purchased }: { purchased: string[] }) => {\r\n    const [offset, setOffset] = useState(0);\r\n    useEffect(() => {\r\n        const update = () => {\r\n            setOffset(s => s + 1);\r\n        };\r\n        update();\r\n\r\n        const id = setInterval(update, 200);\r\n        return () => clearInterval(id);\r\n    }, [purchased.length]);\r\n\r\n    return (\r\n        <>\r\n            {purchased.map((x, i) => (\r\n                <View key={x} style={{ position: `absolute`, left: 0, top: 0, flexDirection: `column`, alignItems: `flex-end` }} >\r\n                    <View style={{ transform: `translate(${((i * 17) + offset) % 60}px,${((i * 5) + offset) % 24}px)` }}>\r\n                        <Text style={styles.objectEmoji}>{`${x}`}</Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nconst EmotionView = ({ emotion, emoji }: { emotion: null | EmojiIdleEmotionKind, emoji: string }) => {\r\n    const [display, setDisplay] = useState({ text: emoji, isEmotion: false });\r\n    useEffect(() => {\r\n        if (!emotion) {\r\n            return () => { };\r\n        }\r\n        let showEmotion = false;\r\n        let variant = 0;\r\n        const update = () => {\r\n            showEmotion = !showEmotion;\r\n            if (!showEmotion) {\r\n                setDisplay({ text: emoji, isEmotion: false });\r\n                return;\r\n            }\r\n            setDisplay({ text: getEmoji(emotion, variant++), isEmotion: true });\r\n        };\r\n        update();\r\n\r\n        const id = setInterval(update, 3000);\r\n        return () => clearInterval(id);\r\n    }, [emotion, emoji]);\r\n\r\n    return (\r\n        <Text style={display.isEmotion ? styles.emotionEmoji : styles.characterEmoji}>{display.text}</Text>\r\n    );\r\n};\r\n\r\n// 😀😁😂🤣😃😄😅😆😉😊😋😎😍😘🥰😗😙😚☺🙂🤗🤩🤔🤨😐😑😶\r\n// 🙄😏😣😥😮🤐😯😪😫🥱😴😌😛😜😝🤤😒😓😔😕🙃🤑😲☹🙁😖😞\r\n// 😟😤😢😭😦😧😨😩🤯😬😰😱🥵🥶😳🤪😵🥴😠😡🤬😷🤒🤕🤢🤮\r\n// 🤧😇🥳🥺🤠🤡🤥🤫🤭🧐🤓😈👿👹👺💀☠👻👽👾🤖💩\r\n// 🧟‍♂️\r\nconst getEmoji = (emotion: null | EmojiIdleEmotionKind, variant: number) => {\r\n    // console.log(`getEmoji`, { emotion, variant });\r\n\r\n    // Setup State\r\n    if (!emotion) { return `😶`; }\r\n\r\n    if (emotion === `excited`) {\r\n        const items = shuffle([`😁`, `😍`, `😎`, `🤩`, `🤗`, `🥳`, `😂`]);\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `happy`) {\r\n        const items = [`😀`, `🙂`, `😄`, `😃`, `😊`];\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `normal`) {\r\n        // const items = [`🙂`, `😋`, `😮`, `🤔`, `🙄`, `🥱`, `😴`];\r\n        const items = [`🙂`, `😋`, `😮`, `🙄`];\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `angry`) {\r\n        const items = [`😳`, `😟`, `😤`, `😣`, `🥺`, `😫`, `😩`];\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `sick`) {\r\n        const items = [`🤢`, `🤮`, `😵`, `🤧`, `😬`, `💩`, `😞`];\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `dead`) {\r\n        const items = [`💀`, `👻`, `🧟‍♂️`];\r\n        return items[variant % items.length];\r\n    }\r\n\r\n    // Unknown\r\n    return `👾`;\r\n};\r\n\r\nconst foodItems = shuffle(` \r\n        🍕 🍔 🍟 🌭 🍿 🥓 🥚 🧇 🥞 🧈 🥐 🍞 🥨 🥖 🥯 🧀 🥗 🥙 🥪 🌯 🌮 \r\n        🥩 🍗 🍖 🍠 🥟 🥠 🍘 🥡 🍱 🍚 🍙 🍛 🍜 🦪 🍣 🥮 🍥 🍤 🍢 🧆 \r\n        🥣 🍝 🍲 🥧 🍦 🍧 🍪 🍩 🍨 🎂 🍰 🧁 🍮 🍯 🍵 `\r\n    .replace(`\\n`, ` `).split(` `).map(x => x.trim()).filter(x => x));\r\n\r\nconst getFoodVariant = (variant: number) => {\r\n    return foodItems[variant % foodItems.length];\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { UserDataService, UserProfileInfo } from 'user-data-service/user-data-service';\r\nimport { useAutoLoadingError } from 'utils-react/hooks';\r\nimport { UserProfileManagerView } from 'user-data-service/user-profile-manager-view';\r\nimport { UserProfileSelectionView } from 'user-data-service/user-profile-selection-view';\r\nimport { View, Text, TouchableOpacity, Platform } from 'react-native-lite';\r\nimport { ProblemService } from '../problems/problems-service';\r\nimport { EmojiIdleView } from './emoji-idle-game/emoji-idle-view';\r\nimport { EmojiIdleService } from './emoji-idle-game/emoji-idle-service';\r\n\r\nexport const ProgressGameService = {\r\n    onCorrect: () => {\r\n        EmojiIdleService.get().reward();\r\n    },\r\n    onCompleteSection: () => {\r\n        EmojiIdleService.get().reward_major();\r\n    },\r\n    onCompleteSubject: () => {\r\n        EmojiIdleService.get().reward_extreme();\r\n    },\r\n    onWrong: () => {\r\n        EmojiIdleService.get().punish();\r\n    },\r\n};\r\n\r\nexport const createProgressGameProblemService = (problemSource: ProblemService, options?: {}): ProblemService => {\r\n    const service: ProblemService = {\r\n        ...problemSource,\r\n        recordAnswer: (problem, answer) => {\r\n            // (async () => UserDataService.get().markUserDataChanged())();\r\n\r\n            if (answer.isCorrect) {\r\n                ProgressGameService.onCorrect();\r\n\r\n                if (!problem.isReview && problem.isLastOfSubject) {\r\n                    ProgressGameService.onCompleteSubject();\r\n\r\n                    // Save User Data (delayed to let other state update)\r\n                    setTimeout(async () => {\r\n                        await UserDataService.get().uploadUserData();\r\n                    }, 1000);\r\n                } else if (!problem.isReview && problem.isLastOfSection) {\r\n                    ProgressGameService.onCompleteSection();\r\n\r\n                    // Save User Data (delayed to let other state update)\r\n                    setTimeout(async () => {\r\n                        await UserDataService.get().uploadUserData();\r\n                    }, 1000);\r\n                }\r\n\r\n            } else {\r\n                ProgressGameService.onWrong();\r\n            }\r\n\r\n            return problemSource.recordAnswer(problem, answer);\r\n        },\r\n    };\r\n    return service;\r\n};\r\n\r\nexport const ProgressGameView = () => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [hasSelectedProfile, setHasSelectedProfile] = useState(false);\r\n    const [userProfile, setUserProfile] = useState(null as null | UserProfileInfo);\r\n\r\n    // Save UserData after Purchase\r\n    const subscribeToSaveOnPurchase = () => {\r\n        let lastPurchase = Date.now();\r\n        const subscription = EmojiIdleService.get().subscribePetStateChange((x) => {\r\n            console.log(`ProgressGameView subscribePetStateChange`, { lastPurchase, x });\r\n            if (lastPurchase >= x.lastPurchaseTimestamp) { return; }\r\n            lastPurchase = x.lastPurchaseTimestamp;\r\n            // Save User Data (delayed to let other state update)\r\n            setTimeout(async () => {\r\n                await UserDataService.get().uploadUserData();\r\n            }, 1000);\r\n        });\r\n        return subscription;\r\n    };\r\n\r\n    useEffect(() => {\r\n        setUserProfile(UserDataService.get().getActiveUser() ?? null);\r\n        EmojiIdleService.reset();\r\n\r\n        const sub = subscribeToSaveOnPurchase();\r\n        return () => {\r\n            sub.unsubscribe();\r\n        };\r\n    }, [hasSelectedProfile]);\r\n\r\n    useEffect(() => {\r\n        // Load User Data\r\n        doWork(async () => {\r\n            await UserDataService.get().setup();\r\n            EmojiIdleService.reset();\r\n        });\r\n    }, []);\r\n\r\n    const onChangeProfile = () => {\r\n        // setHasSelectedProfile(false);\r\n        // Force Reload Page\r\n        if (Platform.OS === `web`) {\r\n            window.location.reload();\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!hasSelectedProfile) {\r\n        return <UserProfileSelectionView onUserSelected={() => setHasSelectedProfile(true)} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <EmojiIdleView />\r\n            <View>\r\n                <TouchableOpacity onPress={onChangeProfile}>\r\n                    <View style={{ flexDirection: `row`, alignItems: `center`, justifyContent: `flex-start`, padding: 4 }}>\r\n                        <Text style={{ fontSize: 32 }}>{userProfile?.emoji ?? `👤`}</Text>\r\n                        <Text style={{ fontSize: 14 }}>{userProfile?.name ?? ``}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n","\r\nexport type EmailAddress = string & { __type: 'email' };\r\nexport const toEmailAddress = (email: string): EmailAddress => {\r\n    return email.trim() as EmailAddress;\r\n};\r\n","/* eslint-disable max-classes-per-file */\r\nexport type ErrorState = { message: string, data?: unknown, error?: unknown, retryCallback?: () => void };\r\n\r\nexport class AppError extends Error implements ErrorState {\r\n    constructor(public message: string, public data?: unknown) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class ApiError extends Error implements ErrorState {\r\n    constructor(public message: string, public data?: unknown) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class MockError extends Error implements ErrorState {\r\n    constructor(public message: string, public data?: unknown) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class NotImplementedError extends Error implements ErrorState {\r\n    constructor(public message: string = `Not Implemented`, public data?: unknown) {\r\n        super();\r\n    }\r\n}\r\n","import { shuffle } from 'utils/arrays';\r\nimport { ProblemService, Problem, ProblemResult } from './problems-service';\r\n\r\nexport const createReviewProblemService = (problemSource: ProblemService, {\r\n    maxNewReviewCount = 3,\r\n    reviewSequencePreviousLength = 1,\r\n    reviewQuestionPrefix = `🔄 `,\r\n    requiredCorrectInRow = 3,\r\n}: {\r\n    maxNewReviewCount?: number;\r\n    reviewSequencePreviousLength?: number;\r\n    reviewQuestionPrefix?: string;\r\n    requiredCorrectInRow?: number;\r\n}): ProblemService => {\r\n    const state = {\r\n        problemSourceHistory: [] as Problem[],\r\n        reviewProblems: [] as { index: number, correctsInRow: number }[],\r\n        lastReviewProblem: null as null | { index: number, correctsInRow: number },\r\n        reviewSequence: null as null | { iNext: number, iStart: number, iEnd: number },\r\n        repeatState: `new` as 'new' | 'review',\r\n    };\r\n\r\n    const startReview = () => {\r\n        console.log(`createReviewProblemService startReview`, state);\r\n        state.repeatState = `review`;\r\n    };\r\n\r\n    const getReviewProblem = (): null | Problem => {\r\n        console.log(`createReviewProblemService getReviewProblem`, state);\r\n\r\n        const rSeq = state.reviewSequence;\r\n        if (rSeq && rSeq.iNext > rSeq.iEnd) {\r\n            console.log(`createReviewProblemService getReviewProblem - End of Sequence`, { rSeq, state });\r\n            state.reviewSequence = null;\r\n        }\r\n\r\n        if (!state.reviewSequence) {\r\n            // If reached end of review problems, exit review mode\r\n            const reviewProblem = state.reviewProblems.find(x => x.index > (state.lastReviewProblem?.index ?? -1));\r\n            if (!reviewProblem) {\r\n                console.log(`createReviewProblemService getReviewProblem - No Review Problem (with greater order than last)`, { reviewProblems: state.reviewProblems, lastReviewProblem: state.lastReviewProblem, state });\r\n                state.lastReviewProblem = null;\r\n                return null;\r\n            }\r\n\r\n            const lastReviewProblemIndex = state.lastReviewProblem?.index ?? -1;\r\n            state.lastReviewProblem = reviewProblem;\r\n\r\n            console.log(`createReviewProblemService getReviewProblem - Start Review Sequence`, state);\r\n            const iStart = Math.max(0, reviewProblem.index - reviewSequencePreviousLength, lastReviewProblemIndex + 1);\r\n\r\n            state.reviewSequence = {\r\n                iNext: iStart,\r\n                iStart,\r\n                iEnd: reviewProblem.index,\r\n            };\r\n        }\r\n\r\n        // Next in sequence\r\n        const seq = state.reviewSequence;\r\n        const p = state.problemSourceHistory[seq.iNext];\r\n        seq.iNext++;\r\n\r\n        return {\r\n            ...p,\r\n            question: reviewQuestionPrefix + p.question,\r\n            answers: shuffle(p.answers),\r\n        };\r\n    };\r\n\r\n    const service: ProblemService = {\r\n        load: problemSource.load,\r\n        save: problemSource.save,\r\n\r\n        getSections: problemSource.getSections,\r\n        gotoSection: problemSource.gotoSection,\r\n\r\n        getNextProblem: (): ProblemResult => {\r\n            console.log(`createReviewProblemService getNextProblem`, state);\r\n\r\n            if (state.repeatState === `review`) {\r\n                const reviewProblem = getReviewProblem();\r\n                if (reviewProblem) {\r\n                    return { ...reviewProblem, isReview: true };\r\n                }\r\n\r\n                console.log(`createReviewProblemService getNextProblem - No Review Problem - Change Mode to NEW`, state);\r\n                state.repeatState = `new`;\r\n            }\r\n\r\n            if (state.reviewProblems.filter(x => x.correctsInRow <= 1).length >= maxNewReviewCount) {\r\n                startReview();\r\n                return service.getNextProblem();\r\n            }\r\n\r\n            const newProblem = problemSource.getNextProblem();\r\n            if (newProblem.question) {\r\n                state.problemSourceHistory.push(newProblem);\r\n            } else {\r\n                // Done - Finish Review\r\n                startReview();\r\n                return service.getNextProblem();\r\n            }\r\n            return newProblem;\r\n        },\r\n        recordAnswer: (problem, answer) => {\r\n            console.log(`createReviewProblemService recordAnswer`, state);\r\n\r\n            // if (answer.isCorrect) {\r\n\r\n            //     problemSource.recordAnswer(problem, answer);\r\n            //     return;\r\n            // }\r\n\r\n            const i = state.problemSourceHistory.findIndex(x => x.key === problem.key);\r\n            if (i < 0) {\r\n                problemSource.recordAnswer(problem, answer);\r\n                return;\r\n            }\r\n\r\n            const problemAlreadyInReview = state.reviewProblems.find(x => x.index === i);\r\n            if (answer.isCorrect) {\r\n                // Correct\r\n                if (problemAlreadyInReview) {\r\n                    problemAlreadyInReview.correctsInRow++;\r\n\r\n                    // Remove if enough corrects in a row \r\n                    state.reviewProblems = state.reviewProblems.filter(x => x.correctsInRow <= requiredCorrectInRow);\r\n                }\r\n            } else {\r\n                // Wrong \r\n                // eslint-disable-next-line no-lonely-if\r\n                if (problemAlreadyInReview) {\r\n                    problemAlreadyInReview.correctsInRow = 0;\r\n                } else {\r\n                    // Insert Review Problem in Index order\r\n                    const newReview = { index: i, correctsInRow: 0, _debug_problemKey: problem.key };\r\n                    state.reviewProblems.push(newReview);\r\n                    state.reviewProblems.sort((a, b) => a.index - b.index);\r\n                    // state.problemsToReview = distinct_key(state.problemsToReview, x => `${x.index}`);\r\n                }\r\n            }\r\n\r\n\r\n            problemSource.recordAnswer(problem, answer);\r\n        },\r\n    };\r\n\r\n    return service;\r\n};\r\n","export const uploadApiConfig = {\r\n    uploadApiUrl: `https://s7mrgkmtk5.execute-api.us-east-1.amazonaws.com/prod/upload-api`,\r\n};\r\n","import './index.css';\r\nimport React, { ReactNode, useRef } from 'react';\r\nimport { ThemeTextStyle, ThemeViewStyle } from 'themes/theme';\r\n\r\nfunction mergeStyles<T>(items: (T | undefined | null) | (T | T[] | undefined | null)[]): T {\r\n    if (Array.isArray(items)) {\r\n        if (items.length === 1) { return mergeStyles(items[0]) ?? {} as T; }\r\n        let item = { ...mergeStyles(items[0]) };\r\n        items.forEach(x => { item = { ...item, ...mergeStyles(x ?? {}) }; });\r\n        return (item ?? {}) as T;\r\n    }\r\n    return items as T;\r\n};\r\n\r\nconst viewStyleDefaults = {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n} as const;\r\n\r\nconst textStyleDefaults = {\r\n    whiteSpace: `pre`,\r\n} as const;\r\n\r\nconst finalizeTextStyle = <T extends unknown>(style: T) => {\r\n    const s = style as {\r\n        userSelect?: 'none';\r\n        MozUserSelect?: 'none';\r\n        WebkitUserSelect?: 'none';\r\n    };\r\n    if (s.userSelect === `none`) {\r\n        s.MozUserSelect = `none`;\r\n        s.WebkitUserSelect = `none`;\r\n    }\r\n\r\n    return style;\r\n};\r\n\r\nexport const View = (props: { style?: ThemeViewStyle | ThemeViewStyle[], children?: ReactNode }) => { return (<div style={mergeStyles([viewStyleDefaults, props.style])}>{props.children}</div>); };\r\nexport const Text = (props: { style?: ThemeTextStyle | ThemeTextStyle[], children?: string, numberOfLines?: undefined | 1 }) => {\r\n    if (props.numberOfLines === 1) {\r\n        const singleLineStyle = {\r\n            overflow: `hidden`,\r\n            whiteSpace: `nowrap`,\r\n            wordWrap: `break-word`,\r\n            textOverflow: `ellipsis`,\r\n        } as const;\r\n        const allStyles = mergeStyles([textStyleDefaults, props.style, singleLineStyle]);\r\n        return (<span style={finalizeTextStyle(allStyles)}>{props.children}</span>);\r\n    }\r\n    const allStyles = mergeStyles([textStyleDefaults, props.style]);\r\n    return (<span style={finalizeTextStyle(allStyles)}>{props.children}</span>);\r\n};\r\nexport const TextInput = (props: {\r\n    style?: ThemeTextStyle | ThemeTextStyle[];\r\n    keyboardType: 'default' | 'numeric' | 'phone-pad' | 'email-address';\r\n    autoCompleteType: 'off' | 'username' | 'password' | 'email' | 'name' | 'tel' | 'street-address' | 'postal-code';\r\n    secureTextEntry?: boolean;\r\n    placeholder?: string;\r\n    editable?: boolean;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    onSubmitEditing?: () => void;\r\n    onFocus?: () => void;\r\n    onBlur?: () => void;\r\n}) => {\r\n    const type = props.keyboardType === `numeric` ? `number`\r\n        : (props.secureTextEntry ? `password`\r\n            : `text`);\r\n\r\n    const name = props.autoCompleteType === `username` ? `username`\r\n        : (props.autoCompleteType === `password` ? `password`\r\n            : undefined);\r\n\r\n    const onKeyPress = props.onSubmitEditing && ((e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === `Enter` && !e.shiftKey) {\r\n            e.preventDefault();\r\n            props.onSubmitEditing?.();\r\n        }\r\n    }) || undefined;\r\n\r\n    return (<input type={type}\r\n        name={name} id={name}\r\n        style={mergeStyles([textStyleDefaults, props.style])}\r\n        placeholder={props.placeholder}\r\n        disabled={!(props.editable ?? true)}\r\n        value={props.value}\r\n        onFocus={props.onFocus}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        onKeyPress={onKeyPress}\r\n        onBlur={props.onBlur}\r\n    />);\r\n\r\n};\r\nexport const TouchableOpacity = (props: { style?: ThemeViewStyle | ThemeViewStyle[], children?: ReactNode, onPress: () => void }) => {\r\n\r\n    // Prevent Initial Press (already pressing when created)\r\n    const lastPressTime = useRef(Date.now());\r\n    const onPress = () => {\r\n        // Prevent duplicate triggers\r\n        if (Date.now() < lastPressTime.current + 250) {\r\n            // console.log(`TouchableOpacity - prevented duplicate trigger`, { lastPressTime: lastPressTime.current, now: Date.now() });\r\n            return;\r\n        }\r\n        lastPressTime.current = Date.now();\r\n\r\n        props.onPress();\r\n    };\r\n\r\n    const hasTouchStarted = useRef(true);\r\n\r\n    return (\r\n        <div style={mergeStyles([viewStyleDefaults, props.style])}\r\n            onClick={onPress}\r\n            onKeyPress={onPress}\r\n            onTouchStart={() => { hasTouchStarted.current = true; }}\r\n            onTouchMove={() => { hasTouchStarted.current = false; }}\r\n            onTouchEnd={() => { if (hasTouchStarted.current) { onPress(); } }}\r\n            role='button'\r\n            tabIndex={0}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Pressable = (props: { style?: ThemeViewStyle | ThemeViewStyle[], children?: ReactNode, onPressIn: () => void, onPressOut: () => void }) => {\r\n\r\n    const onIgnore = (e: React.MouseEvent | React.TouchEvent) => {\r\n        e.preventDefault();\r\n        e.stopPropagation?.();\r\n        (e as unknown as { [key: string]: boolean }).cancelBubble = true;\r\n        (e as unknown as { [key: string]: boolean }).returnValue = false;\r\n        return false;\r\n    };\r\n\r\n    const onPressIn = (e: React.MouseEvent | React.TouchEvent) => {\r\n        props.onPressIn();\r\n        return onIgnore(e);\r\n    };\r\n    const onPressOut = (e: React.MouseEvent | React.TouchEvent) => {\r\n        props.onPressOut();\r\n        return onIgnore(e);\r\n    };\r\n\r\n    return (\r\n        <div style={mergeStyles([viewStyleDefaults, props.style])}\r\n            onMouseDown={onPressIn}\r\n            onMouseUp={onPressOut}\r\n            onTouchStart={onPressIn}\r\n            onTouchEnd={onPressOut}\r\n            onTouchCancel={onPressOut}\r\n            onTouchMove={onIgnore}\r\n            onMouseLeave={onPressOut}\r\n            onTouchEndCapture={onPressOut}\r\n            role='button'\r\n            tabIndex={0}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const ActivityIndicator = ({ size, color }: { size: 'large' | 'small', color: string }) => {\r\n    const sizePx = size === `small` ? 16 : 32;\r\n    return (\r\n        <CircleSvg size={sizePx} thickness={sizePx / 8} color={color} />\r\n    );\r\n};\r\n\r\n// Based on: https://glennmccomb.com/articles/building-a-pure-css-animated-svg-spinner/\r\nconst CircleSvg = ({ size, thickness, color }: { size: number, thickness: number, color: string }) => {\r\n    const circumference = 2 * Math.PI * (size - thickness) * 0.5;\r\n    const dashLength = circumference * 0.6;\r\n    return (\r\n        <svg style={{ maxWidth: size }} viewBox={`0 0 ${size} ${size}`} xmlns='http://www.w3.org/2000/svg'>\r\n            <circle style={{\r\n                fill: `transparent`,\r\n                stroke: color,\r\n                strokeWidth: thickness,\r\n                opacity: 0.5,\r\n            }} cx={size * 0.5} cy={size * 0.5} r={size * 0.5 - thickness} />\r\n            <circle className='activity-spinner' style={{\r\n                strokeDasharray: dashLength,\r\n                fill: `transparent`,\r\n                stroke: color,\r\n                strokeWidth: thickness,\r\n                transformOrigin: `${size * 0.5}px ${size * 0.5}px`,\r\n            }} cx={size * 0.5} cy={size * 0.5} r={size * 0.5 - thickness} />\r\n        </svg>\r\n    );\r\n};\r\n\r\n\r\nexport const Platform = {\r\n    OS: `web` as 'web' | 'ios' | 'android',\r\n};\r\n\r\nexport const Clipboard = {\r\n    setString: async (value: string) => { await navigator.clipboard.writeText(value); },\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Text, View, ActivityIndicator, TouchableOpacity } from 'react-native-lite';\r\nimport { SpeechService } from './speech';\r\n\r\nexport const VoiceChooser = ({ languange, speechService }: { languange: string, speechService: SpeechService }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [renderId, setRenderId] = useState(0);\r\n\r\n    const refresh = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n    };\r\n\r\n    useEffect(() => {\r\n        refresh();\r\n    }, []);\r\n\r\n    const selectVoice = (voice: SpeechSynthesisVoice) => {\r\n        speechService.setVoiceForLanguange(languange, voice);\r\n        setRenderId(s => s + 1);\r\n        speechService.speak(voice.name, languange);\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <TouchableOpacity onPress={refresh}>\r\n                <Text style={{ fontSize: 24 }}>{`Voice for ${languange}`}</Text>\r\n            </TouchableOpacity>\r\n            {loading && <ActivityIndicator size='small' color='red' />}\r\n            {!loading && (\r\n                <>\r\n                    {speechService.getVoicesForLanguange(languange).map(x => (\r\n                        <TouchableOpacity key={x.voice.name} onPress={() => { selectVoice(x.voice); }}>\r\n                            <View>\r\n                                <Text style={{ margin: 4, fontSize: 14, whiteSpace: `normal` }} >{`${x.isSelected ? `✅` : `🔲`} ${x.voice.lang} - ${x.voice.name} - ${x.voice.localService ? `local` : `web`}`}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n","\r\nexport type Subscription<T> = (state: T) => void;\r\n\r\nexport const createSubscribable = <T>(initialState?: T) => {\r\n    let lastState = initialState;\r\n    const callbacks = [] as (null | Subscription<T>)[];\r\n    const subscribe = (callback: Subscription<T>) => {\r\n        const i = callbacks.length;\r\n        callbacks.push(callback);\r\n\r\n        // Send Initial State if it exists\r\n        setTimeout(() => {\r\n            if (!lastState) { return; }\r\n            callback(lastState);\r\n        });\r\n\r\n        return {\r\n            unsubscribe: () => {\r\n                callbacks[i] = null;\r\n            },\r\n        };\r\n    };\r\n    const onStateChange = (state: T) => {\r\n        lastState = state;\r\n        callbacks.forEach(x => x?.(state));\r\n    };\r\n    return {\r\n        subscribe,\r\n        onStateChange,\r\n    };\r\n};\r\n","import { fetchWithTimeout } from 'utils/web-request';\r\nimport { AppError } from 'utils/error';\r\nimport { UploadUrl } from './types';\r\nimport { createUploadApiWebClient } from './web-client';\r\n\r\nexport const downloadData = async (getUrl: string) => {\r\n    const result = await fetchWithTimeout(getUrl, {\r\n        method: `GET`,\r\n        headers: {\r\n            'Accept': `application/json`,\r\n        },\r\n    });\r\n    const json = await result.json() as { data: unknown };\r\n    return json.data;\r\n};\r\n\r\n\r\nexport const createUploader = (uploadUrl: UploadUrl) => {\r\n    return {\r\n        uploadData: async (data: unknown) => {\r\n            const body = JSON.stringify({ data });\r\n            const result = await fetchWithTimeout(uploadUrl.putUrl, {\r\n                method: `PUT`,\r\n                headers: {\r\n                    'Accept': `application/json`,\r\n                    'Content-Type': `application/json`,\r\n                    'Content-Length': `${body.length}`,\r\n                },\r\n                body,\r\n            });\r\n\r\n            if (!result.ok) {\r\n                throw new AppError(`Upload Failed`);\r\n            }\r\n        },\r\n        downloadData: async (): Promise<unknown> => {\r\n            return await downloadData(uploadUrl.getUrl);\r\n        },\r\n    };\r\n};\r\n\r\nexport const createSmartUploader = <T extends {}>(args: { getUploadUrl: () => Promise<null | UploadUrl>, setUploadUrl: (uploadUrl: UploadUrl) => Promise<void>, uploadUrlPrefix: string, uploadApiUrl: string }) => {\r\n    const uploadApiWebClient = createUploadApiWebClient(args);\r\n\r\n    let _uploadUrl = null as null | UploadUrl;\r\n\r\n    const setupUploadUrl = async () => {\r\n        if (_uploadUrl) { return _uploadUrl; }\r\n\r\n        _uploadUrl = await args.getUploadUrl();\r\n        if (_uploadUrl) { return _uploadUrl; }\r\n\r\n        _uploadUrl = (await uploadApiWebClient.createUploadUrl({ prefix: args.uploadUrlPrefix })).uploadUrl;\r\n        await args.setUploadUrl(_uploadUrl);\r\n        return _uploadUrl;\r\n    };\r\n\r\n    return {\r\n        load: async (): Promise<null | T> => {\r\n            const uploadUrl = await setupUploadUrl();\r\n\r\n            try {\r\n                const data = await downloadData(uploadUrl.getUrl);\r\n                return data as T;\r\n            } catch{\r\n                return null;\r\n            }\r\n        },\r\n        save: async (data: T) => {\r\n            let uploadUrl = await setupUploadUrl();\r\n\r\n            try {\r\n                const uploader = createUploader(uploadUrl);\r\n                await uploader.uploadData(data);\r\n            } catch{\r\n                // Try again after renew upload token\r\n                uploadUrl = (await uploadApiWebClient.renewUploadUrl({ uploadUrl })).uploadUrl;\r\n                await args.setUploadUrl(uploadUrl);\r\n                _uploadUrl = uploadUrl;\r\n\r\n                const uploader = createUploader(uploadUrl);\r\n                await uploader.uploadData(data);\r\n            }\r\n\r\n            // Upload backup (temp)\r\n            const backupUrl = (await uploadApiWebClient.createUploadUrl({ prefix: `backup/${uploadUrl.relativePath}` })).uploadUrl;\r\n            const backupUploader = createUploader(backupUrl);\r\n            await backupUploader.uploadData(data);\r\n        },\r\n    };\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, ActivityIndicator, TouchableOpacity } from 'react-native-lite';\r\nimport { groupItems } from 'utils/arrays';\r\nimport { toKeyValueArray } from 'utils/objects';\r\nimport { useAutoLoadingError } from 'utils-react/hooks';\r\nimport { defaultDoodleDrawing, DoodleSegment, DoodleDrawing, doodleSegmentToSvgPath_line, DoodleDataWithScore } from './doodle';\r\nimport { createDoodleDrawingStorageService } from './doodle-storage';\r\n\r\nexport const styles = {\r\n    drawing: {\r\n        width: 312,\r\n        height: 312,\r\n        color: `#FFFFFF`,\r\n        backgroundColor: `#000000`,\r\n    },\r\n};\r\n\r\nexport const DoodleTestView = (props: {}) => {\r\n    const [doodle, setDoodle] = useState(defaultDoodleDrawing());\r\n\r\n    return (\r\n        <>\r\n            <DoodleDrawerView style={styles.drawing} drawing={doodle} onChange={setDoodle} />\r\n            <DoodleDisplayView style={styles.drawing} drawing={doodle} />\r\n        </>\r\n    );\r\n};\r\n\r\n// export const DoodleDrawingView = (props: { drawing?: DoodleDrawing, onDrawingChanged: (drawing: DoodleDrawing) => void }) => {\r\n\r\n//     const [doodle, setDoodle] = useState(props.drawing ?? defaultDoodleDrawing());\r\n//     const changeDoodle = (value: DoodleDrawing) => {\r\n//         setDoodle(value);\r\n//         props.onDrawingChanged(value);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <DoodleDrawer style={styles.drawing} drawing={doodle} onChange={changeDoodle} />\r\n//             {/* <div>\r\n//                 {JSON.stringify(doodle)}\r\n//             </div> */}\r\n//             {/* <div>\r\n//                 {JSON.stringify(decodeDoodleDrawing(encodeDoodleDrawing(doodle)))}\r\n//             </div> */}\r\n\r\n//             {/* <div>\r\n//                 {encodeDoodleDrawing(doodle).doodleText}\r\n//             </div> */}\r\n//             {/* <div>\r\n//                 {encodeDoodleDrawing(decodeDoodleDrawing(encodeDoodleDrawing(doodle))).doodleText}\r\n//             </div>  */}\r\n//         </>\r\n//     );\r\n// };\r\n\r\n\r\nexport const DoodleDrawerView = (props: { style: { width: number, height: number, color: string, backgroundColor: string }, drawing: DoodleDrawing, onChange: (drawing: DoodleDrawing) => void }) => {\r\n    const { style, drawing, onChange } = props;\r\n    const scale = style.width / drawing.width;\r\n\r\n    const [segment, setSegment] = useState(null as null | DoodleSegment);\r\n    const segmentClientStart = useRef(null as null | { clientX: number, clientY: number, x: number, y: number });\r\n    const divHost = useRef(null as null | HTMLDivElement);\r\n\r\n    type Ev = React.SyntheticEvent;\r\n\r\n    const onIgnore = (e: Ev) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        e.nativeEvent.cancelBubble = true;\r\n        e.nativeEvent.returnValue = false;\r\n        return false;\r\n    };\r\n\r\n    const onPressIn = (event: (Ev) & { clientX?: number, clientY?: number }, pos?: { clientX: number, clientY: number }) => {\r\n        // console.log(`onPressIn`, { event, pos });\r\n        const div = divHost.current;\r\n        if (!div) { return onIgnore(event); }\r\n\r\n        const rect = div.getBoundingClientRect();\r\n\r\n\r\n        const p = {\r\n            clientX: pos?.clientX ?? event.clientX ?? 0,\r\n            clientY: pos?.clientY ?? event.clientY ?? 0,\r\n        };\r\n\r\n        segmentClientStart.current = {\r\n            clientX: p.clientX,\r\n            clientY: p.clientY,\r\n            x: Math.floor((p.clientX - rect.x) / scale),\r\n            y: Math.floor((p.clientY - rect.y) / scale),\r\n        };\r\n\r\n        setSegment({\r\n            points: [{\r\n                x: segmentClientStart.current.x,\r\n                y: segmentClientStart.current.y,\r\n            }],\r\n        });\r\n\r\n        return onIgnore(event);\r\n    };\r\n    const onPressOut = (event: Ev) => {\r\n        // console.log(`onPressOut`, { event });\r\n        const s = segment;\r\n        if (!s) { return onIgnore(event); }\r\n\r\n        onChange({\r\n            ...drawing,\r\n            segments: [...drawing.segments, s],\r\n        });\r\n        setSegment(null);\r\n        segmentClientStart.current = null;\r\n\r\n        return onIgnore(event);\r\n    };\r\n    const onMove = (pos: { x: number, y: number }) => {\r\n        setSegment(s => {\r\n            if (!s) { return null; }\r\n            const lastPos = s.points[s.points.length - 1];\r\n            if (Math.abs(lastPos.x - pos.x) + Math.abs(lastPos.y - pos.y) <= 2) {\r\n                return s;\r\n            }\r\n            return { points: [...s.points, pos] };\r\n        });\r\n    };\r\n    const onClientMove = (event: (Ev) & { clientX?: number, clientY?: number }, pos?: { clientX: number, clientY: number }) => {\r\n        if (!segmentClientStart.current) {\r\n            return onIgnore(event);\r\n        }\r\n\r\n        // console.log(`onClientMove`, { event, pos });\r\n        const p = {\r\n            clientX: pos?.clientX ?? event.clientX ?? 0,\r\n            clientY: pos?.clientY ?? event.clientY ?? 0,\r\n        };\r\n        const dPos = {\r\n            x: Math.floor((p.clientX - segmentClientStart.current.clientX) / scale) + segmentClientStart.current.x,\r\n            y: Math.floor((p.clientY - segmentClientStart.current.clientY) / scale) + segmentClientStart.current.y,\r\n        };\r\n\r\n        onMove(dPos);\r\n        return onIgnore(event);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     console.log(`divHost`, { divHost });\r\n    //     const div = divHost.current;\r\n    //     if (!div) { return () => { }; }\r\n\r\n    //     const onTouchStart = (x: Event) => onPressIn(x, (x as TouchEvent).touches[0]);\r\n    //     const onTouchMove = (x: Event) => onClientMove(x, (x as TouchEvent).touches[0]);\r\n\r\n    //     div.addEventListener(`mouseDown`, onPressIn, { passive: false });\r\n    //     div.addEventListener(`onTouchStart`, onTouchStart, { passive: false });\r\n    //     div.addEventListener(`onMouseUp`, onPressOut, { passive: false });\r\n    //     div.addEventListener(`onTouchEnd`, onPressOut, { passive: false });\r\n    //     div.addEventListener(`onMouseLeave`, onPressOut, { passive: false });\r\n    //     div.addEventListener(`onTouchEndCapture`, onPressOut, { passive: false });\r\n    //     div.addEventListener(`onMouseMove`, onClientMove, { passive: false });\r\n    //     div.addEventListener(`onTouchMove`, onTouchMove, { passive: false });\r\n\r\n    //     return () => {\r\n    //         div.removeEventListener(`mouseDown`, onPressIn);\r\n    //         div.removeEventListener(`onTouchStart`, onTouchStart);\r\n    //         div.removeEventListener(`onMouseUp`, onPressOut);\r\n    //         div.removeEventListener(`onTouchEnd`, onPressOut);\r\n    //         div.removeEventListener(`onMouseLeave`, onPressOut);\r\n    //         div.removeEventListener(`onTouchEndCapture`, onPressOut);\r\n    //         div.removeEventListener(`onMouseMove`, onClientMove);\r\n    //         div.removeEventListener(`onTouchMove`, onTouchMove);\r\n    //     };\r\n    // }, [divHost.current]);\r\n\r\n    useEffect(() => {\r\n        // console.log(`Disable scroll on touch`);\r\n        // Disable document scroll\r\n        const onIgnoreNative = (e: Event) => {\r\n            // If not drawing, don't ignore\r\n            if (!segmentClientStart.current) { return true; }\r\n\r\n            // console.log(`Prevent scroll on touch`);\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            e.cancelBubble = true;\r\n            e.returnValue = false;\r\n            return false;\r\n        };\r\n        document.addEventListener(`touchmove`, onIgnoreNative, { passive: false });\r\n        return () => {\r\n            document.removeEventListener(`touchmove`, onIgnoreNative);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ position: `relative`, width: style.width, height: style.height, backgroundColor: style.backgroundColor }}>\r\n                <svg style={{ width: style.width, height: style.height }} viewBox={`0 0 ${drawing.width} ${drawing.height}`} preserveAspectRatio='none' xmlns='http://www.w3.org/2000/svg'>\r\n                    {drawing.segments.map((x, i) => (\r\n                        <path key={i} d={doodleSegmentToSvgPath_line(x)} stroke={style.color} fill='transparent' />\r\n                    ))}\r\n                    {segment && (\r\n                        <path d={doodleSegmentToSvgPath_line(segment)} stroke={style.color} fill='transparent' />\r\n                    )}\r\n                </svg>\r\n                <div ref={divHost} style={{ position: `absolute`, left: 0, right: 0, top: 0, bottom: 0, zIndex: 10 }}\r\n                    onMouseDown={onPressIn}\r\n                    onMouseUp={onPressOut}\r\n                    onMouseMove={onClientMove}\r\n                    onMouseLeave={onPressOut}\r\n                    onTouchStart={x => onPressIn(x, x.touches[0])}\r\n                    onTouchEnd={onPressOut}\r\n                    onTouchCancel={onPressOut}\r\n                    onTouchMove={x => onClientMove(x, x.touches[0])}\r\n                    onTouchEndCapture={onPressOut}\r\n                />\r\n            </div>\r\n            {/* <div>{doodleToSvg(drawing)}</div>\r\n            <div>{encodeDoodleDrawing(drawing).doodleText}</div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport const DoodleDisplayView = (props: {\r\n    style: { width: number, height: number, color: string, backgroundColor: string };\r\n    drawing: DoodleDrawing;\r\n    shouldAnimate?: boolean;\r\n    animatePointsPerSecond?: number;\r\n    enableRedraw?: boolean;\r\n}) => {\r\n\r\n    const [redrawId, setRedrawId] = useState(0);\r\n\r\n    const redraw = () => {\r\n        if (!props.enableRedraw) { return; }\r\n        setRedrawId(s => s + 1);\r\n    };\r\n\r\n    if (props.enableRedraw) {\r\n        return (\r\n            <TouchableOpacity onPress={redraw}>\r\n                <DoodleDisplayView_Inner key={redrawId} {...props} shouldAnimate={redrawId > 0 ? true : (props.shouldAnimate ?? true)} />\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n    return (\r\n        <DoodleDisplayView_Inner {...props} />\r\n    );\r\n};\r\nconst DoodleDisplayView_Inner = ({\r\n    style,\r\n    drawing,\r\n    shouldAnimate = true,\r\n    animatePointsPerSecond = 20,\r\n}: {\r\n    style: { width: number, height: number, color: string, backgroundColor: string };\r\n    drawing: DoodleDrawing;\r\n    shouldAnimate?: boolean;\r\n    animatePointsPerSecond?: number;\r\n}) => {\r\n    const [tick, setTick] = useState(0);\r\n    const totalPoints = drawing.segments.flatMap(x => x.points).length;\r\n\r\n    useEffect(() => {\r\n        if (!shouldAnimate) { return () => { }; }\r\n\r\n        // console.log(`DoodleDisplayView_Inner.useEffect`);\r\n        const id = setInterval(() => {\r\n            // console.log(`DoodleDisplayView_Inner.useEffect.setInterval`);\r\n            setTick(s => {\r\n                if (s > totalPoints) { clearInterval(id); }\r\n                return s + Math.ceil(animatePointsPerSecond / 10);\r\n            });\r\n        }, 10);\r\n\r\n        return () => {\r\n            clearInterval(id);\r\n        };\r\n    }, [drawing]);\r\n\r\n    let remainingPoints = shouldAnimate ? tick : Number.MAX_SAFE_INTEGER;\r\n    return (\r\n        <div style={{ width: style.width, height: style.height, backgroundColor: style.backgroundColor }}>\r\n            <svg style={{ width: style.width, height: style.height }} viewBox={`0 0 ${drawing.width} ${drawing.height}`} preserveAspectRatio='none' xmlns='http://www.w3.org/2000/svg'>\r\n                {drawing.segments.map((x, i) => {\r\n                    const maxPoints = remainingPoints;\r\n                    remainingPoints = Math.max(0, remainingPoints - x.points.length);\r\n                    return (\r\n                        <path key={i} d={doodleSegmentToSvgPath_line({ points: [...x.points.slice(0, maxPoints)] })} stroke={style.color} fill='transparent' />\r\n                    );\r\n                })}\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DoodleBrowser = () => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [doodles, setDoodles] = useState([] as DoodleDataWithScore[]);\r\n    useEffect(() => {\r\n        doWork(async () => {\r\n            const service = await createDoodleDrawingStorageService();\r\n            const result = await service.getAllDrawings();\r\n            setDoodles(result.doodles);\r\n        });\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <ActivityIndicator size='large' color='#FFFF00' />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <DoodleBrowseView doodles={doodles} />\r\n    );\r\n};\r\nexport const DoodleBrowseView = ({ doodles }: { doodles: DoodleDataWithScore[] }) => {\r\n\r\n    const grouped = toKeyValueArray(groupItems(doodles, x => x.prompt));\r\n\r\n    return (\r\n        <>\r\n            {grouped.map(g => (\r\n                <View key={g.key} style={{ padding: 4 }}>\r\n                    <Text style={{ fontSize: 12 }} >{g.key}</Text>\r\n                    <View style={{ padding: 4, flexDirection: `row`, flexWrap: `wrap` }}>\r\n                        {g.value.map(x => (\r\n                            <View key={x.key} style={{ padding: 4, alignItems: `center` }}>\r\n                                <DoodleDisplayView style={{ width: 104, height: 104, color: `#FFFFFF`, backgroundColor: `#000000` }} drawing={x.drawing} shouldAnimate={false} enableRedraw />\r\n                                <Text >{`${x.score}`}</Text>\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n                </View>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n","import { createSubscribable } from 'utils/subscribable';\r\nimport { AppError } from 'utils/error';\r\nimport { WebsocketApi, WebsocketConnectionEvent, WebsocketConnectionData } from './types';\r\n\r\nexport const createWebsocketClient = (config: { websocketsApiUrl: string }): WebsocketApi => {\r\n\r\n    const api: WebsocketApi = {\r\n        connect: <T>({ channelKey }: WebsocketConnectionData) => {\r\n            // With this implementation, the server simply echos all messages to all clients\r\n            // The client will filter those messages client-side with the key\r\n            // NOTE: When the server filters via keys (providing privacy), this will continue to work without changes\r\n\r\n            type MessageContainer = {\r\n                message: T | null;\r\n                key: string;\r\n            };\r\n\r\n            const subscribable = createSubscribable<T>();\r\n            const subscribableEvents = createSubscribable<WebsocketConnectionEvent>();\r\n\r\n            // Connect to websocket (and reconnect, etc.)\r\n            const createSocket = () => {\r\n                const socket = new WebSocket(`${config.websocketsApiUrl}`);\r\n\r\n                // Connection opened\r\n                socket.addEventListener(`open`, (event) => {\r\n                    if (socket !== activeSocket) {\r\n                        socket.close();\r\n                        return;\r\n                    }\r\n\r\n                    subscribableEvents.onStateChange({ connectionStatus: `opened` });\r\n\r\n                    // Send a key message\r\n                    const messageContainer: MessageContainer = {\r\n                        message: null,\r\n                        key: channelKey,\r\n                    };\r\n                    socket.send(JSON.stringify(messageContainer));\r\n\r\n                });\r\n                socket.addEventListener(`close`, (event) => {\r\n                    if (socket !== activeSocket) {\r\n                        socket.close();\r\n                        return;\r\n                    }\r\n\r\n                    subscribableEvents.onStateChange({ connectionStatus: `closed` });\r\n                    reconnect();\r\n                });\r\n                socket.addEventListener(`error`, (event) => {\r\n                    if (socket !== activeSocket) {\r\n                        socket.close();\r\n                        return;\r\n                    }\r\n\r\n                    subscribableEvents.onStateChange({ connectionStatus: `error`, error: { message: `Websocket Error`, error: event } });\r\n                    reconnect();\r\n                });\r\n\r\n                // Listen for messages\r\n                socket.addEventListener(`message`, (event) => {\r\n                    // console.log(`socket message`, { event });\r\n                    if (socket !== activeSocket) {\r\n                        socket.close();\r\n                        return;\r\n                    }\r\n\r\n                    const m = JSON.parse(event.data) as MessageContainer;\r\n                    if (m.key !== channelKey || !m.message) { return; }\r\n                    subscribable.onStateChange(m.message);\r\n                });\r\n\r\n                return socket;\r\n            };\r\n\r\n            let isClosed = false;\r\n            let activeSocket: null | WebSocket = createSocket();\r\n            const reconnect = () => {\r\n                if (isClosed) { return; }\r\n\r\n                setTimeout(() => {\r\n                    activeSocket = createSocket();\r\n                }, 50);\r\n            };\r\n\r\n            // Send Messages\r\n            const send = (message: T) => {\r\n                if (!activeSocket || activeSocket.readyState !== WebSocket.OPEN) {\r\n                    throw new AppError(`Websocket is not open`);\r\n                }\r\n                const messageContainer: MessageContainer = {\r\n                    message,\r\n                    key: channelKey,\r\n                };\r\n                activeSocket.send(JSON.stringify(messageContainer));\r\n            };\r\n\r\n            return {\r\n                send,\r\n                isConnected: () => activeSocket?.readyState === WebSocket.OPEN,\r\n                subscribeMessages: subscribable.subscribe,\r\n                subscribeConnectionEvents: subscribableEvents.subscribe,\r\n                close: () => {\r\n                    isClosed = true;\r\n                    activeSocket?.close();\r\n                    activeSocket = null;\r\n                },\r\n            };\r\n        },\r\n    };\r\n\r\n    return api;\r\n};\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : (global = global || self, factory(global.ReactStripe = {}, global.React));\n})(this, function (exports, React) {\n  'use strict';\n\n  React = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n      return;\n    }\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  var ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\n  function emptyFunction() {}\n\n  function emptyFunctionWithReset() {}\n\n  emptyFunctionWithReset.resetWarningCache = emptyFunction;\n\n  var factoryWithThrowingShims = function factoryWithThrowingShims() {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret === ReactPropTypesSecret_1) {\n        // It is still safe when called from React.\n        return;\n      }\n\n      var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n      err.name = 'Invariant Violation';\n      throw err;\n    }\n\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    } // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      elementType: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim,\n      exact: getShim,\n      checkPropTypes: emptyFunctionWithReset,\n      resetWarningCache: emptyFunction\n    };\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n\n  var propTypes = createCommonjsModule(function (module) {\n    /**\n     * Copyright (c) 2013-present, Facebook, Inc.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n    {\n      // By explicitly using `prop-types` you are opting into new production behavior.\n      // http://fb.me/prop-types-in-prod\n      module.exports = factoryWithThrowingShims();\n    }\n  });\n\n  var isUnknownObject = function isUnknownObject(raw) {\n    return raw !== null && _typeof(raw) === 'object';\n  };\n\n  var isPromise = function isPromise(raw) {\n    return isUnknownObject(raw) && typeof raw.then === 'function';\n  }; // We are using types to enforce the `stripe` prop in this lib,\n  // but in an untyped integration `stripe` could be anything, so we need\n  // to do some sanity validation to prevent type errors.\n\n\n  var isStripe = function isStripe(raw) {\n    return isUnknownObject(raw) && typeof raw.elements === 'function' && typeof raw.createToken === 'function' && typeof raw.createPaymentMethod === 'function' && typeof raw.confirmCardPayment === 'function';\n  };\n\n  var PLAIN_OBJECT_STR = '[object Object]';\n\n  var isEqual = function isEqual(left, right) {\n    if (!isUnknownObject(left) || !isUnknownObject(right)) {\n      return left === right;\n    }\n\n    var leftArray = Array.isArray(left);\n    var rightArray = Array.isArray(right);\n    if (leftArray !== rightArray) return false;\n    var leftPlainObject = Object.prototype.toString.call(left) === PLAIN_OBJECT_STR;\n    var rightPlainObject = Object.prototype.toString.call(right) === PLAIN_OBJECT_STR;\n    if (leftPlainObject !== rightPlainObject) return false;\n    if (!leftPlainObject && !leftArray) return false;\n    var leftKeys = Object.keys(left);\n    var rightKeys = Object.keys(right);\n    if (leftKeys.length !== rightKeys.length) return false;\n    var keySet = {};\n\n    for (var i = 0; i < leftKeys.length; i += 1) {\n      keySet[leftKeys[i]] = true;\n    }\n\n    for (var _i = 0; _i < rightKeys.length; _i += 1) {\n      keySet[rightKeys[_i]] = true;\n    }\n\n    var allKeys = Object.keys(keySet);\n\n    if (allKeys.length !== leftKeys.length) {\n      return false;\n    }\n\n    var l = left;\n    var r = right;\n\n    var pred = function pred(key) {\n      return isEqual(l[key], r[key]);\n    };\n\n    return allKeys.every(pred);\n  };\n\n  var usePrevious = function usePrevious(value) {\n    var ref = React.useRef(value);\n    React.useEffect(function () {\n      ref.current = value;\n    }, [value]);\n    return ref.current;\n  };\n\n  var INVALID_STRIPE_ERROR = 'Invalid prop `stripe` supplied to `Elements`. We recommend using the `loadStripe` utility from `@stripe/stripe-js`. See https://stripe.com/docs/stripe-js/react#elements-props-stripe for details.'; // We are using types to enforce the `stripe` prop in this lib, but in a real\n  // integration `stripe` could be anything, so we need to do some sanity\n  // validation to prevent type errors.\n\n  var validateStripe = function validateStripe(maybeStripe) {\n    if (maybeStripe === null || isStripe(maybeStripe)) {\n      return maybeStripe;\n    }\n\n    throw new Error(INVALID_STRIPE_ERROR);\n  };\n\n  var parseStripeProp = function parseStripeProp(raw) {\n    if (isPromise(raw)) {\n      return {\n        tag: 'async',\n        stripePromise: Promise.resolve(raw).then(validateStripe)\n      };\n    }\n\n    var stripe = validateStripe(raw);\n\n    if (stripe === null) {\n      return {\n        tag: 'empty'\n      };\n    }\n\n    return {\n      tag: 'sync',\n      stripe: stripe\n    };\n  };\n\n  var ElementsContext = React.createContext(null);\n  ElementsContext.displayName = 'ElementsContext';\n\n  var parseElementsContext = function parseElementsContext(ctx, useCase) {\n    if (!ctx) {\n      throw new Error(\"Could not find Elements context; You need to wrap the part of your app that \".concat(useCase, \" in an <Elements> provider.\"));\n    }\n\n    return ctx;\n  };\n  /**\n   * The `Elements` provider allows you to use [Element components](https://stripe.com/docs/stripe-js/react#element-components) and access the [Stripe object](https://stripe.com/docs/js/initializing) in any nested component.\n   * Render an `Elements` provider at the root of your React app so that it is available everywhere you need it.\n   *\n   * To use the `Elements` provider, call `loadStripe` from `@stripe/stripe-js` with your publishable key.\n   * The `loadStripe` function will asynchronously load the Stripe.js script and initialize a `Stripe` object.\n   * Pass the returned `Promise` to `Elements`.\n   *\n   * @docs https://stripe.com/docs/stripe-js/react#elements-provider\n   */\n\n\n  var Elements = function Elements(_ref) {\n    var rawStripeProp = _ref.stripe,\n        options = _ref.options,\n        children = _ref.children;\n\n    var _final = React.useRef(false);\n\n    var isMounted = React.useRef(true);\n    var parsed = React.useMemo(function () {\n      return parseStripeProp(rawStripeProp);\n    }, [rawStripeProp]);\n\n    var _React$useState = React.useState(function () {\n      return {\n        stripe: null,\n        elements: null\n      };\n    }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        ctx = _React$useState2[0],\n        setContext = _React$useState2[1];\n\n    var prevStripe = usePrevious(rawStripeProp);\n    var prevOptions = usePrevious(options);\n\n    if (prevStripe !== null) {\n      if (prevStripe !== rawStripeProp) {\n        console.warn('Unsupported prop change on Elements: You cannot change the `stripe` prop after setting it.');\n      }\n\n      if (!isEqual(options, prevOptions)) {\n        console.warn('Unsupported prop change on Elements: You cannot change the `options` prop after setting the `stripe` prop.');\n      }\n    }\n\n    if (!_final.current) {\n      if (parsed.tag === 'sync') {\n        _final.current = true;\n        setContext({\n          stripe: parsed.stripe,\n          elements: parsed.stripe.elements(options)\n        });\n      }\n\n      if (parsed.tag === 'async') {\n        _final.current = true;\n        parsed.stripePromise.then(function (stripe) {\n          if (stripe && isMounted.current) {\n            // Only update Elements context if the component is still mounted\n            // and stripe is not null. We allow stripe to be null to make\n            // handling SSR easier.\n            setContext({\n              stripe: stripe,\n              elements: stripe.elements(options)\n            });\n          }\n        });\n      }\n    }\n\n    React.useEffect(function () {\n      return function () {\n        isMounted.current = false;\n      };\n    }, []);\n    React.useEffect(function () {\n      var anyStripe = ctx.stripe;\n\n      if (!anyStripe || !anyStripe._registerWrapper) {\n        return;\n      }\n\n      anyStripe._registerWrapper({\n        name: 'react-stripe-js',\n        version: \"1.1.2\"\n      });\n    }, [ctx.stripe]);\n    return React.createElement(ElementsContext.Provider, {\n      value: ctx\n    }, children);\n  };\n\n  var useElementsContextWithUseCase = function useElementsContextWithUseCase(useCaseMessage) {\n    var ctx = React.useContext(ElementsContext);\n    return parseElementsContext(ctx, useCaseMessage);\n  };\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#useelements-hook\n   */\n\n\n  var useElements = function useElements() {\n    var _useElementsContextWi = useElementsContextWithUseCase('calls useElements()'),\n        elements = _useElementsContextWi.elements;\n\n    return elements;\n  };\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#usestripe-hook\n   */\n\n\n  var useStripe = function useStripe() {\n    var _useElementsContextWi2 = useElementsContextWithUseCase('calls useStripe()'),\n        stripe = _useElementsContextWi2.stripe;\n\n    return stripe;\n  };\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#elements-consumer\n   */\n\n\n  var ElementsConsumer = function ElementsConsumer(_ref2) {\n    var children = _ref2.children;\n    var ctx = useElementsContextWithUseCase('mounts <ElementsConsumer>'); // Assert to satisfy the busted React.FC return type (it should be ReactNode)\n\n    return children(ctx);\n  };\n\n  ElementsConsumer.propTypes = {\n    children: propTypes.func.isRequired\n  };\n\n  var useCallbackReference = function useCallbackReference(cb) {\n    var ref = React.useRef(cb);\n    React.useEffect(function () {\n      ref.current = cb;\n    }, [cb]);\n    return function () {\n      if (ref.current) {\n        ref.current.apply(ref, arguments);\n      }\n    };\n  };\n\n  var extractUpdateableOptions = function extractUpdateableOptions(options) {\n    if (!isUnknownObject(options)) {\n      return {};\n    }\n\n    var _ = options.paymentRequest,\n        rest = _objectWithoutProperties(options, [\"paymentRequest\"]);\n\n    return rest;\n  };\n\n  var noop = function noop() {};\n\n  var capitalized = function capitalized(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  var createElementComponent = function createElementComponent(type, isServer) {\n    var displayName = \"\".concat(capitalized(type), \"Element\");\n\n    var ClientElement = function ClientElement(_ref) {\n      var id = _ref.id,\n          className = _ref.className,\n          _ref$options = _ref.options,\n          options = _ref$options === void 0 ? {} : _ref$options,\n          _ref$onBlur = _ref.onBlur,\n          onBlur = _ref$onBlur === void 0 ? noop : _ref$onBlur,\n          _ref$onFocus = _ref.onFocus,\n          onFocus = _ref$onFocus === void 0 ? noop : _ref$onFocus,\n          _ref$onReady = _ref.onReady,\n          onReady = _ref$onReady === void 0 ? noop : _ref$onReady,\n          _ref$onChange = _ref.onChange,\n          onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n          _ref$onEscape = _ref.onEscape,\n          onEscape = _ref$onEscape === void 0 ? noop : _ref$onEscape,\n          _ref$onClick = _ref.onClick,\n          onClick = _ref$onClick === void 0 ? noop : _ref$onClick;\n\n      var _useElementsContextWi = useElementsContextWithUseCase(\"mounts <\".concat(displayName, \">\")),\n          elements = _useElementsContextWi.elements;\n\n      var elementRef = React.useRef(null);\n      var domNode = React.useRef(null);\n      var callOnReady = useCallbackReference(onReady);\n      var callOnBlur = useCallbackReference(onBlur);\n      var callOnFocus = useCallbackReference(onFocus);\n      var callOnClick = useCallbackReference(onClick);\n      var callOnChange = useCallbackReference(onChange);\n      var callOnEscape = useCallbackReference(onEscape);\n      React.useLayoutEffect(function () {\n        if (elementRef.current == null && elements && domNode.current != null) {\n          var element = elements.create(type, options);\n          elementRef.current = element;\n          element.mount(domNode.current);\n          element.on('ready', function () {\n            return callOnReady(element);\n          });\n          element.on('change', callOnChange);\n          element.on('blur', callOnBlur);\n          element.on('focus', callOnFocus);\n          element.on('escape', callOnEscape); // Users can pass an an onClick prop on any Element component\n          // just as they could listen for the `click` event on any Element,\n          // but only the PaymentRequestButton will actually trigger the event.\n\n          element.on('click', callOnClick);\n        }\n      });\n      var prevOptions = React.useRef(options);\n      React.useEffect(function () {\n        if (prevOptions.current && prevOptions.current.paymentRequest !== options.paymentRequest) {\n          console.warn('Unsupported prop change: options.paymentRequest is not a customizable property.');\n        }\n\n        var updateableOptions = extractUpdateableOptions(options);\n\n        if (Object.keys(updateableOptions).length !== 0 && !isEqual(updateableOptions, extractUpdateableOptions(prevOptions.current))) {\n          if (elementRef.current) {\n            elementRef.current.update(updateableOptions);\n            prevOptions.current = options;\n          }\n        }\n      }, [options]);\n      React.useEffect(function () {\n        return function () {\n          if (elementRef.current) {\n            elementRef.current.destroy();\n          }\n        };\n      }, []);\n      return React.createElement(\"div\", {\n        id: id,\n        className: className,\n        ref: domNode\n      });\n    }; // Only render the Element wrapper in a server environment.\n\n\n    var ServerElement = function ServerElement(props) {\n      // Validate that we are in the right context by calling useElementsContextWithUseCase.\n      useElementsContextWithUseCase(\"mounts <\".concat(displayName, \">\"));\n      var id = props.id,\n          className = props.className;\n      return React.createElement(\"div\", {\n        id: id,\n        className: className\n      });\n    };\n\n    var Element = isServer ? ServerElement : ClientElement;\n    Element.propTypes = {\n      id: propTypes.string,\n      className: propTypes.string,\n      onChange: propTypes.func,\n      onBlur: propTypes.func,\n      onFocus: propTypes.func,\n      onReady: propTypes.func,\n      onClick: propTypes.func,\n      options: propTypes.object\n    };\n    Element.displayName = displayName;\n    Element.__elementType = type;\n    return Element;\n  };\n\n  var isServer = typeof window === 'undefined';\n  /**\n   * Requires beta access:\n   * Contact [Stripe support](https://support.stripe.com/) for more information.\n   *\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var AuBankAccountElement = createElementComponent('auBankAccount', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardElement = createElementComponent('card', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardNumberElement = createElementComponent('cardNumber', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardExpiryElement = createElementComponent('cardExpiry', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardCvcElement = createElementComponent('cardCvc', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var FpxBankElement = createElementComponent('fpxBank', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var IbanElement = createElementComponent('iban', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var IdealBankElement = createElementComponent('idealBank', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var PaymentRequestButtonElement = createElementComponent('paymentRequestButton', isServer);\n  exports.AuBankAccountElement = AuBankAccountElement;\n  exports.CardCvcElement = CardCvcElement;\n  exports.CardElement = CardElement;\n  exports.CardExpiryElement = CardExpiryElement;\n  exports.CardNumberElement = CardNumberElement;\n  exports.Elements = Elements;\n  exports.ElementsConsumer = ElementsConsumer;\n  exports.FpxBankElement = FpxBankElement;\n  exports.IbanElement = IbanElement;\n  exports.IdealBankElement = IdealBankElement;\n  exports.PaymentRequestButtonElement = PaymentRequestButtonElement;\n  exports.useElements = useElements;\n  exports.useStripe = useStripe;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","export type PhoneNumber = string & { __type: 'PhoneNumber', format: '+19785551234' };\r\nexport type PhoneNumberFormatted = string & { __type: 'PhoneNumber', format: '(###) ###-####' };\r\n\r\nexport function formatPhoneNumber_UsaCanada(text: string): PhoneNumberFormatted {\r\n    return phoneNumberMask_UsaCanada(text).corrected as PhoneNumberFormatted;\r\n}\r\n\r\nexport function toStandardPhoneNumber(text: string): PhoneNumber {\r\n    return `+1${phoneNumberMask_UsaCanada(text).digitsNo1}` as PhoneNumber;\r\n}\r\n\r\nexport function toStandardPhoneNumber_optional(text: string | null | undefined): PhoneNumber | undefined {\r\n    if (!text) { return undefined; }\r\n    return `+1${phoneNumberMask_UsaCanada(text).digitsNo1}` as PhoneNumber;\r\n}\r\n\r\nexport function phoneNumberMask_UsaCanada(x: string | null | undefined) {\r\n    const numberMask = `(###) ###-####`;\r\n    const digits = x\r\n        ?.replace(/^(\\+1|1)/, ``)\r\n        .replace(/\\D/g, ``)\r\n        .split(``) ?? [];\r\n    const letters = numberMask.split(``);\r\n    let iDigit = 0;\r\n    let iLast = -1;\r\n    for (let i = 0; i < letters.length; i++) {\r\n        if (letters[i] === `#` && iDigit < digits.length) {\r\n            letters[i] = digits[iDigit];\r\n            iDigit++;\r\n            iLast = i;\r\n        }\r\n    }\r\n    const full = letters.join(``);\r\n    const corrected = letters.slice(0, iLast + 1).join(``);\r\n    return { corrected, full, digitsNo1: digits.join(``) };\r\n}\r\n","function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\n\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.5.0\"\n  });\n};\n\nvar stripePromise = null;\n\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\n\nvar initStripe = function initStripe(maybeStripe, args) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(void 0, _toConsumableArray(args));\n  registerWrapper(stripe);\n  return stripe;\n}; // own script injection.\n\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\n\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args);\n  });\n};\n\nexport { loadStripe };","\r\nexport enum ProcessSteps_CreateSavedPaymentMethod {\r\n    _01_Client_BeginCreateSavedPaymentMethod = 100,\r\n    _02_Server_SetupSavedPaymentMethod = 200,\r\n    _03_Client_CollectPaymentDetails = 300,\r\n    _04_Server_ObtainPaymentMethod = 400,\r\n    _05_Server_SavePaymentMethod = 500,\r\n};\r\n\r\nexport const logProcessStep_CreateSavedPaymentMethod = (step: ProcessSteps_CreateSavedPaymentMethod, status?: 'BEGIN' | 'END' | 'FAIL', data?: unknown) => {\r\n    // TODO: Implement Universal Logger\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log(`CreateSavedPaymentMethod: ${ProcessSteps_CreateSavedPaymentMethod[step]} ${status}`, data);\r\n};\r\n\r\nexport const wrapProcessStep_CreateSavedPaymentMethod = async <TResult>(step: ProcessSteps_CreateSavedPaymentMethod, execute: () => Promise<TResult>): Promise<TResult> => {\r\n    try {\r\n        logProcessStep_CreateSavedPaymentMethod(step, `BEGIN`);\r\n\r\n        const result = await execute();\r\n        logProcessStep_CreateSavedPaymentMethod(step, `END`);\r\n        return result;\r\n    } catch (error) {\r\n        logProcessStep_CreateSavedPaymentMethod(step, `FAIL`, { error });\r\n        throw error;\r\n    }\r\n};\r\n","/** This token is used to identify a specific app user with the user's id in the provider's context (i.e. customer id) */\r\nexport type PaymentProviderUserToken = unknown & { __type: 'PaymentProviderUserToken' };\r\n/** This token is used to identify the client as it negotiates directly with the provider to enter payment method data */\r\nexport type PaymentProviderSavedPaymentMethodClientSetupToken = unknown & { __type: 'PaymentProviderSavedPaymentMethodClientSetupToken' };\r\n/** This token is used to identify the payment method obtained on the client from the provider */\r\nexport type PaymentProviderSavedPaymentMethodClientToken = unknown & { __type: 'PaymentProviderSavedPaymentMethodClientToken' };\r\n/** This token is used to identify the payment method long term after being verified by the provider on the server */\r\nexport type PaymentProviderSavedPaymentMethodStorageToken = unknown & { __type: 'PaymentProviderSavedPaymentMethodStorageToken' };\r\n\r\n/** PaymentProviderName identifies the payment provider and it's implementation (i.e. stripe, paypal, etc.) */\r\nexport type PaymentProviderName = string & { __type: 'PaymentProviderName' };\r\n\r\n/** PaymentMethodStorageKey is the auto generated storage key to uniquely identify a stored payment method */\r\nexport type PaymentMethodStorageKey = string & { __type: 'PaymentMethodStorageKey' };\r\n\r\nexport type PaymentMethodExpiration = {\r\n    year: number;\r\n    month: number;\r\n};\r\nexport type PaymentMethodClientInfo = {\r\n    key: PaymentMethodStorageKey;\r\n    providerName: PaymentProviderName;\r\n    title: string;\r\n    expiration: PaymentMethodExpiration;\r\n};\r\n\r\nexport type PaymentAmount = { currency: 'usd', usdCents: number };\r\n\r\nexport type PaymentTransaction = {\r\n    providerName: PaymentProviderName;\r\n    created: Date;\r\n    amount: PaymentAmount;\r\n    status: 'success' | 'incomplete' | 'terminated';\r\n}\r\n\r\n/** Payment Client to Server Calls\r\n * \r\n * These are the calls made on the client to the server, it supports multiple payment provider types\r\n * \r\n * Note: this is scoped to the user associated with the client\r\n */\r\nexport type PaymentClientApi = {\r\n    // Normal Flow\r\n    setupSavedPaymentMethod: (params: { providerName: PaymentProviderName }) => Promise<PaymentProviderSavedPaymentMethodClientSetupToken>;\r\n    saveSavedPaymentMethod: (params: { providerName: PaymentProviderName, paymentMethodClientToken: PaymentProviderSavedPaymentMethodClientToken }) => Promise<void>;\r\n\r\n    // Management of Payment Methods\r\n    getSavedPaymentMethods: () => Promise<PaymentMethodClientInfo[]>;\r\n    deleteSavedPaymentMethod: (params: { key: PaymentMethodStorageKey }) => Promise<void>;\r\n\r\n    // Management of Payments\r\n    debug_triggerPayment: (params: { amount: PaymentAmount }) => Promise<void>;\r\n    getPayments: () => Promise<PaymentTransaction[]>;\r\n    // getPaymentsRequiringUserAction: () => Promise<PaymentTransaction[]>;\r\n}\r\n\r\n\r\n/** Payment Server to Server Calls\r\n * \r\n * These are the calls intended to be used server-side to process payments\r\n * \r\n */\r\nexport type PaymentServerApi = {\r\n    /** This will use the payment methods in order until one succeeds */\r\n    chargeUsingSavedPaymentMethods: (params: { amount: PaymentAmount }) => Promise<void>;\r\n}\r\n\r\n/** Payment Server to Payment Provider Api Calls\r\n * \r\n * This wraps the provider-specific server code\r\n */\r\nexport type PaymentProviderApi = {\r\n    providerName: PaymentProviderName;\r\n    setupSavedPaymentMethod: (userToken: PaymentProviderUserToken | null) => Promise<{\r\n        newUserToken?: PaymentProviderUserToken;\r\n        setupToken: PaymentProviderSavedPaymentMethodClientSetupToken;\r\n    }>;\r\n    obtainSavedPaymentMethod: (userToken: PaymentProviderUserToken, clientToken: PaymentProviderSavedPaymentMethodClientToken) => Promise<{\r\n        token: PaymentProviderSavedPaymentMethodStorageToken;\r\n        title: string;\r\n        expiration: PaymentMethodExpiration;\r\n    }>;\r\n    chargeSavedPaymentMethod: (userToken: PaymentProviderUserToken, token: PaymentProviderSavedPaymentMethodStorageToken, amount: PaymentAmount) => Promise<void>;\r\n\r\n    getPayments: (userToken: PaymentProviderUserToken) => Promise<PaymentTransaction[]>;\r\n}\r\n\r\n/** Payment Server Dependencies */\r\nexport type PaymentMethodStorageData = {\r\n    /** Key should be auto-generated by storage provider */\r\n    key: PaymentMethodStorageKey;\r\n    title: string;\r\n    expiration: PaymentMethodExpiration;\r\n    providerName: PaymentProviderName;\r\n    paymentMethodStorageToken: PaymentProviderSavedPaymentMethodStorageToken;\r\n};\r\n\r\nexport type PaymentUserTokenData = {\r\n    providerName: PaymentProviderName;\r\n    userToken: PaymentProviderUserToken;\r\n};\r\n\r\nexport type PaymentStorageProviderApi = {\r\n    getUserToken: (params: { providerName: PaymentProviderName }) => Promise<PaymentUserTokenData | null>;\r\n    setUserToken: (params: PaymentUserTokenData) => Promise<void>;\r\n\r\n    savePaymentMethod: (params: Omit<PaymentMethodStorageData, 'key'>) => Promise<void>;\r\n    /** Return all saved payment methods - In the order that they were created */\r\n    getSavedPaymentMethods: () => Promise<PaymentMethodStorageData[]>;\r\n    deleteSavedPaymentMethod: (params: { key: PaymentMethodStorageKey }) => Promise<void>;\r\n}\r\n\r\nexport class PaymentError extends Error {\r\n    constructor(public message: string, public data?: unknown) { super(); }\r\n}\r\n","/* eslint-disable @typescript-eslint/quotes */\r\n/* eslint-disable prefer-template */\r\nimport { ProcessSteps_CreateSavedPaymentMethod } from '../../../common/process-steps';\r\n\r\n// Saved Payments: https://stripe.com/docs/payments/save-and-reuse\r\nexport enum ProcessSteps_CreateSavedPaymentMethod_Stripe {\r\n    _02A_Server_GetOrCreateCustomer = ProcessSteps_CreateSavedPaymentMethod._02_Server_SetupSavedPaymentMethod + 1,\r\n    _02B_Server_CreateSetupIntent = ProcessSteps_CreateSavedPaymentMethod._02_Server_SetupSavedPaymentMethod + 2,\r\n    _03A_Client_CollectPaymentDetails = ProcessSteps_CreateSavedPaymentMethod._03_Client_CollectPaymentDetails + 1,\r\n    _04A_Server_ObtainPaymentMethod = ProcessSteps_CreateSavedPaymentMethod._04_Server_ObtainPaymentMethod + 1,\r\n    _04B_Server_ObtainPaymentMethodDetails = ProcessSteps_CreateSavedPaymentMethod._04_Server_ObtainPaymentMethod + 2,\r\n};\r\n\r\nexport const logProcessStep_CreateSavedPaymentMethod_Stripe = (step: ProcessSteps_CreateSavedPaymentMethod_Stripe, status?: 'BEGIN' | 'END' | 'FAIL', data?: unknown) => {\r\n    // TODO: Implement Universal Logger\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log(`CreateSavedPaymentMethod_Stripe: ${ProcessSteps_CreateSavedPaymentMethod_Stripe[step]} ${status}`, data);\r\n};\r\n\r\nexport const wrapProcessStep_CreateSavedPaymentMethod_Stripe = async <TResult>(step: ProcessSteps_CreateSavedPaymentMethod_Stripe, execute: () => Promise<TResult>): Promise<TResult> => {\r\n    try {\r\n        logProcessStep_CreateSavedPaymentMethod_Stripe(step, `BEGIN`);\r\n\r\n        const result = await execute();\r\n        logProcessStep_CreateSavedPaymentMethod_Stripe(step, `END`);\r\n        return result;\r\n    } catch (error) {\r\n        logProcessStep_CreateSavedPaymentMethod_Stripe(step, `FAIL`, { error });\r\n        throw error;\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { loadStripe, PaymentMethod, PaymentMethodCreateParams } from '@stripe/stripe-js';\r\nimport { PaymentClientComponents } from '../../../common/types-react';\r\nimport { PaymentError } from '../../../common/types';\r\nimport { stripeDecodeClientSetupToken, stripeEncodeClientToken } from './stripe-client-tokens';\r\nimport { wrapProcessStep_CreateSavedPaymentMethod_Stripe, ProcessSteps_CreateSavedPaymentMethod_Stripe } from '../common/stripe-process-steps';\r\n\r\nexport const createPaymentClientComponents_stripe = (params: { stripePublicKey: string }): PaymentClientComponents => {\r\n\r\n    const stripePromise = loadStripe(params.stripePublicKey);\r\n\r\n    const components: PaymentClientComponents = {\r\n        AppWrapperComponent: ({ children }) => (<Elements stripe={stripePromise}>{children}</Elements>),\r\n        PaymentMethodEntryComponent: ({ style, paymentMethodSetupToken, onPaymentMethodReady }) => {\r\n            const stripe = useStripe();\r\n            const elements = useElements();\r\n\r\n            const [stripeError, setStripeError] = useState(null as null | { message: string, error: unknown });\r\n\r\n            const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n                event.preventDefault();\r\n                if (!stripe || !elements) { return; }\r\n\r\n                try {\r\n                    // Completed SetupIntent -> Used to get PaymentMethod\r\n                    const setupIntent = await wrapProcessStep_CreateSavedPaymentMethod_Stripe(\r\n                        ProcessSteps_CreateSavedPaymentMethod_Stripe._03A_Client_CollectPaymentDetails,\r\n                        async () => {\r\n\r\n                            const setupInfo = stripeDecodeClientSetupToken(paymentMethodSetupToken);\r\n\r\n                            const result = await stripe.confirmCardSetup(setupInfo.clientSecret, {\r\n                                payment_method: {\r\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                                    card: elements.getElement(CardElement)!,\r\n                                    billing_details: setupInfo.customerBillingDetails,\r\n                                },\r\n                            });\r\n\r\n                            if (result.error || !result.setupIntent) {\r\n                                throw new PaymentError(`Stripe Payment Error`, result.error);\r\n                            }\r\n\r\n                            return result.setupIntent;\r\n                        });\r\n                    if (!setupIntent) { return; }\r\n\r\n                    onPaymentMethodReady(stripeEncodeClientToken({ setupIntent }));\r\n                } catch (error) {\r\n                    setStripeError({ message: `Stripe Payment Error`, error });\r\n                }\r\n            };\r\n\r\n            const s = style;\r\n            const inputStyle = {\r\n                base: {\r\n                    color: s.textColor,\r\n                    fontSize: s.fontSize ? `${s.fontSize}px` : ``,\r\n                    fontFamily: s.fontFamily,\r\n                    fontSmoothing: `antialiased`,\r\n                    \"::placeholder\": {\r\n                        color: s.textColor,\r\n                        opacity: 0.8,\r\n                    },\r\n                },\r\n                invalid: {\r\n                    color: s.textColor_invalid,\r\n                    iconColor: s.textColor_invalid,\r\n                },\r\n            };\r\n            const inputContainerStyle = {\r\n                marginBottom: s.elementPadding,\r\n                padding: s.textPadding,\r\n                backgroundColor: s.backgroundColor,\r\n                borderWidth: 1, borderStyle: `solid`, borderColor: s.borderColor, borderRadius: s.borderRadius,\r\n            };\r\n            const buttonStyle = {\r\n                color: s.textColor,\r\n                backgroundColor: s.backgroundColor,\r\n                borderWidth: 1, borderStyle: `solid`, borderColor: s.borderColor, borderRadius: s.borderRadius,\r\n\r\n                fontSize: s.fontSize ? `${s.fontSize}px` : ``,\r\n                fontFamily: s.fontFamily,\r\n                fontSmoothing: `antialiased`,\r\n                fontWeight: `bold`,\r\n                padding: s.textPadding,\r\n                marginBottom: s.elementPadding,\r\n            } as const;\r\n            const buttonJustifyContent = s.buttonAlignment === `left` ? `flex-start`\r\n                : (s.buttonAlignment === `right` ? `flex-end`\r\n                    : `center`);\r\n\r\n            const errorContainerStyle = {\r\n                marginBottom: s.elementPadding,\r\n                padding: s.textPadding,\r\n                backgroundColor: s.backgroundColor,\r\n                borderWidth: 1, borderStyle: `solid`, borderColor: s.borderColor, borderRadius: s.borderRadius,\r\n            };\r\n            const errorMessageStyle = {\r\n                color: s.textColor_invalid,\r\n\r\n                fontSize: s.fontSize ? `${s.fontSize}px` : ``,\r\n                fontFamily: s.fontFamily,\r\n                fontSmoothing: `antialiased`,\r\n                fontWeight: `bold`,\r\n                padding: s.textPadding,\r\n                marginBottom: s.elementPadding,\r\n            } as const;\r\n\r\n            return (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div style={inputContainerStyle}>\r\n                        <CardElement options={{ style: inputStyle }} />\r\n                    </div>\r\n                    {stripeError && (\r\n                        <>\r\n                            <div style={errorContainerStyle}>\r\n                                <span style={errorMessageStyle}>{stripeError.message}</span>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    {!stripeError && (\r\n                        <div style={{ display: `flex`, flexDirection: `row`, justifyContent: buttonJustifyContent }}>\r\n                            <button type='submit' disabled={!stripe || !elements} style={buttonStyle}>{s.buttonText ?? `Subscribe`}</button>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            );\r\n        },\r\n    };\r\n\r\n    return components;\r\n};\r\n","export type DoodleDrawingStorageService = {\r\n    saveDrawing: (prompt: string, drawing: DoodleDrawing) => Promise<void>;\r\n    saveBestDrawingSelection: (doodle: DoodleData) => Promise<void>;\r\n    getDrawings: (prompt: string, options?: { includeOtherPrompts?: boolean, maxCount?: number }) => Promise<{ doodles: DoodleData[] }>;\r\n    getAllDrawings: () => Promise<{ doodles: DoodleDataWithScore[] }>;\r\n};\r\n\r\n\r\nexport type DoodleSummaryDataJson = {\r\n    doodles: DoodleData_EncodedWithScore[];\r\n};\r\nexport type DoodleData_EncodedWithScore = DoodleData_Encoded & {\r\n    s: number;\r\n};\r\n\r\nexport type DoodleUserDrawingDataJson = {\r\n    doodles: DoodleData_Encoded[];\r\n};\r\n\r\nexport type DoodleUserVotesDataJson = {\r\n    doodleVotes: DoodleScoreVote[];\r\n};\r\n\r\nexport type DoodleScoreVote = {\r\n    // Doodle Key\r\n    k: string;\r\n    // Doodle Timestamp\r\n    t: number;\r\n};\r\n\r\nexport type DoodleScore = {\r\n    doodleKey: string;\r\n    score: number;\r\n};\r\n\r\nexport type DoodleDataWithScore = {\r\n    key: string;\r\n    drawing: DoodleDrawing;\r\n    prompt: string;\r\n    timestamp: number;\r\n    score: number;\r\n};\r\n\r\nexport type DoodleData = {\r\n    key: string;\r\n    drawing: DoodleDrawing;\r\n    prompt: string;\r\n    timestamp: number;\r\n};\r\nexport type DoodleData_Encoded = {\r\n    // Doodle Key\r\n    k: string;\r\n    // Doodle Drawing\r\n    d: DoodleDrawingEncoded;\r\n    // Prompt\r\n    p: string;\r\n    // Doodle Timestamp\r\n    t: number;\r\n};\r\n\r\nexport type DoodleDrawing = {\r\n    width: number;\r\n    height: number;\r\n    segments: DoodleSegment[];\r\n};\r\nexport type DoodleSegment = {\r\n    points: { x: number, y: number }[];\r\n};\r\n\r\n// const sampleDrawing: DoodleDrawing = {\r\n//     width: 128,\r\n//     height: 128,\r\n//     segments: [{\r\n//         points: [\r\n//             { x: 10, y: 10 },\r\n//             { x: 50, y: 10 },\r\n//             { x: 50, y: 50 },\r\n//             { x: 10, y: 50 },\r\n//             { x: 10, y: 10 },\r\n//         ],\r\n//     }],\r\n// };\r\n\r\nexport const defaultDoodleDrawing = (): DoodleDrawing => ({\r\n    width: 104,\r\n    height: 104,\r\n    segments: [],\r\n});\r\n\r\nexport type DoodleDrawingEncoded = {\r\n    doodleText: string;\r\n};\r\ntype DoodleDrawingEncodedObj = {\r\n    w: number;\r\n    h: number;\r\n    s: {\r\n        x: number;\r\n        y: number;\r\n        p: string;\r\n    }[];\r\n};\r\nconst encodeDoodleSegmentPoints = (points: { x: number, y: number }[]): string => {\r\n    if (points.length <= 0) { return ``; }\r\n    let last = points[0];\r\n    let t = ``;\r\n\r\n    points.slice(1).forEach(p => {\r\n        t += `${p.x - last.x},${p.y - last.y};`;\r\n        last = p;\r\n    });\r\n\r\n    return t;\r\n};\r\nconst decodeDoodleSegmentPoints = (x: number, y: number, pointsString: string): { x: number, y: number }[] => {\r\n    if (!pointsString) { return [{ x, y }]; }\r\n    let last = { x, y };\r\n    const pointRelPos = pointsString.split(`;`).filter(p => p);\r\n    const points = pointRelPos.map(p => {\r\n        const parts = p.split(`,`);\r\n        const point = {\r\n            x: last.x + Number.parseInt(parts[0], 10),\r\n            y: last.y + Number.parseInt(parts[1], 10),\r\n        };\r\n        last = point;\r\n        return point;\r\n    });\r\n\r\n    return [...points];\r\n};\r\n\r\nexport const encodeDoodleDrawing = (doodle: DoodleDrawing): DoodleDrawingEncoded => {\r\n    const o: DoodleDrawingEncodedObj = {\r\n        w: doodle.width,\r\n        h: doodle.height,\r\n        s: doodle.segments.map(x => ({\r\n            x: x.points[0].x,\r\n            y: x.points[0].y,\r\n            p: encodeDoodleSegmentPoints(x.points),\r\n        })),\r\n    };\r\n    return { doodleText: JSON.stringify(o) };\r\n};\r\nexport const decodeDoodleDrawing = (doodle: DoodleDrawingEncoded): DoodleDrawing => {\r\n    const o: DoodleDrawingEncodedObj = JSON.parse(doodle.doodleText) as DoodleDrawingEncodedObj;\r\n    return {\r\n        width: o.w,\r\n        height: o.h,\r\n        segments: o.s.map(p => {\r\n            return {\r\n                points: [{ x: p.x, y: p.y }, ...decodeDoodleSegmentPoints(p.x, p.y, p.p)],\r\n            };\r\n        }),\r\n    };\r\n};\r\n\r\n\r\n// const doodleSegmentToSvgPath_bezier = (segment: DoodleSegment) => {\r\n//     const delta1 = {\r\n//         x: segment.points[2].x - segment.points[1].x,\r\n//         y: segment.points[2].y - segment.points[1].y,\r\n//     };\r\n//     const controlPoint = {\r\n//         x: segment.points[1].x - delta1.x * 0.5,\r\n//         y: segment.points[1].y - delta1.y * 0.5,\r\n//     };\r\n//     return `M${segment.points[0].x} ${segment.points[0].y} Q${controlPoint.x} ${controlPoint.y} ${segment.points[1].x} ${segment.points[1].y}T${segment.points.slice(2, -1).map(p => `${p.x} ${p.y}`).join(` `)}`;\r\n// };\r\n\r\n\r\nexport const doodleSegmentToSvgPath_line = (segment: DoodleSegment) => {\r\n    if (segment.points.length <= 0) { return ``; }\r\n    if (segment.points.length === 1) { return `M${segment.points[0].x} ${segment.points[0].y} L${segment.points[0].x} ${segment.points[0].y}`; }\r\n\r\n    let last = segment.points[0];\r\n    return `M${segment.points[0].x} ${segment.points[0].y} l${segment.points.slice(1).map(p => {\r\n        const t = `${p.x - last.x} ${p.y - last.y}`;\r\n        last = p;\r\n        return t;\r\n    }).join(` `)}`;\r\n};\r\n\r\nexport const doodleToSvg = (drawing: DoodleDrawing) => {\r\n    // preserveAspectRatio='none' stroke='#000000' fill='transparent' xmlns='http://www.w3.org/2000/svg'\r\n    return `\r\n<svg viewBox='0 0 ${drawing.width} ${drawing.height}' stroke='#000000' fill='transparent'>\r\n    ${drawing.segments.map((x, i) => (\r\n        `<path d='${doodleSegmentToSvgPath_line(x)}' />`\r\n    )).join(``)}\r\n</svg>\r\n    `.trim();\r\n};\r\n","import { PaymentMethodCreateParams, SetupIntent } from '@stripe/stripe-js';\r\nimport { PaymentProviderSavedPaymentMethodClientSetupToken, PaymentProviderSavedPaymentMethodClientToken } from '../../../common/types';\r\n\r\nexport type StripeCustomerBillingDetails = PaymentMethodCreateParams.BillingDetails;\r\n\r\nexport type StripePaymentClientSetupToken = {\r\n    clientSecret: string;\r\n    customerBillingDetails: StripeCustomerBillingDetails;\r\n};\r\n\r\nexport const stripeEncodeClientSetupToken = (params: StripePaymentClientSetupToken): PaymentProviderSavedPaymentMethodClientSetupToken => {\r\n    return params as unknown as PaymentProviderSavedPaymentMethodClientSetupToken;\r\n};\r\nexport const stripeDecodeClientSetupToken = (params: PaymentProviderSavedPaymentMethodClientSetupToken): StripePaymentClientSetupToken => {\r\n    return params as unknown as StripePaymentClientSetupToken;\r\n};\r\n\r\nexport type StripePaymentClientToken = {\r\n    setupIntent: SetupIntent;\r\n};\r\n\r\nexport const stripeEncodeClientToken = (params: StripePaymentClientToken): PaymentProviderSavedPaymentMethodClientToken => {\r\n    return params as unknown as PaymentProviderSavedPaymentMethodClientToken;\r\n};\r\nexport const stripeDecodeClientToken = (params: PaymentProviderSavedPaymentMethodClientToken): StripePaymentClientToken => {\r\n    return params as unknown as StripePaymentClientToken;\r\n};\r\n","export const doodleStoragePaths = {\r\n    doodleSummary: `doodle/summary`,\r\n    doodleDrawingsPrefix: `doodle/drawings`,\r\n    doodlePartyDrawingsPrefix: `doodle/party/drawings`,\r\n    doodleVotesPrefix: `doodle/votes`,\r\n} as const;\r\n","export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}];","import * as React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"title\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import { webRequest } from 'utils/web-request';\r\nimport { UploadApi, UploadApiEndpointName, UploadApiRequestData } from './types';\r\n\r\nexport const createUploadApiWebClient = (config: { uploadApiUrl: string }): UploadApi => {\r\n\r\n    async function apiRequest<T>(endpoint: UploadApiEndpointName, data: unknown): Promise<T> {\r\n        const url = `${config.uploadApiUrl}/${endpoint}`;\r\n\r\n        const requestData: UploadApiRequestData = {\r\n            endpoint,\r\n            data,\r\n        };\r\n\r\n        const resultObj = (await webRequest(url, requestData)) as { data: T };\r\n\r\n        return resultObj.data;\r\n    };\r\n\r\n    const api: UploadApi = {\r\n        createUploadUrl: (data) => apiRequest(`createUploadUrl`, data),\r\n        renewUploadUrl: (data) => apiRequest(`renewUploadUrl`, data),\r\n    };\r\n\r\n    return api;\r\n};\r\n","import { Platform } from 'react-native-lite';\r\n\r\nexport const createSpeechService = (): {\r\n    speak: (text: string, languange?: string) => void;\r\n    getVoicesForLanguange: (languange: string) => { voice: SpeechSynthesisVoice, isSelected: boolean }[];\r\n    setVoiceForLanguange: (languange: string, voice: SpeechSynthesisVoice) => void;\r\n} => {\r\n    if (Platform.OS !== `web`) {\r\n        return {\r\n            speak: () => { },\r\n            getVoicesForLanguange: () => [],\r\n            setVoiceForLanguange: () => { },\r\n        };\r\n    }\r\n\r\n    const synth = window.speechSynthesis;\r\n\r\n    const selectedVoices = {} as { [languange: string]: SpeechSynthesisVoice };\r\n\r\n    const speak = (text: string, languange?: string) => {\r\n        const voiceLang = selectedVoices[languange ?? `en`] ?? null;\r\n\r\n        try {\r\n            const u = new SpeechSynthesisUtterance(text);\r\n            u.voice = voiceLang;\r\n            synth.speak(u);\r\n        } catch {\r\n            // Ignore\r\n        }\r\n    };\r\n\r\n    return {\r\n        speak,\r\n        getVoicesForLanguange: (languange) => {\r\n            const voices = synth.getVoices();\r\n            console.log(`voices`, { voices });\r\n            const v = voices.filter(x => x.lang.startsWith(languange)).map(x => ({\r\n                voice: x,\r\n                isSelected: selectedVoices[languange] === x,\r\n            }));\r\n            return v;\r\n        },\r\n        setVoiceForLanguange: (language, voice) => {\r\n            selectedVoices[language] = voice;\r\n        },\r\n    };\r\n};\r\n\r\nexport type SpeechService = ReturnType<typeof createSpeechService>;\r\n","export type JsonTyped<T> = string & { __json: T };\r\n\r\nexport const jsonParse = <T>(json: JsonTyped<T>): T => {\r\n    return JSON.parse(json) as T;\r\n};\r\nexport const jsonParse_smart = <T>(json: T | JsonTyped<T>): T => {\r\n    if (typeof json === `string`) {\r\n        return JSON.parse(json) as T;\r\n    }\r\n    return json as T;\r\n};\r\nexport const jsonStringify = <T>(obj: T) => JSON.stringify(obj) as JsonTyped<T>;\r\n\r\nexport const jsonStringify_safe = (obj: unknown, shouldFormat?: boolean): string => {\r\n    const visited = [] as unknown[];\r\n\r\n    return JSON.stringify(obj, (_, val: unknown) => {\r\n        if (val != null && typeof val == `object`) {\r\n            if (visited.includes(val)) {\r\n                return `[OBJ-DUPLICATED]`;\r\n            }\r\n            visited.push(val);\r\n        }\r\n        return val;\r\n    }, shouldFormat ? 2 : 0);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Clipboard } from 'react-native-lite';\r\nimport { theme } from 'themes/theme';\r\nimport { ErrorState } from 'utils/error';\r\nimport { jsonStringify_safe } from 'utils/json';\r\nimport { Icon } from './icon';\r\nimport { IconKind } from './icon-kind';\r\n\r\nconst DEBUG = true;\r\n\r\nconst errorBoxStyle = {\r\n    view: theme.view_error,\r\n    text: theme.text_error,\r\n    text_errorMessage: theme.text_errorMessage,\r\n    icon: theme.icon,\r\n    icon_errorMessage: theme.icon_errorMessage,\r\n    button: { outlineColor: theme.colors.outline },\r\n};\r\n\r\nexport const ErrorBox = ({ error }: { error: ErrorState | null | undefined }) => {\r\n    if (!error) { return (<></>); }\r\n    return (<ErrorBox_Inner error={error} />);\r\n};\r\n\r\nconst ErrorBox_Inner = (props: { error: ErrorState }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    // console.log(`ErrorBox`, { error: props.error, expanded });\r\n\r\n    const errorAsString = typeof props.error === `string` ? `${props.error}` : null;\r\n    const errorMessage = props.error.message ?? errorAsString ?? `Unknown Error`;\r\n    const errorDetails = props.error.data && jsonStringify_safe(props.error.data, true) || undefined;\r\n    const errorObjText = DEBUG && props.error && jsonStringify_safe(props.error, true) || undefined;\r\n    const canExpand = !!errorDetails || !!errorObjText;\r\n\r\n    return (\r\n        <View style={errorBoxStyle.view}>\r\n            <View style={{ flexDirection: `row` }}>\r\n                <TouchableOpacity style={{ flex: 1, flexDirection: `row`, alignItems: `center`, ...errorBoxStyle.button }} onPress={() => setExpanded(!expanded)}>\r\n                    {canExpand && (expanded ? <Icon style={errorBoxStyle.icon} kind={IconKind.expanded} /> : <Icon style={errorBoxStyle.icon} kind={IconKind.collapsed} />)}\r\n                    <View style={{ paddingRight: 8 }}>\r\n                        <Icon style={errorBoxStyle.icon} kind={IconKind.error} />\r\n                    </View>\r\n                    <View style={{ flex: 1, overflow: `hidden` }}>\r\n                        <Text style={errorBoxStyle.text} numberOfLines={!expanded ? 1 : undefined}>{errorMessage}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n                {DEBUG && (\r\n                    <TouchableOpacity style={{ flexDirection: `row`, alignItems: `center`, paddingLeft: 8, ...errorBoxStyle.button }} onPress={() => Clipboard.setString(jsonStringify_safe({ errorMessage, errorDetails, errorObjText }, true))}>\r\n                        <Icon style={errorBoxStyle.icon} kind={IconKind.copy} />\r\n                    </TouchableOpacity>\r\n                )}\r\n                {props.error.retryCallback && (\r\n                    <TouchableOpacity style={{ flexDirection: `row`, alignItems: `center`, paddingLeft: 8, ...errorBoxStyle.button }} onPress={props.error.retryCallback}>\r\n                        <Icon style={errorBoxStyle.icon} kind={IconKind.retry} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n            {canExpand && expanded && !!errorDetails && (<Text style={{ ...errorBoxStyle.text }}>{errorDetails}</Text>)}\r\n            {canExpand && expanded && !!errorObjText && (<Text style={{ ...errorBoxStyle.text }}>{errorObjText}</Text>)}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nexport const ErrorMessage = (props: { children: string }) => {\r\n    return (\r\n        <View style={{ flexDirection: `row`, alignItems: `center` }}>\r\n            <View style={{ paddingLeft: 8, paddingRight: 8 }}>\r\n                <Icon style={errorBoxStyle.icon_errorMessage} kind={IconKind.error} />\r\n            </View>\r\n            <View style={{ overflow: `hidden` }}>\r\n                <Text style={errorBoxStyle.text_errorMessage} numberOfLines={1}>{props.children}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n","import React, { } from 'react';\r\nimport { Text, TouchableOpacity } from 'react-native-lite';\r\nimport { theme, ThemeTextStyle, ThemeViewStyle, extractViewStyle, extractTextStyle } from 'themes/theme';\r\n\r\nexport const Button = (props: { style?: ThemeTextStyle & ThemeViewStyle, styleAlt?: boolean, children: string, onPress: () => void }) => {\r\n    const s = props.style ?? (props.styleAlt ? theme.button_formAction_alt : theme.button_formAction);\r\n    return (\r\n        <TouchableOpacity style={extractViewStyle(s)} onPress={props.onPress}>\r\n            <Text style={extractTextStyle(s)}>{props.children}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n","import React, { } from 'react';\r\nimport { View, Text } from 'react-native-lite';\r\nimport { theme } from 'themes/theme';\r\nimport { Loading, LoadingInline } from './loading';\r\nimport { ErrorBox, ErrorMessage } from './error-box';\r\nimport { Input_Text, Input_Username, Input_Password, Input_Phone, Input_Email, Input_Currency } from './inputs';\r\nimport { Button } from './button';\r\n\r\ntype PropsOf<T> = T extends (props: infer P) => JSX.Element ? P : never;\r\n\r\nexport const C = {\r\n    Loading,\r\n    LoadingInline,\r\n    ErrorBox,\r\n    ErrorMessage,\r\n    View_Panel: (props: PropsOf<typeof View>) => (<View style={theme.view_panel} {...props} />),\r\n    View_Form: (props: PropsOf<typeof View>) => (<View style={theme.view_form} {...props} />),\r\n    View_FormFields: (props: PropsOf<typeof View>) => (<View style={theme.view_formFields} {...props} />),\r\n    View_FieldRow: (props: PropsOf<typeof View>) => (<View style={theme.view_fieldRow} {...props} />),\r\n    View_FormActionRow: (props: PropsOf<typeof View>) => (<View style={theme.view_formActionRow} {...props} />),\r\n    Text_FormTitle: (props: PropsOf<typeof Text>) => (<Text style={theme.text_formTitle} {...props} />),\r\n    Text_FieldLabel: (props: PropsOf<typeof Text>) => (<Text style={theme.text_fieldLabel} numberOfLines={1} {...props} />),\r\n    Button_FieldInline: (props: PropsOf<typeof Button>) => (<Button style={props.styleAlt ? theme.button_fieldInline_alt : theme.button_fieldInline} {...props} />),\r\n    Button_FormAction: (props: PropsOf<typeof Button>) => (<Button style={props.styleAlt ? theme.button_formAction_alt : theme.button_formAction} {...props} />),\r\n    Input_Text,\r\n    Input_Username,\r\n    Input_Password,\r\n    Input_Phone,\r\n    Input_Email,\r\n    Input_Currency,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ActivityIndicator, View } from 'react-native-lite';\r\nimport { theme } from 'themes/theme';\r\n\r\nexport const Loading = ({ loading }: { loading?: boolean }) => {\r\n\r\n    const visible = loading;\r\n\r\n    // // Show loading for a min time\r\n    // const [visible, setVisible] = useState(loading);\r\n    // const MIN_TIME_MS = 500;\r\n    // useEffect(() => {\r\n    //     if (loading) { setVisible(true); return () => { }; }\r\n    //     const timeoutId = setTimeout(() => {\r\n    //         setVisible(false);\r\n    //     }, MIN_TIME_MS);\r\n    //     return () => {\r\n    //         clearTimeout(timeoutId);\r\n    //     };\r\n    // }, [loading]);\r\n\r\n    if (!visible) { return <></>; }\r\n\r\n    return (\r\n        <View>\r\n            <ActivityIndicator size='large' color={theme.colors.loader} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const LoadingInline = ({ loading }: { loading?: boolean }) => {\r\n\r\n    const visible = loading;\r\n\r\n    // // Show loading for a min time\r\n    // const [visible, setVisible] = useState(loading);\r\n    // const MIN_TIME_MS = 500;\r\n    // useEffect(() => {\r\n    //     if (loading) { setVisible(true); return () => { }; }\r\n    //     const timeoutId = setTimeout(() => {\r\n    //         setVisible(false);\r\n    //     }, MIN_TIME_MS);\r\n    //     return () => {\r\n    //         clearTimeout(timeoutId);\r\n    //     };\r\n    // }, [loading]);\r\n\r\n    if (!visible) { return <></>; }\r\n\r\n    return (\r\n        <>\r\n            <ActivityIndicator size='small' color={theme.colors.loader} />\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { TextInput, View, TouchableOpacity } from 'react-native-lite';\r\nimport { theme, ThemeTextStyle } from 'themes/theme';\r\nimport { PhoneNumber, toStandardPhoneNumber, formatPhoneNumber_UsaCanada } from 'utils/phone-number';\r\nimport { EmailAddress, toEmailAddress } from 'utils/email-address';\r\nimport { Icon } from './icon';\r\nimport { IconKind } from './icon-kind';\r\n\r\nexport const Input_Text = (props: { style?: ThemeTextStyle, value: string, onChange: (value: string) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean, onFocus?: () => void, onBlur?: () => void }) => {\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='default'\r\n            autoCompleteType='off'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={`${props.value}`}\r\n            onChange={(x) => props.onChange(x)}\r\n            onSubmitEditing={props.onSubmit}\r\n            onFocus={props.onFocus}\r\n            onBlur={props.onBlur}\r\n        />\r\n    );\r\n};\r\n\r\nexport const Input_Username = (props: { style?: ThemeTextStyle, value: string, onChange: (value: string) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean }) => {\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='default'\r\n            autoCompleteType='username'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={`${props.value}`}\r\n            onChange={(x) => props.onChange(x)}\r\n            onSubmitEditing={props.onSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport const Input_Password = (props: { style?: ThemeTextStyle, value: string, onChange: (value: string) => void, onSubmit?: () => void, onBlur?: () => void, placeholder?: string, editable?: boolean }) => {\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const inputStyle = props.style ?? theme.input_fieldEntry;\r\n    const { marginRight } = inputStyle;\r\n    return (\r\n        <View style={{ flexDirection: `row`, alignItems: `center` }}>\r\n            <TextInput style={{ ...inputStyle, marginRight: 0 }}\r\n                keyboardType='default'\r\n                autoCompleteType='password'\r\n                secureTextEntry={!showPassword}\r\n                placeholder={props.placeholder}\r\n                editable={props.editable}\r\n                value={`${props.value}`}\r\n                onChange={(x) => props.onChange(x)}\r\n                onSubmitEditing={props.onSubmit}\r\n                onBlur={props.onBlur}\r\n            />\r\n            <TouchableOpacity onPress={() => setShowPassword(s => !s)} style={{ outlineColor: theme.icon.outlineColor }}>\r\n                <View style={{ paddingLeft: 4, paddingRight: 4, marginRight }}>\r\n                    <Icon style={theme.icon} kind={showPassword ? IconKind.eye : IconKind.eyeSlash} />\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport type Currency = number;// & { __type: 'currency' };\r\nexport const Input_Currency = (props: { style?: ThemeTextStyle, value: Currency, onChange: (value: Currency) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean }) => {\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='numeric'\r\n            autoCompleteType='off'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={`${props.value}`}\r\n            onChange={(x) => props.onChange(Number.parseFloat(x) || 0)}\r\n            onSubmitEditing={props.onSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport const Input_Phone = (props: { style?: ThemeTextStyle, value: PhoneNumber, onChange: (value: PhoneNumber) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean }) => {\r\n\r\n    const [valueActual, setValueActual] = useState(formatPhoneNumber_UsaCanada(props.value));\r\n    const changeValueActual = (v: string) => {\r\n        setValueActual(formatPhoneNumber_UsaCanada(v));\r\n        props.onChange(toStandardPhoneNumber(v));\r\n    };\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='phone-pad'\r\n            autoCompleteType='tel'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={valueActual}\r\n            onChange={changeValueActual}\r\n            onSubmitEditing={props.onSubmit}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport const Input_Email = (props: { style?: ThemeTextStyle, value: EmailAddress, onChange: (value: EmailAddress) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean }) => {\r\n\r\n    const [valueActual, setValueActual] = useState(toEmailAddress(props.value));\r\n    const changeValueActual = (v: string) => {\r\n        setValueActual(toEmailAddress(v));\r\n        props.onChange(toEmailAddress(v));\r\n    };\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='email-address'\r\n            autoCompleteType='email'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={valueActual}\r\n            onChange={changeValueActual}\r\n            onSubmitEditing={props.onSubmit}\r\n        />\r\n    );\r\n};\r\n","export async function delay(timeout: number): Promise<void> {\r\n    return await new Promise((resolve) => {\r\n        setTimeout(resolve, timeout);\r\n    });\r\n}\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import React from 'react';\r\nimport { ThemeIconStyle, theme } from 'themes/theme';\r\nimport { MdMenu, MdArrowBack, MdCheckBoxOutlineBlank, MdErrorOutline, MdContentCopy, MdDashboard } from 'react-icons/md';\r\nimport { FiChevronRight, FiChevronDown } from 'react-icons/fi';\r\nimport { FaRedo, FaPlus, FaMinus, FaEye, FaEyeSlash, FaCheck, FaCheckSquare, FaSquare } from 'react-icons/fa';\r\nimport { View } from 'react-native-lite';\r\nimport { IconKind } from './icon-kind';\r\n\r\nfunction getIcon(kind: IconKind) {\r\n    switch (kind) {\r\n        case IconKind.menu: return { name: `menu`, component: MdMenu };\r\n        case IconKind.back: return { name: `arrow-back`, component: MdArrowBack };\r\n        case IconKind.error: return { name: `error-outline`, component: MdErrorOutline };\r\n        case IconKind.expanded: return { name: `chevron-down`, component: FiChevronDown };\r\n        case IconKind.collapsed: return { name: `chevron-right`, component: FiChevronRight };\r\n        case IconKind.copy: return { name: `content-copy`, component: MdContentCopy };\r\n        case IconKind.retry: return { name: `reload`, component: FaRedo };\r\n        case IconKind.dashboard: return { name: `dashboard`, component: MdDashboard };\r\n        case IconKind.add: return { name: `plus`, component: FaPlus };\r\n        case IconKind.remove: return { name: `minus`, component: FaMinus };\r\n        case IconKind.eye: return { name: `eye`, component: FaEye };\r\n        case IconKind.eyeSlash: return { name: `eye-slash`, component: FaEyeSlash };\r\n        case IconKind.checkChecked: return { name: `checked`, component: FaCheckSquare };\r\n        case IconKind.checkUnchecked: return { name: `unchecked`, component: FaSquare };\r\n\r\n        // case IconKind.Account: return { name: `account-circle`, component: MaterialIcons };\r\n        // case IconKind.Message: return { name: `message`, component: MaterialIcons };\r\n        // case IconKind.Subscription: return { name: `ticket-account`, component: MaterialCommunityIcons };\r\n        // case IconKind.Campaigns: return { name: `calendar-multiselect`, component: MaterialCommunityIcons };\r\n        // case IconKind.Contacts: return { name: `contacts`, component: MaterialIcons };\r\n        // case IconKind.Keywords: return { name: `key-variant`, component: MaterialCommunityIcons };\r\n        // case IconKind.Resources: return { name: `collections-bookmark`, component: MaterialIcons };\r\n        // case IconKind.Admin: return { name: `settings`, component: MaterialIcons };\r\n        // case IconKind.Solutions: return { name: '', component: FontAwesome };\r\n        // case IconKind.Texting: return { name: '', component: FontAwesome };\r\n        // case IconKind.Pricing: return { name: '', component: FontAwesome };\r\n        // case IconKind.Download: return { name: '', component: FontAwesome };\r\n\r\n        default:\r\n            return { name: `unknown`, component: MdCheckBoxOutlineBlank };\r\n    }\r\n}\r\n\r\nexport const Icon = (props: { kind: IconKind, style?: ThemeIconStyle }) => {\r\n    const icon = getIcon(props.kind);\r\n    const IconComponent = icon.component;\r\n    const size = props.style?.size ?? theme.icon.size ?? theme.sizes.fontSize;\r\n    return (\r\n        <View style={{ width: size, height: size }}>\r\n            <IconComponent name={icon.name} size={size} color={props.style?.color ?? theme.icon.color} />\r\n        </View>\r\n    );\r\n};\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nexport type ThemeViewStyle = {\r\n    display?: 'flex';\r\n    flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\r\n    flexWrap?: 'wrap' | 'nowrap';\r\n    flex?: number;\r\n    justifyContent?: 'flex-start' | 'center' | 'flex-end' | 'space-around' | 'space-between';\r\n    alignItems?: 'flex-start' | 'center' | 'flex-end';\r\n    alignSelf?: 'center' | 'stretch' | 'flex-start' | 'flex-end';\r\n    overflow?: 'visible' | 'hidden';\r\n\r\n    background?: string;\r\n\r\n    margin?: number;\r\n    marginLeft?: number;\r\n    marginRight?: number;\r\n    marginTop?: number;\r\n    marginBottom?: number;\r\n    padding?: number;\r\n    paddingRight?: number;\r\n    paddingLeft?: number;\r\n    paddingTop?: number;\r\n    paddingBottom?: number;\r\n\r\n    width?: number;\r\n    minWidth?: number;\r\n    maxWidth?: number;\r\n    height?: number;\r\n\r\n    borderWidth?: number;\r\n    borderLeftWidth?: number;\r\n    borderRightWidth?: number;\r\n    borderTopWidth?: number;\r\n    borderBottomWidth?: number;\r\n\r\n    borderColor?: string;\r\n    borderLeftColor?: string;\r\n    borderRightColor?: string;\r\n    borderTopColor?: string;\r\n    borderBottomColor?: string;\r\n\r\n\r\n    borderRadius?: number;\r\n    borderStyle?: 'solid';\r\n    outlineColor?: string;\r\n    outline?: `none`;\r\n\r\n    transform?: string;\r\n\r\n    opacity?: number;\r\n\r\n    position?: 'absolute' | 'relative' | 'fixed';\r\n    top?: number;\r\n    bottom?: number;\r\n    left?: number;\r\n    right?: number;\r\n    zIndex?: number;\r\n};\r\nexport type ThemeTextStyle = {\r\n    margin?: number;\r\n    marginLeft?: number;\r\n    marginRight?: number;\r\n    marginTop?: number;\r\n    marginBottom?: number;\r\n    padding?: number;\r\n    paddingRight?: number;\r\n    paddingLeft?: number;\r\n    paddingTop?: number;\r\n    paddingBottom?: number;\r\n\r\n    color?: string;\r\n\r\n    fontFamily?: string;\r\n    fontSize?: number;\r\n    fontWeight?: 'normal' | 'bold' | 'lighter';\r\n    lineHeight?: string;\r\n    whiteSpace?: 'normal' | 'nowrap' | 'pre' | 'pre-wrap';\r\n    minWidth?: number;\r\n\r\n    outlineColor?: string;\r\n    userSelect?: `none`;\r\n};\r\nexport type ThemeIconStyle = {\r\n    color?: string;\r\n    size?: number;\r\n    outlineColor?: string;\r\n};\r\n\r\nexport const extractViewStyle = (style: ThemeViewStyle & ThemeTextStyle): ThemeViewStyle => {\r\n    return {\r\n        display: style.display,\r\n        flexDirection: style.flexDirection,\r\n        flex: style.flex,\r\n        justifyContent: style.justifyContent,\r\n        alignItems: style.alignItems,\r\n        overflow: style.overflow,\r\n\r\n        background: style.background,\r\n\r\n        margin: style.margin,\r\n        marginLeft: style.margin ?? style.marginLeft,\r\n        marginRight: style.margin ?? style.marginRight,\r\n        marginTop: style.margin ?? style.marginTop,\r\n        marginBottom: style.margin ?? style.marginBottom,\r\n        padding: style.padding,\r\n        paddingRight: style.padding ?? style.paddingRight,\r\n        paddingLeft: style.padding ?? style.paddingLeft,\r\n        paddingTop: style.padding ?? style.paddingTop,\r\n        paddingBottom: style.padding ?? style.paddingBottom,\r\n\r\n        width: style.width,\r\n        minWidth: style.minWidth,\r\n        maxWidth: style.maxWidth,\r\n        height: style.height,\r\n\r\n        borderWidth: style.borderWidth,\r\n        borderRadius: style.borderRadius,\r\n        borderColor: style.borderColor,\r\n        borderStyle: style.borderStyle,\r\n\r\n        outlineColor: style.outlineColor,\r\n    };\r\n};\r\nexport const extractTextStyle = (style: ThemeViewStyle & ThemeTextStyle): ThemeTextStyle => {\r\n    return {\r\n        // padding: style.padding,\r\n        color: style.color,\r\n\r\n        fontFamily: style.fontFamily,\r\n        fontSize: style.fontSize,\r\n        fontWeight: style.fontWeight,\r\n        lineHeight: style.lineHeight,\r\n        // whiteSpace: style.whiteSpace,\r\n\r\n        outlineColor: style.outlineColor,\r\n    };\r\n};\r\n\r\nexport const basicThemeColors = {\r\n    text: `#333333`,\r\n    text_header: `#333333`,\r\n    text_button: `#333333`,\r\n    text_error: `#333333`,\r\n    text_errorMessage: `#ff3333`,\r\n    border: `#cccccc`,\r\n    border_minor: `#cccccc`,\r\n    border_input: `#cccccc`,\r\n    outline: `#888888`,\r\n    background: `#ffffff`,\r\n    background_field: `#dddddd`,\r\n    background_button: `#eeeeee`,\r\n    background_error: `#ffcccc`,\r\n    loader: `#3333ff`,\r\n    icon: `#3333ff`,\r\n};\r\nexport type RectSize = { all?: number, left?: number, right?: number, top?: number, bottom?: number };\r\nconst getBorderSizes = (size: RectSize) => {\r\n    return {\r\n        borderWidth: size.all,\r\n        borderLeftWidth: size.left ?? size.all,\r\n        borderRightWidth: size.right ?? size.all,\r\n        borderTopWidth: size.top ?? size.all,\r\n        borderBottomWidth: size.bottom ?? size.all,\r\n    };\r\n};\r\n\r\nexport const basicThemeSizes = {\r\n    textPadding: 4,\r\n    borderWidth: { all: 1 } as RectSize,\r\n    borderWidth_minor: { all: 1 } as RectSize,\r\n    borderWidth_input: { all: 1 } as RectSize,\r\n    borderRadius: 4,\r\n    sectionGap: 16,\r\n    elementGap: 8,\r\n    rowGap: 4,\r\n    rowPadding: 4,\r\n\r\n    fontSize: 14,\r\n    fontSize_input: 16,\r\n    fontSize_button: 14,\r\n    fontSize_header: 16,\r\n\r\n    lineHeight: `18px`,\r\n\r\n    minWidth_label: 120,\r\n    minWidth_input: 120,\r\n    minWidth_button: 120,\r\n\r\n    icon: 14,\r\n};\r\n\r\nexport const basicFont = {\r\n    fontFamily: `\"Trebuchet MS\", Helvetica, Roboto, sans-serif`,\r\n    fontWeight_normal: `normal` as 'normal' | 'bold',\r\n    fontWeight_button: `bold` as 'normal' | 'bold',\r\n    fontWeight_header: `bold` as 'normal' | 'bold',\r\n};\r\n\r\nexport type ThemeColors = typeof basicThemeColors;\r\nexport type ThemeSizes = typeof basicThemeSizes;\r\nexport type ThemeFont = typeof basicFont;\r\n\r\nconst createTheme = (colors: ThemeColors, sizes: ThemeSizes, font: ThemeFont) => {\r\n\r\n    const borderProps = {\r\n        ...getBorderSizes(sizes.borderWidth),\r\n\r\n        borderRadius: sizes.borderRadius,\r\n        borderColor: colors.border,\r\n        borderStyle: `solid`,\r\n        outlineColor: colors.outline,\r\n    } as const;\r\n\r\n    const borderProps_minor = {\r\n        ...getBorderSizes(sizes.borderWidth_minor),\r\n\r\n        borderRadius: sizes.borderRadius,\r\n        borderColor: colors.border_minor,\r\n        borderStyle: `solid`,\r\n        outlineColor: colors.outline,\r\n    } as const;\r\n\r\n    const borderProps_input = {\r\n        ...getBorderSizes(sizes.borderWidth_input),\r\n\r\n        borderRadius: sizes.borderRadius,\r\n        borderColor: colors.border_input,\r\n        borderStyle: `solid`,\r\n        outlineColor: colors.outline,\r\n    } as const;\r\n\r\n    let sView: ThemeViewStyle = {};\r\n    let sText: ThemeTextStyle = {};\r\n    let sIcon: ThemeIconStyle = {};\r\n    let sTextView: ThemeTextStyle & ThemeViewStyle = {};\r\n\r\n    const theme = {\r\n        colors,\r\n        sizes,\r\n        font,\r\n\r\n        view_panel: sView = {\r\n            background: colors.background,\r\n            padding: sizes.elementGap,\r\n        },\r\n        view_form: sView = {\r\n            ...borderProps,\r\n            marginBottom: sizes.sectionGap,\r\n            padding: sizes.elementGap,\r\n            // background: colors.background_field,\r\n        },\r\n        text_formTitle: sText = {\r\n            padding: sizes.textPadding,\r\n            color: colors.text_header,\r\n            fontSize: sizes.fontSize_header,\r\n            fontFamily: font.fontFamily,\r\n            fontWeight: font.fontWeight_header,\r\n        },\r\n        view_formFields: sView = {\r\n            // ...borderProps,\r\n            ...borderProps_minor,\r\n            // padding: sizes.elementGap,\r\n            marginBottom: sizes.rowGap,\r\n            background: colors.background_field,\r\n            // alignItems: `center`,\r\n        },\r\n        view_fieldRow: sView = {\r\n            // ...borderProps,\r\n            // ...borderProps_minor,\r\n            // marginBottom: sizes.rowGap,\r\n            // padding: sizes.rowPadding,\r\n            marginLeft: sizes.rowPadding,\r\n            // background: colors.background_field,\r\n            display: `flex`,\r\n            flexDirection: `row`,\r\n\r\n            alignItems: `center`,\r\n            flexWrap: `wrap`,\r\n        },\r\n        text_fieldLabel: sText = {\r\n            padding: sizes.textPadding,\r\n            color: colors.text,\r\n            fontSize: sizes.fontSize,\r\n            fontWeight: font.fontWeight_normal,\r\n            minWidth: sizes.minWidth_label,\r\n            //  whiteSpace: `nowrap`,\r\n        },\r\n        input_fieldEntry: sText = {\r\n            ...borderProps_input,\r\n            marginBottom: sizes.rowGap,\r\n            marginRight: sizes.rowGap,\r\n            padding: sizes.textPadding,\r\n            color: colors.text,\r\n            fontSize: sizes.fontSize_input,\r\n            fontWeight: font.fontWeight_normal,\r\n            lineHeight: sizes.lineHeight,\r\n            minWidth: sizes.minWidth_input,\r\n        },\r\n        button_fieldInline: sTextView = {\r\n            ...borderProps,\r\n            // marginLeft: sizes.elementGap,\r\n            marginBottom: sizes.rowGap,\r\n            marginRight: sizes.rowGap,\r\n            padding: sizes.textPadding,\r\n            background: colors.background_button,\r\n            color: colors.text_button,\r\n            fontSize: sizes.fontSize_button,\r\n            fontWeight: font.fontWeight_button,\r\n            lineHeight: sizes.lineHeight,\r\n            display: `flex`,\r\n            minWidth: sizes.minWidth_button,\r\n        },\r\n        button_fieldInline_alt: sTextView = {\r\n            ...sTextView,\r\n            background: colors.text_button,\r\n            color: colors.background_button,\r\n            borderColor: colors.background_button,\r\n        },\r\n        view_formActionRow: sView = {\r\n            display: `flex`,\r\n            flexDirection: `row`,\r\n            justifyContent: `flex-end`,\r\n            marginBottom: sizes.elementGap,\r\n        },\r\n        button_formAction: sTextView = {\r\n            ...borderProps,\r\n            marginLeft: sizes.elementGap,\r\n            padding: sizes.textPadding,\r\n            background: colors.background_button,\r\n            color: colors.text_button,\r\n            fontSize: sizes.fontSize_button,\r\n            fontWeight: font.fontWeight_button,\r\n            lineHeight: sizes.lineHeight,\r\n            minWidth: sizes.minWidth_button,\r\n        },\r\n        button_formAction_alt: sTextView = {\r\n            ...sTextView,\r\n            background: colors.text_button,\r\n            color: colors.background_button,\r\n            borderColor: colors.background_button,\r\n        },\r\n\r\n        view_error: sView = {\r\n            ...borderProps,\r\n            marginBottom: sizes.sectionGap,\r\n            padding: sizes.rowPadding,\r\n            background: colors.background_error,\r\n        },\r\n        text_error: sText = {\r\n            padding: sizes.textPadding,\r\n            color: colors.text_error,\r\n            fontSize: sizes.fontSize,\r\n            fontFamily: font.fontFamily,\r\n            fontWeight: font.fontWeight_button,\r\n        },\r\n        text_errorMessage: sText = {\r\n            padding: sizes.textPadding,\r\n            color: colors.text_errorMessage,\r\n            fontSize: sizes.fontSize,\r\n            fontFamily: font.fontFamily,\r\n            fontWeight: font.fontWeight_button,\r\n        },\r\n\r\n        icon: sIcon = {\r\n            size: sizes.icon,\r\n            color: colors.icon,\r\n            outlineColor: colors.outline,\r\n        },\r\n        icon_errorMessage: sIcon = {\r\n            size: sizes.icon,\r\n            color: colors.text_errorMessage,\r\n            outlineColor: colors.outline,\r\n        },\r\n    } as const;\r\n\r\n    return theme;\r\n};\r\n\r\nexport const purpleColors = {\r\n    purple: `#863d8f`,\r\n    purpleLite: `#a75da7`,\r\n    purpleBackgroundLite: `#ddbfdd`,\r\n    blue: `#3baccf`,\r\n    gray: `#656364`,\r\n    lightGray: `#f8f6f7`,\r\n    lightBackgroundGray: `#e8e6e7`,\r\n    borderGray: `#d7c7d7`,\r\n    headerWhite: `#ffffff`,\r\n    headerGray: `#cecece`,\r\n    menuWhite: `#ffffff`,\r\n    bodyWhite: `#ffffff`,\r\n    buttonGray: `#a0a1a5`,\r\n    buttonWhite: `#e2e3e9`,\r\n    headingGray: `#f8f6f7`,\r\n    cardLightGray: `#f8f8f8`,\r\n    textWhite: `#ffffff`,\r\n    textBlack: `#2b2b2b`,\r\n    textGray: `#696768`,\r\n\r\n    // New Colors\r\n    warnRed: `#C56364`,\r\n    errorRed: `#C56364`,\r\n    deleteRed: `#C56364`,\r\n    changedYellow: `#F5F5C5`,\r\n};\r\n\r\nexport const purpleThemeColors: typeof basicThemeColors = {\r\n    ...basicThemeColors,\r\n    text: `#2b2b2b`,\r\n    text_header: `#863d8f`,\r\n    text_button: `#ffffff`,\r\n    // text_error: `#ffffff`,\r\n    border: `#863d8f`,\r\n    border_minor: `#863d8f`,\r\n    // border_minor: `#aaaaaa`,\r\n    border_input: `#aaaaaa`,\r\n    background: `#ffffff`,\r\n    background_field: `#dddddd`,\r\n    background_button: `#863d8f`,\r\n    // background_error: `#C56364`,\r\n    loader: `#863d8f`,\r\n    icon: `#863d8f`,\r\n};\r\n\r\nexport const purpleSizes: typeof basicThemeSizes = {\r\n    ...basicThemeSizes,\r\n    borderWidth: { all: 1, bottom: 4 },\r\n    borderWidth_minor: { all: 0, bottom: 1 },\r\n};\r\n\r\nexport const vscodeThemeColors = {\r\n    colors: {\r\n        text: `#569CD6`,\r\n        border: `#6796E6`,\r\n        background: `#1e1e1e`,\r\n        background_field: `#2e2e2e`,\r\n    },\r\n};\r\n\r\n// eslint-disable-next-line import/no-mutable-exports\r\nexport let theme = createTheme(basicThemeColors, basicThemeSizes, basicFont);\r\n// eslint-disable-next-line import/no-mutable-exports\r\n// export let theme = createTheme(purpleThemeColors, purpleSizes, basicFont);\r\n\r\nexport const setTheme = (colors: ThemeColors, sizes: ThemeSizes, font: ThemeFont) => {\r\n    theme = createTheme(purpleThemeColors, basicThemeSizes, basicFont);\r\n};\r\n","import { getValuesAsItems } from './objects';\r\n\r\nexport const moveItem = <T>(obj: T, from: T[], to: T[]) => {\r\n    const i = from.indexOf(obj);\r\n    if (i < 0) { throw new Error(`moveItem Failed to find an item in the from array: ${JSON.stringify({ obj, from, to })}`); }\r\n    from.splice(i, 1);\r\n    to.push(obj);\r\n};\r\n\r\nexport const distinct = <T>(items: T[]): T[] => {\r\n    const set = new Set(items);\r\n    return [...set];\r\n};\r\n\r\nexport const shuffle = <T>(items: T[]): T[] => {\r\n    return items.map(x => ({ x, value: Math.random() })).sort((a, b) => a.value - b.value).map(x => x.x);\r\n};\r\n\r\nexport const distinct_key = <T>(items: T[], getKey: (item: T) => string): T[] => {\r\n    const set = {} as { [key: string]: T };\r\n    items.forEach(x => { set[getKey(x)] = x; });\r\n    return getValuesAsItems(set);\r\n};\r\n\r\nexport const groupItems = <T>(items: T[], getKey: (item: T) => string): { [key: string]: T[] } => {\r\n    const groups = {} as { [key: string]: T[] };\r\n    for (const x of items) {\r\n        const g = groups[getKey(x)] ?? (groups[getKey(x)] = []);\r\n        g.push(x);\r\n    }\r\n    return groups;\r\n};\r\n\r\nexport const mergeItems = <T>(items: T[], getKey: (item: T) => string, getMerged: (item: T[], key: string) => T): T[] => {\r\n    const groups = groupItems(items, getKey);\r\n    const merged = getValuesAsItems(groups).map(g => getMerged(g, getKey(g[0])));\r\n    return merged;\r\n};\r\n\r\nexport function sameArrayContents<T>(a: undefined | null | T[], b?: undefined | null | T[]) {\r\n    if (a === b) { return true; }\r\n    if (a == null && b == null) { return true; }\r\n    if (a == null || b == null) { return false; }\r\n    if (a.length !== b.length) { return false; }\r\n    for (const i in a) {\r\n        if (a[i] !== b[i]) { return false; }\r\n    }\r\n    return true;\r\n}\r\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flatMap');\n","import { useEffect, useState, useRef } from 'react';\r\nimport { sameArrayContents } from 'utils/arrays';\r\nimport { ErrorState } from 'utils/error';\r\n\r\ntype TDoWork = (\r\n    doWorkInner: (stopIfObsolete: (() => void)) => Promise<void>,\r\n    getContext?: () => unknown[]) => void;\r\n\r\n\r\nexport function useMounted() {\r\n    const mounted = useRef(true);\r\n    useEffect(() => {\r\n        // Unmount on unsub\r\n        return () => {\r\n            mounted.current = false;\r\n        };\r\n    }, [/* Init Only */]);\r\n    return { mounted };\r\n}\r\n\r\n/** Automatically handle loading and error objects with asyncronous calls\r\n * @return The { loading, error, doWork } values\r\n * @example\r\n *\r\n *      const { loading, error, doWork } = ChatHooks.useAutoLoadingError();\r\n *      ...\r\n *          doWork(async (stopIfObsolete) => {\r\n *              ...\r\n *              const result = async DoAsyncWork());\r\n *              stopIfObsolete(); // Stop work if component has been unmounted, or if contextValues have changed since beginning of doWork\r\n *              ...\r\n *              setResult(result);\r\n *          }, () => [ contextValueA, contextValueB ]); // Optional context values to stop work if changed\r\n *    \r\n */\r\nexport function useAutoLoadingError() {\r\n    const { mounted } = useMounted();\r\n    const [loadingError, setLoadingError] = useState({ loading: false, error: null as null | ErrorState });\r\n\r\n    const UNMOUNTED = `unmounted`;\r\n    const CHANGED_CONTEXT = `changedContext`;\r\n\r\n    const doWork: TDoWork = (\r\n        doWorkInner: (stopIfObsolete: (() => void)) => Promise<void>,\r\n        getContext?: () => unknown[]) => {\r\n\r\n        let contextInit = undefined as undefined | unknown[];\r\n\r\n        const stopIfObsolete = () => {\r\n            if (!mounted.current) {\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw UNMOUNTED;\r\n            }\r\n            const c = getContext?.();\r\n\r\n            if (!sameArrayContents(contextInit, c)) {\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw CHANGED_CONTEXT;\r\n            }\r\n        };\r\n\r\n        const doCall = async () => {\r\n            contextInit = getContext?.();\r\n            setLoadingError({ loading: true, error: null });\r\n\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            let hadError = false;\r\n\r\n            try {\r\n                try {\r\n                    await doWorkInner(stopIfObsolete);\r\n                    stopIfObsolete();\r\n                    setLoadingError({ loading: false, error: null });\r\n                }\r\n                catch (error) {\r\n                    // Ignore unmounted or changed context\r\n                    if (error !== UNMOUNTED && error !== CHANGED_CONTEXT) {\r\n                        throw error;\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                // console.log(`doWork catch`, { err: error });\r\n                hadError = true;\r\n\r\n                if (!mounted.current) {\r\n                    // console.warn(`doWork Error when not Mounted`, { err: error });\r\n                    return;\r\n                }\r\n\r\n                setLoadingError({ loading: false, error: { message: error.message ?? `Unknown Error in doWork`, error, retryCallback: doCall } });\r\n            }\r\n        };\r\n\r\n        // Start Async\r\n        (async () => await doCall())();\r\n    };\r\n\r\n    return { loading: loadingError.loading, error: loadingError.error, doWork };\r\n}\r\n\r\nexport function useLoadData<T>(doWork: TDoWork, getData: () => Promise<T>, getDataDeps?: () => unknown[]) {\r\n    const [data, setData] = useState(null as null | T);\r\n    useEffect(() => {\r\n        // console.log(`useLoadData.useEffect`);\r\n        doWork(async (stopIfObsolete) => {\r\n            // console.log(`useLoadData.useEffect.doWork`);\r\n            const d = await getData();\r\n            stopIfObsolete();\r\n            setData(d);\r\n        }, getDataDeps);\r\n    }, getDataDeps?.() ?? []);\r\n    return { data };\r\n}\r\n","import { distinct, shuffle } from 'utils/arrays';\r\nimport { SpeechService } from '../../utils/speech';\r\nimport { ProblemService, ProblemAnswer } from '../problems-service';\r\nimport { getSpellingEntries } from './spelling-entries';\r\n\r\nexport const createSpellingProblemService = ({ speechService, maxAnswers = 4, sectionSize = 25 }: { speechService: SpeechService, maxAnswers?: number, sectionSize?: number }): ProblemService => {\r\n    const speech = speechService;\r\n    const spellingEntries = getSpellingEntries();\r\n    const sectionCount = Math.ceil(spellingEntries.length / sectionSize);\r\n\r\n    let state = {\r\n        nextIndex: 0,\r\n        completedSectionKeys: [] as string[],\r\n    };\r\n\r\n    const getSectionKey = (sectionIndex: number) => {\r\n        return `${sectionIndex}`;\r\n    };\r\n    const getSectionName = (sectionIndex: number) => {\r\n        return `Spelling ${sectionIndex + 1}`;\r\n    };\r\n\r\n    const service: ProblemService = {\r\n        load: async (storage) => {\r\n            const loaded = await storage.load<typeof state>();\r\n            if (loaded) {\r\n                state = loaded;\r\n            }\r\n        },\r\n        save: async (storage) => {\r\n            await storage.save(state);\r\n        },\r\n        getSections: () => [...new Array(sectionCount)].map((x, i) => ({\r\n            key: getSectionKey(i),\r\n            name: getSectionName(i),\r\n            isComplete: state.completedSectionKeys.includes(getSectionKey(i)),\r\n        })),\r\n        gotoSection: ({ key }) => {\r\n            const a = Number.parseInt(key, 10);\r\n            state.nextIndex = a * sectionSize;\r\n            console.log(`createSpellingProblemService gotoSection`, { key, a, state });\r\n        },\r\n        getNextProblem: () => {\r\n            if (state.nextIndex >= spellingEntries.length) {\r\n                state.nextIndex = 0;\r\n            }\r\n\r\n            const i = state.nextIndex;\r\n            state.nextIndex++;\r\n\r\n            const p = spellingEntries[i];\r\n            const correctValue = p.word;\r\n            const wrongAnswerCount = maxAnswers - 1;\r\n            const wrongValues =\r\n                shuffle(distinct(p.mispellings)).slice(0, wrongAnswerCount);\r\n\r\n            const answers: ProblemAnswer[] = shuffle([...wrongValues.map(x => ({ value: `${x}`, isCorrect: false })), { value: `${correctValue}`, isCorrect: true }]).map(x => ({ ...x, key: x.value }));\r\n\r\n            const isLastOfSection = (i + 1) % sectionSize === 0;\r\n            const isLastOfSubject = i === spellingEntries.length - 1;\r\n            return {\r\n                key: `${i + 1}`,\r\n                question: `Word ${i + 1}`,\r\n                onQuestion: () => { speech.speak(correctValue); },\r\n                answers,\r\n                sectionKey: getSectionKey(Math.floor(i / sectionSize)),\r\n                isLastOfSection,\r\n                isLastOfSubject,\r\n            };\r\n        },\r\n        recordAnswer: (problem, answer) => {\r\n            if (answer.isCorrect && problem.isLastOfSection) {\r\n                state.completedSectionKeys.push(problem.sectionKey);\r\n            }\r\n        },\r\n    };\r\n\r\n    return service;\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, Pressable, Platform } from 'react-native-lite';\r\n\r\nexport type GamepadPressState = { moveDirection: { x: number, y: number }, buttons: { key: string, text: string, isDown: boolean }[] };\r\nexport const GamepadAnalogStateful = (props: {\r\n    style: { backgroundColor: string, borderColor: string };\r\n    onPressStateChange: (value: GamepadPressState) => void;\r\n    buttons: { text: string, key: string }[];\r\n}) => {\r\n\r\n    const state = useRef({\r\n        moveDirection: { x: 0, y: 0 },\r\n        buttons: props.buttons.map((x, i) => ({\r\n            isDown: false,\r\n            key: x.key,\r\n            text: x.text,\r\n            onPressIn: () => {\r\n                state.current.buttons[i].isDown = true;\r\n                props.onPressStateChange(state.current);\r\n            },\r\n            onPressOut: () => {\r\n                state.current.buttons[i].isDown = false;\r\n                props.onPressStateChange(state.current);\r\n            },\r\n        })),\r\n    });\r\n\r\n    const onMovePressIn = (dir: { x: number, y: number }) => {\r\n        const s = state.current;\r\n\r\n        state.current.moveDirection = {\r\n            x: dir.x ? dir.x : s.moveDirection.x,\r\n            y: dir.y ? dir.y : s.moveDirection.y,\r\n        };\r\n\r\n        console.log(`onMovePressIn`, { dir, s, moveDirection: state.current.moveDirection });\r\n\r\n        props.onPressStateChange(state.current);\r\n    };\r\n\r\n    const onMovePressOut = (dir: { x: number, y: number }) => {\r\n        const s = state.current;\r\n        state.current.moveDirection = {\r\n            x: dir.x ? 0 : s.moveDirection.x,\r\n            y: dir.y ? 0 : s.moveDirection.y,\r\n        };\r\n        props.onPressStateChange(state.current);\r\n    };\r\n\r\n    return (\r\n        <GamepadAnalog {...props} onMovePressIn={onMovePressIn} onMovePressOut={onMovePressOut} buttons={state.current.buttons} />\r\n    );\r\n};\r\n\r\nconst inputStyles = {\r\n    container: { flex: 1, alignSelf: `stretch`, flexDirection: `row`, justifyContent: `space-between`, alignItems: `center`, padding: 4 },\r\n    section: { justifyContent: `center`, alignItems: `center`, padding: 4 },\r\n    moveSectionWrapper: { overflow: `hidden` },\r\n    moveSectionRotation: { transform: `rotate(0.125turn)`, margin: 0 },\r\n    row: { flexDirection: `row` },\r\n    cellTouch: { outline: `none` },\r\n    cellView: { pointerEvents: `none`, position: `relative`, margin: 4, width: 56, height: 56, justifyContent: `center`, alignItems: `center`, borderWidth: 0, borderStyle: `solid`, outline: `none` },\r\n    cellText: { userSelect: `none`, pointerEvents: `none` },\r\n    moveCellText: { userSelect: `none`, pointerEvents: `none`, transform: `rotate(-0.125turn)` },\r\n    cellEmptyView: { margin: 2, width: 56, height: 56 },\r\n    cellTextOcclusionView: { position: `absolute`, top: 0, bottom: 0, left: 0, right: 0, backgroundColor: `red`, opacity: 0 },\r\n} as const;\r\n\r\nexport const GamepadAnalog = (props: {\r\n    style: { backgroundColor: string, borderColor: string };\r\n    onMovePressIn: (direction: { x: number, y: number }) => void;\r\n    onMovePressOut: (direction: { x: number, y: number }) => void;\r\n    buttons: { text: string, onPressIn: () => void, onPressOut: () => void }[];\r\n}) => {\r\n    const { onMovePressIn, onMovePressOut } = props;\r\n\r\n    const cellViewStyle = { ...inputStyles.cellView, ...props.style };\r\n\r\n    // Keyboard\r\n    useEffect(() => {\r\n        const onIgnore = (e: KeyboardEvent) => {\r\n            e.preventDefault();\r\n            e.stopPropagation?.();\r\n            return false;\r\n        };\r\n        if (Platform.OS === `web`) {\r\n            const onKeyDown = (e: KeyboardEvent) => {\r\n                if (e.key === `ArrowUp`) { onMovePressIn({ x: 0, y: +1 }); return onIgnore(e); }\r\n                if (e.key === `ArrowDown`) { onMovePressIn({ x: 0, y: -1 }); return onIgnore(e); }\r\n                if (e.key === `ArrowLeft`) { onMovePressIn({ x: -1, y: 0 }); return onIgnore(e); }\r\n                if (e.key === `ArrowRight`) { onMovePressIn({ x: +1, y: 0 }); return onIgnore(e); }\r\n                if (e.key === ` `) { props.buttons[0]?.onPressIn(); return onIgnore(e); }\r\n                // console.log(`onKeyDown`, { key: e.key });\r\n                return true;\r\n            };\r\n            const onKeyUp = (e: KeyboardEvent) => {\r\n                if (e.key === `ArrowUp`) { onMovePressOut({ x: 0, y: +1 }); return onIgnore(e); }\r\n                if (e.key === `ArrowDown`) { onMovePressOut({ x: 0, y: -1 }); return onIgnore(e); }\r\n                if (e.key === `ArrowLeft`) { onMovePressOut({ x: -1, y: 0 }); return onIgnore(e); }\r\n                if (e.key === `ArrowRight`) { onMovePressOut({ x: +1, y: 0 }); return onIgnore(e); }\r\n                if (e.key === ` `) { props.buttons[0]?.onPressOut(); return onIgnore(e); }\r\n                return true;\r\n            };\r\n            window.addEventListener(`keydown`, onKeyDown);\r\n            window.addEventListener(`keyup`, onKeyUp);\r\n            return () => {\r\n                window.removeEventListener(`keydown`, onKeyDown);\r\n                window.removeEventListener(`keyup`, onKeyUp);\r\n            };\r\n        }\r\n\r\n        return () => { };\r\n    });\r\n\r\n    const DirectionButton = ({ text, direction }: { text: string, direction: { x: number, y: number } }) => {\r\n        return (\r\n            <Pressable style={inputStyles.cellTouch} onPressIn={() => onMovePressIn(direction)} onPressOut={() => onMovePressOut(direction)}>\r\n                <View style={cellViewStyle}>\r\n                    <Text style={inputStyles.moveCellText}>{text}</Text>\r\n                    <View style={inputStyles.cellTextOcclusionView} />\r\n                </View>\r\n            </Pressable>\r\n        );\r\n    };\r\n\r\n    const ActionButton = ({ text, onPressIn, onPressOut }: { text: string, onPressIn: () => void, onPressOut: () => void }) => {\r\n        return (\r\n            <Pressable style={inputStyles.cellTouch} onPressIn={onPressIn} onPressOut={onPressOut}>\r\n                <View style={cellViewStyle}>\r\n                    <Text style={inputStyles.cellText}>{text}</Text>\r\n                    <View style={inputStyles.cellTextOcclusionView} />\r\n                </View>\r\n            </Pressable>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View style={inputStyles.container}>\r\n            <View style={inputStyles.moveSectionWrapper}>\r\n                <View style={inputStyles.moveSectionRotation}>\r\n                    <View style={inputStyles.section}>\r\n                        <View style={inputStyles.row} >\r\n                            <DirectionButton direction={{ x: 0, y: +1 }} text='⬆' />\r\n                            <DirectionButton direction={{ x: +1, y: 0 }} text='➡' />\r\n                        </View>\r\n                        <View style={inputStyles.row} >\r\n                            <DirectionButton direction={{ x: -1, y: 0 }} text='⬅' />\r\n                            <DirectionButton direction={{ x: 0, y: -1 }} text='⬇' />\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={inputStyles.section} >\r\n                <View style={inputStyles.row} >\r\n                    {props.buttons.map(x => (\r\n                        <React.Fragment key={`${x.text}`}>\r\n                            <View style={inputStyles.cellEmptyView} />\r\n                            <ActionButton {...x} />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n","export type Vector2 = { x: number, y: number };\r\nexport const getDistanceSq = (a: Vector2, b: Vector2) => {\r\n    const x = a.x - b.x;\r\n    const y = a.y - b.y;\r\n    return x * x + y * y;\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, Pressable, TouchableOpacity, Platform } from 'react-native-lite';\r\nimport { createMultiplesProblemService } from './problems/multiples';\r\nimport { ProblemService, Problem } from './problems/problems-service';\r\nimport { GamepadAnalogStateful, GamepadPressState } from './components/game-pad-analog';\r\nimport { getDistanceSq, Vector2 } from './utils/vectors';\r\nimport { createReviewProblemService } from './problems/problems-reviewer';\r\nimport { createProgressGameProblemService } from './progress-games/progress-game';\r\nimport { createAutoSavedProblemService } from './problems/problem-state-storage';\r\nimport { SubjectNavigator } from './utils/subject-navigator';\r\n\r\nexport const EducationalGame_StarBlastSideways_Multiples = (props: {}) => {\r\n    return <EducationalGame_StarBlastSideways problemService={createAutoSavedProblemService(createReviewProblemService(createMultiplesProblemService({ min: 1, max: 12 }), {}), `ProblemsMultiples`)} />;\r\n};\r\n\r\nexport const EducationalGame_StarBlastSideways = (props: { problemService: ProblemService }) => {\r\n    // Add Pet Feeder\r\n    return <EducationalGame_StarBlastSideways_Inner problemService={createProgressGameProblemService(props.problemService)} />;\r\n};\r\n\r\nconst EducationalGame_StarBlastSideways_Inner = (props: { problemService: ProblemService }) => {\r\n    const [pauseState, setPauseState] = useState({ paused: false } as { paused: boolean });\r\n    const [pressState, setPressState] = useState({ moveDirection: { x: 0, y: 0 }, buttons: [] } as GamepadPressState);\r\n    const onPressStateChange = (value: GamepadPressState) => {\r\n        // console.log(`onPressStateChange`, { ...x, dir: { ...x.moveDirection }, buttons: x.buttons.map(b => ({ ...b })) });\r\n        setPressState(value);\r\n    };\r\n\r\n    const [problemSourceKey, setProblemSourceKey] = useState(0);\r\n\r\n    return (\r\n        <>\r\n            <View>\r\n                <View style={{ alignItems: `center`, alignSelf: `stretch` }} >\r\n                    <View style={{ overflow: `hidden`, padding: 10, paddingTop: 4, paddingBottom: 64 }}>\r\n                        <View style={{ position: `relative` }}>\r\n                            <GameView pressState={pressState} pauseState={pauseState} problemService={props.problemService} problemSourceKey={`${problemSourceKey}`} />\r\n                            {/* <Pressable style={{ position: `absolute`, top: 0, bottom: 0, left: 0, right: 0, opacity: 0 }} onPressIn={() => { }} onPressOut={() => { }} /> */}\r\n                            <View style={{ zIndex: 10, flex: 1, alignSelf: `stretch` }}>\r\n                                <GamepadAnalogStateful style={colors.gamepad} onPressStateChange={onPressStateChange} buttons={[{ key: `A`, text: `🔥` }]} />\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <SubjectNavigator problemService={props.problemService}\r\n                    onOpen={() => setPauseState({ paused: true })}\r\n                    onClose={() => setPauseState({ paused: false })}\r\n                    onSubjectNavigation={() => { setPauseState({ paused: false }); setProblemSourceKey(s => s + 1); }}\r\n                />\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst colors = {\r\n    gamepad: {\r\n        backgroundColor: `#333333`,\r\n        borderColor: `#000033`,\r\n    },\r\n    viewscreen: {\r\n        borderColor: `#000033`,\r\n        backgroundColor: `#000000`,\r\n    },\r\n};\r\n\r\nconst gameStyles = {\r\n    directAnswerButtonContainer: { alignSelf: `flex-end`, justifyContent: `space-around`, height: 250, padding: 4 },\r\n    directAnswerButton: { width: 40, height: 40, backgroundColor: `#FFFFFF`, opacity: 0.1 },\r\n    directAnswerButton_hidden: { width: 40, height: 40 },\r\n    viewscreenView: {\r\n        height: 300,\r\n        width: 300,\r\n        backgroundColor: colors.viewscreen.backgroundColor,\r\n        borderColor: colors.viewscreen.borderColor,\r\n        borderWidth: 1,\r\n        borderStyle: `solid`,\r\n    },\r\n    sprite: {\r\n        viewSize: { width: 32, height: 32 },\r\n        text: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 32,\r\n            textAlign: `center`,\r\n        },\r\n    },\r\n    answer: {\r\n        text: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 24,\r\n            fontSize_small: 14,\r\n            textAlign: `center`,\r\n            whiteSpace: `pre-wrap`,\r\n        },\r\n    },\r\n    question: {\r\n        view: { flex: 1, justifyContent: `center`, padding: 4 },\r\n        text: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 24,\r\n            fontSize_small: 14,\r\n            whiteSpace: `pre-wrap`,\r\n        },\r\n    },\r\n    gameOver: {\r\n        view: { flex: 1, justifyContent: `center`, padding: 4 },\r\n        text: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 24,\r\n            textAlign: `center`,\r\n        },\r\n    },\r\n} as const;\r\n\r\ntype GamePosition = {\r\n    x: number;\r\n    y: number;\r\n    rotation: number;\r\n};\r\n\r\ntype GameState = {\r\n    lastActualTimeMs: number;\r\n    lastGameTime: number;\r\n    gameSpeed: number;\r\n\r\n    lives: number;\r\n    deadTime?: number;\r\n    gameOverTime?: number;\r\n    score: number;\r\n\r\n    weaponsLock?: {\r\n        lockedAtPlayerPosition: GamePosition;\r\n        lockedEnemy: { pos: GamePosition };\r\n    };\r\n    playerTargetPosition?: { x: number, y: number };\r\n};\r\n\r\n\r\ntype AnswerState = { key: string, value: string, isCorrect: boolean, isAnsweredWrong: boolean };\r\nconst GameView = (props: { pressState: GamepadPressState, pauseState: { paused: boolean }, problemService: ProblemService, problemSourceKey: string }) => {\r\n\r\n    const pressState = useRef(props.pressState);\r\n    pressState.current = props.pressState;\r\n\r\n    const pauseState = useRef(props.pauseState);\r\n    pauseState.current = props.pauseState;\r\n\r\n    const gameAcceleration = 0.1;\r\n    const gameDeceleration = 0.2;\r\n    const maxGameSpeed = 5;\r\n    const minGameSpeed = 0.5;\r\n\r\n    const getDefaultGameState = (): GameState => ({\r\n        lastActualTimeMs: Date.now(),\r\n        lastGameTime: 0,\r\n        gameSpeed: 1,\r\n        lives: 3,\r\n        score: 0,\r\n    });\r\n    const gameState = useRef(getDefaultGameState());\r\n    const getGameTime = () => {\r\n        const now = Date.now();\r\n        let actualTimePassed = (now - gameState.current.lastActualTimeMs) / 1000;\r\n        gameState.current.lastActualTimeMs = now;\r\n\r\n        if (actualTimePassed === 0) {\r\n            return { gameTime: gameState.current.lastGameTime };\r\n        }\r\n\r\n        // Left App, frozen, etc?\r\n        if (actualTimePassed > 0.1) {\r\n            actualTimePassed = 0.1;\r\n        }\r\n\r\n        const gameTimePassed = actualTimePassed * gameState.current.gameSpeed;\r\n        const gameTime = gameState.current.lastGameTime + gameTimePassed;\r\n        gameState.current.lastGameTime = gameTime;\r\n\r\n        return {\r\n            gameTime,\r\n        };\r\n    };\r\n\r\n    const playerPositionState = useRef({\r\n        y: gameStyles.viewscreenView.height * 0.5, x: gameStyles.viewscreenView.width * 0.15, rotation: 0,\r\n    } as GamePosition);\r\n    const projectilesState = useRef({ lastShotActualTime: 0, shots: [], debris: [] } as ProjectilesState);\r\n    const enemiesState = useRef({ enemies: [] } as EnemiesState);\r\n\r\n    const problemsState = useRef(null as null | { problemTime: number, question: string, answers: (Problem['answers'][0] & { key: string, pos: GamePosition, isAnsweredWrong: boolean })[] });\r\n    const [renderId, setRenderId] = useState(0);\r\n\r\n    const restartGame = () => {\r\n        // Move enemies back\r\n        enemiesState.current.enemies.forEach(e2 => { e2.pos.x += gameStyles.viewscreenView.width * 0.5; });\r\n\r\n        // Reset Player\r\n        playerPositionState.current.y = gameStyles.viewscreenView.height * 0.5;\r\n        playerPositionState.current.x = gameStyles.viewscreenView.width * 0.15;\r\n\r\n        gameState.current = { ...getDefaultGameState(), lastGameTime: gameState.current.lastGameTime };\r\n    };\r\n\r\n    const gameOver = () => {\r\n        gameState.current = {\r\n            ...gameState.current,\r\n            lives: 0,\r\n            gameOverTime: getGameTime().gameTime,\r\n        };\r\n    };\r\n\r\n    const gotoNextProblem = () => {\r\n        const p = props.problemService.getNextProblem();\r\n\r\n        console.log(`gotoNextProblem`, { p });\r\n\r\n        if (!p.question) {\r\n            // Game over - problems done\r\n            return;\r\n        }\r\n\r\n        const pSize = gameStyles.viewscreenView.width / (p.answers.length + 1);\r\n        const newProblemState = {\r\n            problemTime: getGameTime().gameTime,\r\n            question: p.question,\r\n            answers: p.answers.map((x, i) => ({ ...x, key: `${p.question} ${x.value}`, pos: { y: pSize * (0.5 + i), x: gameStyles.viewscreenView.width - gameStyles.sprite.viewSize.width * 0.5, rotation: 0 }, isAnsweredWrong: false })),\r\n        };\r\n        const newEnemyState = {\r\n            enemies: newProblemState.answers.map((ans, i) => {\r\n                const enemy = {\r\n                    key: `${p.question} ${ans.value}`,\r\n                    answer: ans,\r\n                    pos: { y: pSize * (0.5 + i), x: gameStyles.viewscreenView.width - gameStyles.sprite.viewSize.width * 1.5, rotation: 0 },\r\n                    vel: { x: -5, y: 0 },\r\n                    onHit: () => {\r\n                        setTimeout(() => {\r\n                            console.log(`onHit`, { ans });\r\n                            props.problemService.recordAnswer(p, ans);\r\n                            if (ans.isCorrect) {\r\n                                // TODO: Update score, etc.\r\n                                // Let bullets clear\r\n                                projectilesState.current.shots.forEach(x => { x.ignore = true; });\r\n                                gotoNextProblem();\r\n\r\n                                gameState.current = {\r\n                                    ...gameState.current,\r\n                                    score: gameState.current.score += Math.floor(enemy.pos.x) * 1000,\r\n                                    gameSpeed: Math.min(maxGameSpeed, gameState.current.gameSpeed * 1 + gameAcceleration),\r\n                                };\r\n                            } else {\r\n                                ans.isAnsweredWrong = true;\r\n\r\n                                gameState.current = {\r\n                                    ...gameState.current,\r\n                                    score: gameState.current.score -= Math.floor(enemy.pos.x) * 1500,\r\n                                    gameSpeed: Math.max(minGameSpeed, gameState.current.gameSpeed * 1 - gameDeceleration),\r\n                                };\r\n                            }\r\n                        });\r\n                    },\r\n                    destroyed: false,\r\n                };\r\n\r\n                return enemy;\r\n            }),\r\n        };\r\n\r\n        problemsState.current = newProblemState;\r\n        enemiesState.current = newEnemyState;\r\n        setRenderId(s => s + 1);\r\n\r\n        setTimeout(() => {\r\n            p.onQuestion?.();\r\n        }, 250);\r\n    };\r\n\r\n    useEffect(() => {\r\n        gotoNextProblem();\r\n    }, [props.problemSourceKey]);\r\n\r\n    useEffect(() => {\r\n        // Game Loop\r\n        let gameLastTime = getGameTime().gameTime;\r\n        const gameLoop = () => {\r\n            const { gameTime } = getGameTime();\r\n            const gameDeltaTime = gameTime - gameLastTime;\r\n            gameLastTime = gameTime;\r\n\r\n            if (pauseState.current.paused || gameDeltaTime <= 0) {\r\n                requestAnimationFrame(gameLoop);\r\n                return;\r\n            }\r\n\r\n            // if (!pressState.current.moveDirection.x\r\n            //     && !pressState.current.moveDirection.y) {\r\n            //     // No change\r\n            //     requestAnimationFrame(gameLoop);\r\n            //     return;\r\n            // }\r\n\r\n            // console.log(`gameLoop Update`);\r\n\r\n            // Update\r\n\r\n            const getCommonState = (): CommonGameState => {\r\n                return {\r\n                    gameTime,\r\n                    gameDeltaTime,\r\n                    gameState: gameState.current,\r\n                    pressState: pressState.current,\r\n                    playerPosition: playerPositionState.current,\r\n                    projectilesState: projectilesState.current,\r\n                    enemiesState: enemiesState.current,\r\n                    onLoseLife: () => {\r\n                        if (gameState.current.deadTime || gameState.current.gameOverTime) { return; }\r\n\r\n                        projectilesState.current.debris.push({ key: `player${gameTime}`, kind: `player-character`, pos: { ...playerPositionState.current }, vel: { x: 0, y: 0 } });\r\n\r\n\r\n                        if (gameState.current.lives <= 1) {\r\n                            // Game over\r\n                            gameOver();\r\n                            return;\r\n                        }\r\n\r\n                        // Move enemies back\r\n                        // enemiesState.current.enemies.forEach(e2 => { e2.pos.x += gameStyles.viewscreenView.width * 0.5; });\r\n\r\n                        gameState.current = {\r\n                            ...gameState.current,\r\n                            lives: gameState.current.lives - 1,\r\n                            deadTime: gameTime,\r\n                        };\r\n                    },\r\n                };\r\n            };\r\n\r\n\r\n            // Game\r\n            const gameResult = updateGame(getCommonState());\r\n            gameState.current = gameResult;\r\n\r\n            if (!gameState.current.gameOverTime) {\r\n                // Player\r\n                const playerResult = updatePlayer(getCommonState());\r\n                playerPositionState.current = playerResult.playerPosition;\r\n            } else if (getGameTime().gameTime > 1 + gameState.current.gameOverTime\r\n                && pressState.current.buttons[0]?.isDown) {\r\n                setTimeout(() => {\r\n                    restartGame();\r\n                }, 250);\r\n            }\r\n\r\n            // Projectiles\r\n            const projectilesResult = updateProjectiles(getCommonState());\r\n            projectilesState.current = projectilesResult;\r\n\r\n            // Enemies\r\n            const enemiesResult = updateEnemies(getCommonState());\r\n            enemiesState.current = enemiesResult;\r\n\r\n\r\n            // Game Loop\r\n            requestAnimationFrame(gameLoop);\r\n            setRenderId(s => s + 1);\r\n        };\r\n\r\n        requestAnimationFrame(gameLoop);\r\n    }, []);\r\n\r\n\r\n    // console.log(`GameView render`, { playerStylePosition });\r\n\r\n    const timeSinceProblem = getGameTime().gameTime - (problemsState.current?.problemTime ?? 0);\r\n\r\n    const directAnswer = (enemy: EnemiesState['enemies'][0]) => {\r\n        if (gameState.current.gameOverTime) { restartGame(); return; }\r\n        if (gameState.current.deadTime) { return; }\r\n        if (enemy.destroyed || enemy.explodeTime) { return; }\r\n        gameState.current.weaponsLock = { lockedEnemy: enemy, lockedAtPlayerPosition: playerPositionState.current };\r\n        const { shots } = projectilesState.current;\r\n        shots.push({ key: `${getGameTime()}${shots.length}`, pos: { ...playerPositionState.current }, lockedEnemy: enemy });\r\n        gameState.current.playerTargetPosition = { x: playerPositionState.current.x, y: enemy.pos.y };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={gameStyles.viewscreenView} >\r\n                {/* <TextPositioned text={`${gameState.current.score.toLocaleString()}`} position={{ x: 0, y: -0.8 * gameStyles.sprite.viewSize.height, rotation: 0 }} /> */}\r\n                {[... new Array(gameState.current.lives)].map((x, i) => (\r\n                    <Sprite key={`life${i}`} kind='life' position={{ x: gameStyles.viewscreenView.width - (gameStyles.sprite.viewSize.width * (1 + i)), y: gameStyles.viewscreenView.height - 0.5 * gameStyles.sprite.viewSize.height, rotation: 0 }} />\r\n                ))}\r\n                {projectilesState.current.debris.map(x => (\r\n                    <Sprite key={x.key} kind={x.hasHitGround ? `${x.kind}-splat` as SpriteKind : x.kind} position={x.pos} />\r\n                ))}\r\n                {enemiesState.current?.enemies.filter(e => !e.destroyed).map(e => (\r\n                    <React.Fragment key={e.key}>\r\n                        {!e.answer.isAnsweredWrong && (<TextPositioned position={{ y: e.pos.y, x: e.pos.x + gameStyles.sprite.viewSize.width, rotation: 0 }} text={e.answer.value} />)}\r\n                        {e.answer.isAnsweredWrong && (<Sprite kind='answer-wrong' position={{ y: e.pos.y, x: e.pos.x + gameStyles.sprite.viewSize.width, rotation: 0 }} />)}\r\n                    </React.Fragment>\r\n                ))}\r\n                {enemiesState.current?.enemies.filter(x => !x.destroyed).map(x => (\r\n                    <React.Fragment key={x.key}>\r\n                        <Sprite kind={x.explodeTime ? `enemy-explode` : `enemy`} position={x.pos} />\r\n                        {x === gameState.current.weaponsLock?.lockedEnemy && (\r\n                            <Sprite kind='lock' position={x.pos} />\r\n                        )}\r\n                    </React.Fragment>\r\n                ))}\r\n                {!gameState.current.gameOverTime && !gameState.current.deadTime && (\r\n                    <Sprite kind='player' position={playerPositionState.current} />\r\n                )}\r\n                {projectilesState.current.shots.map(x => (\r\n                    <Sprite key={x.key} kind={x.explodeTime ? `shot-explode` : `shot`} position={x.pos} />\r\n                ))}\r\n                {gameState.current.gameOverTime && (\r\n                    <View>\r\n                        <View style={{ position: `absolute`, top: gameStyles.viewscreenView.height * 0.5, width: gameStyles.viewscreenView.width }}>\r\n                            <Text style={gameStyles.gameOver.text}>Game Over</Text>\r\n                            {getGameTime().gameTime > 1 + gameState.current.gameOverTime && (<Text style={gameStyles.gameOver.text}>Continue?</Text>)}\r\n                        </View>\r\n                    </View>\r\n                )}\r\n\r\n                <View style={gameStyles.directAnswerButtonContainer}>\r\n                    {enemiesState.current?.enemies.map(e => (\r\n                        <TouchableOpacity key={e.key} onPress={() => directAnswer(e)} >\r\n                            <View style={!e.destroyed && !e.explodeTime ? gameStyles.directAnswerButton : gameStyles.directAnswerButton_hidden} />\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                </View>\r\n            </View>\r\n            <View style={{ position: `relative`, height: gameStyles.question.text.fontSize * 3, alignSelf: `stretch` }}>\r\n                <TextPositioned text={problemsState.current?.question ?? ``} position={{ x: gameStyles.viewscreenView.width * 0.25, y: gameStyles.question.text.fontSize * 1 - Math.max(0, gameStyles.viewscreenView.height * 0.5 - 125 * timeSinceProblem), rotation: 0 }} />\r\n            </View>\r\n            {/* <View>\r\n                <Text>{`${renderId}`}</Text>\r\n            </View> */}\r\n            {/* <View style={[gameStyles.question.view, { transform: `translate(0px,${-Math.max(0, gameStyles.viewscreenView.height * 0.5 - 125 * timeSinceProblem)}px)` }]}>\r\n                <Text style={{...gameStyles.question.text, text.length > 10 ? s.fontSize_small * 0.5 : s.fontSize}} >{problemsState.current?.question}</Text>\r\n            </View> */}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\ntype CommonGameState = { gameTime: number, gameDeltaTime: number, gameState: GameState, pressState: GamepadPressState, playerPosition: GamePosition, projectilesState: ProjectilesState, enemiesState: EnemiesState, onLoseLife: () => void };\r\n\r\nconst updateGame = ({ gameTime, gameDeltaTime, pressState, playerPosition, gameState, enemiesState }: CommonGameState): GameState => {\r\n\r\n    // Respawn Player\r\n    if (gameState.deadTime && gameTime > 3 + gameState.deadTime) {\r\n        playerPosition.y = gameStyles.viewscreenView.height * 0.5;\r\n        playerPosition.x = gameStyles.viewscreenView.width * 0.15;\r\n\r\n        enemiesState.enemies.forEach(e2 => { e2.pos.x += gameStyles.viewscreenView.width * 0.5; });\r\n\r\n        return { ...gameState, deadTime: undefined };\r\n    }\r\n\r\n    return gameState;\r\n};\r\n\r\nconst updatePlayer = ({ gameTime, gameDeltaTime, pressState, playerPosition, gameState }: CommonGameState): { playerPosition: GamePosition } => {\r\n    if (gameState.deadTime) { return { playerPosition }; }\r\n\r\n    const dirPress = pressState.moveDirection;\r\n    const targetPos = gameState.playerTargetPosition;\r\n    const dir = dirPress.x || dirPress.y ? { x: dirPress.x, y: -dirPress.y }\r\n        : targetPos ? { x: targetPos.x - playerPosition.x, y: targetPos.y - playerPosition.y }\r\n            : { x: 0, y: 0 };\r\n    dir.x = dir.x === 0 ? 0 : Math.sign(dir.x);\r\n    dir.y = dir.y === 0 ? 0 : Math.sign(dir.y);\r\n\r\n    if (gameState.playerTargetPosition) {\r\n        console.log(`updatePlayer`, { dirPress, dir, targetPos, playerPosition });\r\n    }\r\n\r\n    if (dirPress.x || dirPress.y) {\r\n        gameState.playerTargetPosition = undefined;\r\n    }\r\n    if (gameState.playerTargetPosition && getDistanceSq(playerPosition, gameState.playerTargetPosition) < 5 * 5) {\r\n        gameState.playerTargetPosition = undefined;\r\n    }\r\n\r\n    const targetRotation = dir.y * 0.05;\r\n\r\n    const pos = {\r\n        x: playerPosition.x + dir.x * gameDeltaTime * 250,\r\n        y: playerPosition.y + dir.y * gameDeltaTime * 250,\r\n        rotation: playerPosition.rotation * 0.9 + targetRotation * 0.1,\r\n    };\r\n\r\n    const w = gameStyles.viewscreenView.width;\r\n    const gw = gameStyles.sprite.viewSize.width * 0.5;\r\n    const h = gameStyles.viewscreenView.height;\r\n    const gh = gameStyles.sprite.viewSize.height * 0.5;\r\n    pos.x = pos.x < gw ? gw : pos.x > w - gw ? w - gw : pos.x;\r\n    pos.y = pos.y < gh ? gh : pos.y > h - gh ? h - gh : pos.y;\r\n\r\n    return { playerPosition: pos };\r\n};\r\n\r\ntype ProjectilesState = {\r\n    lastShotActualTime: number;\r\n    shots: { key: string, pos: GamePosition, explodeTime?: number, ignore?: boolean, lockedEnemy?: { pos: GamePosition, explodeTime?: number, destoyed?: boolean } }[];\r\n    debris: { key: string, vel: Vector2, pos: GamePosition, kind: SpriteKind, hasHitGround?: boolean }[];\r\n};\r\nconst updateProjectiles = ({ gameTime, gameDeltaTime, pressState, playerPosition: playerPos, enemiesState, projectilesState, gameState, onLoseLife }: CommonGameState): ProjectilesState => {\r\n    const { shots, debris, lastShotActualTime } = projectilesState;\r\n\r\n    const canShoot = !gameState.deadTime && !gameState.gameOverTime && (Date.now() / 1000) > 0.25 + lastShotActualTime;\r\n\r\n    // console.log(`updateProjectiles`, { canShoot, gameTime, lastShotTime });\r\n\r\n    const didShoot = canShoot && pressState.buttons.find(x => x.key === `A`)?.isDown;\r\n    if (didShoot) {\r\n        const lockedEnemy = gameState.weaponsLock?.lockedEnemy;\r\n        shots.push({ key: `${gameTime}${shots.length}`, pos: { ...playerPos }, lockedEnemy });\r\n    }\r\n\r\n    // Move shots\r\n    shots.forEach(x => {\r\n        if (x.explodeTime) { return; }\r\n\r\n        if (x.lockedEnemy && !x.lockedEnemy.explodeTime && !x.lockedEnemy.destoyed) {\r\n            x.pos.y += (x.lockedEnemy.pos.y - x.pos.y) * 0.25;\r\n            x.pos.x += Math.min(250 * gameDeltaTime, (x.lockedEnemy.pos.x - x.pos.x) * 0.5);\r\n        } else {\r\n            x.pos.x += 250 * gameDeltaTime;\r\n        }\r\n    });\r\n\r\n    // Move debris\r\n    debris.forEach(d => {\r\n        if (d.hasHitGround) { return; }\r\n\r\n        // Gravity\r\n        d.vel.y += 100 * gameDeltaTime;\r\n\r\n        d.pos.y += d.vel.y * gameDeltaTime;\r\n        d.pos.x += d.vel.x * gameDeltaTime;\r\n\r\n        const pad = gameStyles.sprite.viewSize.width * 0.5;\r\n        const w = gameStyles.viewscreenView.width;\r\n        if (d.pos.x < pad) { d.pos.x = pad; d.vel.x = -d.vel.x; }\r\n        if (d.pos.x > w - pad) { d.pos.x = w - pad; d.vel.x = -d.vel.x; }\r\n\r\n        const hPad = gameStyles.sprite.viewSize.width * 0.8;\r\n        const h = gameStyles.viewscreenView.height;\r\n        if (d.pos.y > h - hPad + Math.random() * 10) {\r\n            d.hasHitGround = true;\r\n\r\n            if (d.kind === `kitten`) {\r\n                onLoseLife();\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    // Clean up too much debris\r\n    if (debris.length > 25) {\r\n        debris.shift();\r\n    }\r\n\r\n    const newShots = shots\r\n        // Remove shots offscreen\r\n        .filter(x => x.pos.x < gameStyles.viewscreenView.width)\r\n        // Remove exploded\r\n        .filter(x => !x.explodeTime || gameTime < 1 + x.explodeTime)\r\n        ;\r\n\r\n    return {\r\n        ...projectilesState,\r\n        lastShotActualTime: didShoot ? (Date.now() / 1000) : lastShotActualTime,\r\n        shots: newShots,\r\n    };\r\n};\r\n\r\ntype EnemiesState = {\r\n    enemies: {\r\n        key: string;\r\n        pos: GamePosition;\r\n        vel: Vector2;\r\n        explodeTime?: number;\r\n        answer: AnswerState;\r\n        onHit: () => void;\r\n        destroyed?: boolean;\r\n    }[];\r\n};\r\nconst updateEnemies = ({ gameTime, gameDeltaTime, projectilesState, enemiesState, gameState, playerPosition, onLoseLife }: CommonGameState): EnemiesState => {\r\n    const { enemies } = enemiesState;\r\n    const { shots } = projectilesState;\r\n\r\n    // Detect Collisions\r\n\r\n    // Enemies - Bullets\r\n    const radius = gameStyles.sprite.viewSize.width * 0.75;\r\n    const radiusSq = radius * radius;\r\n\r\n    enemies.forEach(e => shots.forEach(s => {\r\n        // console.log(`Checking!`, { e, s });\r\n\r\n        if (e.explodeTime) { return; }\r\n        if (s.explodeTime || s.ignore) { return; }\r\n\r\n        // Only shoot locked enemy\r\n        if (s.lockedEnemy && s.lockedEnemy !== e) { return; }\r\n\r\n        if (getDistanceSq(e.pos, s.pos) < radiusSq) {\r\n            console.log(`Exploded!`, { e, s });\r\n\r\n            e.explodeTime = gameTime;\r\n            s.explodeTime = gameTime;\r\n\r\n            e.onHit();\r\n\r\n            if (e.answer.isCorrect) {\r\n                projectilesState.debris.push({ key: `${e.key} ${gameTime}`, kind: `alien`, pos: { ...e.pos }, vel: { ...e.vel } });\r\n            } else {\r\n                projectilesState.debris.push({ key: `${e.key} ${gameTime}`, kind: `kitten`, pos: { ...e.pos }, vel: { ...e.vel } });\r\n            }\r\n        }\r\n    }));\r\n\r\n    // Enemies - Enemies (bounce)\r\n    const radiusSq_enemies = radius * radius * 1.5 * 1.5;\r\n    enemies.forEach((e, i) => enemies.forEach((e2, i2) => {\r\n\r\n        if (i >= i2) { return; }\r\n        if (e.explodeTime) { return; }\r\n        if (e2.explodeTime) { return; }\r\n\r\n        if (getDistanceSq(e.pos, e2.pos) < radiusSq_enemies) {\r\n\r\n            // Transfer momentum\r\n            const frictionRatio = 0.95;\r\n            const swap = e.vel.y;\r\n            e.vel.y = e2.vel.y * frictionRatio;\r\n            e2.vel.y = swap * frictionRatio;\r\n            // }\r\n\r\n            // if (getDistanceSq(e.pos, e2.pos) < radiusSq_enemies * 0.8 * 0.8) {\r\n            // Move apart\r\n            const a = e.pos.y < e2.pos.y ? e : e2;\r\n            const b = e.pos.y < e2.pos.y ? e2 : e;\r\n\r\n            a.pos.y -= 10 * gameDeltaTime;\r\n            b.pos.y += 10 * gameDeltaTime;\r\n            a.vel.y -= 10 * gameDeltaTime;\r\n            b.vel.y += 10 * gameDeltaTime;\r\n        }\r\n    }));\r\n\r\n    // Enemies - Player\r\n    const radiusSq_player = radius * radius * 0.8 * 0.8;\r\n    enemies.forEach((e, i) => {\r\n        if (e.explodeTime) { return; }\r\n        if (gameState.deadTime || gameState.gameOverTime) { return; }\r\n\r\n        if (getDistanceSq(e.pos, playerPosition) < radiusSq_player) {\r\n            onLoseLife();\r\n\r\n            // e.explodeTime = gameTime;\r\n            // e.onHit();\r\n\r\n            return;\r\n        }\r\n    });\r\n\r\n    // Enemies move\r\n    enemies.forEach(e => {\r\n        if (e.explodeTime) { return; }\r\n\r\n        e.vel.y += (-1 + 2 * Math.random()) * 250 * gameDeltaTime;\r\n        // e.vel.x += -3 * gameDeltaTime;\r\n\r\n        if (!gameState.deadTime && !gameState.gameOverTime) {\r\n            e.vel.x = -25;\r\n        } else {\r\n            e.vel.x = 0;\r\n        }\r\n\r\n        // Move away from ground\r\n        if (e.pos.y > gameStyles.viewscreenView.height * 0.7) {\r\n            // e.vel.y += -100 * gameDeltaTime;\r\n            e.vel.y = -5;\r\n        }\r\n\r\n        // Keep on screen\r\n        if (e.pos.x > gameStyles.viewscreenView.width - gameStyles.sprite.viewSize.width * 2) {\r\n            e.pos.x = gameStyles.viewscreenView.width - gameStyles.sprite.viewSize.width * 2;\r\n        }\r\n\r\n        e.pos.x += e.vel.x * gameDeltaTime;\r\n        e.pos.y += e.vel.y * gameDeltaTime;\r\n\r\n        const pad = gameStyles.sprite.viewSize.height * 0.5;\r\n        const h = gameStyles.viewscreenView.height;\r\n        if (e.pos.y < pad) { e.pos.y = pad; e.vel.y = 5; }\r\n        if (e.pos.y > h - pad) { e.pos.y = h - pad; e.vel.y = -e.vel.y; }\r\n\r\n        const wPad = gameStyles.sprite.viewSize.width * 0.5;\r\n        if (e.pos.x < wPad) {\r\n            e.pos.x = wPad;\r\n        }\r\n\r\n        // // Attack player\r\n        // if (e.pos.x < playerPosition.x) {\r\n        //     e.pos.y = playerPosition.y;\r\n        //     // e.vel.y = (playerPosition.y - e.pos.y) * 5;\r\n        // }\r\n    });\r\n\r\n    // Closest Enemy\r\n    const closestEnemyToPlayer = enemiesState.enemies.filter(x => !x.explodeTime && !x.destroyed)\r\n        .sort((a, b) => Math.abs(a.pos.y - playerPosition.y) < Math.abs(b.pos.y - playerPosition.y) ? -1 : 1)[0];\r\n\r\n    const updateWeaponsLock = (enemy: typeof enemiesState.enemies[0]) => {\r\n        // Only update on player movement\r\n        if (gameState.weaponsLock?.lockedAtPlayerPosition.y === playerPosition.y) {\r\n            return;\r\n        }\r\n\r\n        gameState.weaponsLock = {\r\n            lockedAtPlayerPosition: playerPosition,\r\n            lockedEnemy: enemy,\r\n        };\r\n    };\r\n\r\n    // Attack Player\r\n    if (closestEnemyToPlayer?.pos.x < playerPosition.x + gameStyles.sprite.viewSize.width * 0.5) {\r\n        closestEnemyToPlayer.pos.y = playerPosition.y;\r\n    } else {\r\n        // Lock on Enemy\r\n        updateWeaponsLock(closestEnemyToPlayer);\r\n    }\r\n\r\n    // Cleanup\r\n    const newEnemies = enemies;\r\n    newEnemies.filter(x => x.explodeTime && gameTime > 1 + x.explodeTime).forEach(x => {\r\n        x.destroyed = true;\r\n\r\n    });\r\n    // // Remove exploded\r\n    // .filter(x => !x.explodeTime || gameTime < 1 + x.explodeTime)\r\n    // ;\r\n\r\n    return {\r\n        enemies: newEnemies,\r\n    };\r\n};\r\n\r\ntype SpriteKind = 'text' | 'player' | 'player-character' | 'player-character-splat' | 'shot' | 'shot-explode' | 'lock' | 'enemy' | 'enemy-explode' | 'answer-wrong' | 'alien' | 'kitten' | 'alien-splat' | 'kitten-splat' | 'super-kitten' | 'life';\r\nconst getSpriteEmoji = (kind: SpriteKind) => {\r\n    // ❤💙💚😀🤣😃😁😂😄😉😆😅😊😋😎🥰😙☺🤩🙄😑😐😣🤐😫🤢😬😭🤯🤒😡🤓🤠\r\n    // 👽💀👻☠🤖👾😺🙀🙈🙉🙊🐵🐱‍🐉🐶🦁🐯🐺🐱🦒🦊🦝🐗🐷🐮🐭🐹🐰🐼🐨🐻🐸🦓🐴\r\n    // 🚀🛸⛵🛰🚁💺🚤🛥⛴⚓🪐🌌🌍🌏🌎\r\n    // ✈🛩🚂🚘🚔🚍🚖🔥💧❄⚡🌀🌈☄🌠⭐❌💥♨🎇🎆✨🎡🍖🥓🍗🥩💚👁‍🗨🥫🍥🍤🧆🥝🥑🧪🧫💉🩸⚰💜🦵\r\n    // 🐱‍🚀🐱‍🐉🐱‍🏍😾🐱‍👤😾😿😽😹😸😻🐲🐉💢⭕\r\n    switch (kind) {\r\n        case `player`: return { text: `🚀`, rotation: +0.125, offsetX: 0, offsetY: -0.25 };\r\n        case `player-character`: return { text: `😭` };\r\n        case `player-character-splat`: return { text: `😫`, rotation: 0.15 };\r\n        case `shot`: return { text: `🔥`, rotation: -0.25 };\r\n        case `shot-explode`: return { text: `✨`, rotation: 0, scale: 0.5 };\r\n        case `lock`: return { text: `💢`, offsetX: -0.25, offsetY: -0.125, scale: 1.5 };\r\n        case `enemy`: return { text: `🛸`, offsetX: -0.125, offsetY: -0.125 };\r\n        case `enemy-explode`: return { text: `💥`, offsetX: -0.125, offsetY: -0.125 };\r\n        case `answer-wrong`: return { text: `❌`, offsetX: -0.125, offsetY: -0.125 };\r\n        case `alien`: return { text: `👽`, offsetX: 0, offsetY: 0 };\r\n        // case `kitten`: return { text: `🐱‍🚀`, offsetX: 0, offsetY: 0 };\r\n        case `kitten`: return { text: `🙀`, offsetX: 0, offsetY: 0 };\r\n        case `alien-splat`: return { text: `💀`, offsetX: 0, offsetY: 0 };\r\n        case `kitten-splat`: return { text: `🥩`, offsetX: 0, offsetY: 0 };\r\n        case `super-kitten`: return { text: `🐱‍🏍`, offsetX: 0, offsetY: 0 };\r\n        // case `kitten-splat`: return { text: `👻`, offsetX: 0, offsetY: 0 };\r\n        case `life`: return { text: `🚀`, scale: 0.5 };\r\n        case `text`: return { text: ``, offsetX: 0, offsetY: -0.125 };\r\n        default: return { text: `😀` };\r\n    }\r\n};\r\n\r\nconst Sprite = ({ kind, position, text }: { kind: SpriteKind, position: { x: number, y: number, rotation: number }, text?: string }) => {\r\n    const s = getSpriteEmoji(kind);\r\n    const size = gameStyles.sprite.viewSize;\r\n    const { fontSize } = gameStyles.sprite.text;\r\n\r\n    const stylePosition = {\r\n        position: `absolute`,\r\n        ...size,\r\n        transform: `translate(${position.x}px, ${position.y}px) rotate(${position.rotation ?? 0}turn)`,\r\n        // backgroundColor: `red`,\r\n        pointerEvents: `none`,\r\n    } as const;\r\n    const styleRotation = {\r\n        ...size,\r\n        transform: `translate( ${size.width * -0.5 + Math.floor((s.offsetX ?? 0) * fontSize)}px, ${size.height * -0.5 + Math.floor((s.offsetY ?? 0) * fontSize)}px) rotate(${s.rotation ?? 0}turn) scale(${s.scale ?? 1})`,\r\n    };\r\n    return (\r\n        <View style={stylePosition}>\r\n            <View style={styleRotation}>\r\n                <Text style={gameStyles.sprite.text}>{text ?? s.text}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst TextPositioned = ({ text, position }: { text: string, position: { x: number, y: number, rotation: number } }) => {\r\n    const s = gameStyles.answer.text;\r\n    const fontSize = text.length > 10 ? s.fontSize_small : s.fontSize;\r\n\r\n    const offsetY = -fontSize * 0.5 - 4;\r\n\r\n    const stylePosition = {\r\n        position: `absolute`,\r\n        transform: `translate(${position.x}px, ${position.y + offsetY}px) rotate(${position.rotation ?? 0}turn)`,\r\n        pointerEvents: `none`,\r\n        maxWidth: gameStyles.viewscreenView.width * 0.5,\r\n        // backgroundColor: `red`,\r\n    } as const;\r\n\r\n    return (\r\n        <View style={stylePosition}>\r\n            <Text style={{ ...gameStyles.answer.text, fontSize }}>{text}</Text>\r\n        </View>\r\n    );\r\n};\r\n","import { shuffle, distinct } from 'utils/arrays';\r\nimport { ProblemService, ProblemResult, ProblemAnswer } from './problems-service';\r\n\r\nexport const createMultiplesProblemService = ({\r\n    min = 1,\r\n    max = 12,\r\n    maxAnswers = 4,\r\n}: {\r\n    min?: number;\r\n    max?: number;\r\n    maxAnswers?: number;\r\n}): ProblemService => {\r\n\r\n    let state = {\r\n        n: min - 1,\r\n        m: min,\r\n        completedSectionKeys: [] as string[],\r\n    };\r\n    const getSectionKey = (m: number) => {\r\n        return `${m}`;\r\n    };\r\n    const getSectionName = (m: number) => {\r\n        return `Multiples of ${m}`;\r\n    };\r\n\r\n    const problemService: ProblemService = {\r\n        load: async (storage) => {\r\n            const loaded = await storage.load<typeof state>();\r\n            if (loaded) {\r\n                state = loaded;\r\n            }\r\n        },\r\n        save: async (storage) => {\r\n            await storage.save(state);\r\n        },\r\n        getSections: () => [...new Array(max - min + 1)].map((x, i) => ({\r\n            key: getSectionKey(i + min),\r\n            name: getSectionName(i + min),\r\n            isComplete: state.completedSectionKeys.includes(getSectionKey(i + min)),\r\n        })),\r\n        gotoSection: ({ key }) => {\r\n            const bVal = Number.parseInt(key, 10);\r\n            state.m = bVal;\r\n            state.n = min - 1;\r\n        },\r\n        getNextProblem: (): ProblemResult => {\r\n            state.n++;\r\n            if (state.n > max) {\r\n                state.n = min;\r\n                state.m++;\r\n                if (state.m > max) {\r\n                    // Loop\r\n                    state.n = min;\r\n                    state.m = min;\r\n                    // return { done: true, key: `done` };\r\n                }\r\n            }\r\n\r\n            const { n, m } = state;\r\n            const correctValue = n * m;\r\n            const wrongAnswerCount = maxAnswers - 1;\r\n            const wrongValues =\r\n                distinct(\r\n                    [...new Array(100)].map(() =>\r\n                        Math.round(n + 1 - 2 * Math.random())\r\n                        * Math.round(m + 1 - 2 * Math.random())\r\n                        + Math.round(2 - 4 * Math.random()))\r\n                        .filter(x => x !== correctValue)\r\n                        .filter(x => x > 0),\r\n                ).slice(0, wrongAnswerCount);\r\n\r\n            const answers: ProblemAnswer[] = shuffle([...wrongValues.map(x => ({ value: `${x}`, isCorrect: false })), { value: `${correctValue}`, isCorrect: true }]).map(x => ({ ...x, key: x.value }));\r\n\r\n            return {\r\n                key: `${m} x ${n}`,\r\n                question: `${m} x ${n}`,\r\n                answers,\r\n                sectionKey: getSectionKey(m),\r\n                isLastOfSection: n === max,\r\n                isLastOfSubject: n === max && m === max,\r\n            };\r\n        },\r\n        recordAnswer: (problem, answer) => {\r\n            if (answer.isCorrect && problem.isLastOfSection) {\r\n                state.completedSectionKeys.push(problem.sectionKey);\r\n            }\r\n        },\r\n    };\r\n\r\n    return problemService;\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { shuffle } from 'utils/arrays';\r\n\r\nconst englishKeyboard = {\r\n    rows: [\r\n        { keys: `qwertyuiop`.split(``) },\r\n        { keys: ` asdfghjkl`.split(``) },\r\n        { keys: `  zxcvbnm `.split(``) },\r\n    ],\r\n};\r\n\r\nconst styles = {\r\n    container: {},\r\n    rowView: { flex: 1, flexDirection: `row` },\r\n    keyView: {\r\n        margin: 2,\r\n        padding: 2,\r\n        // width: 20,\r\n        flex: 1,\r\n        height: 20,\r\n        backgroundColor: `#111111`,\r\n        justifyContent: `center`,\r\n        alignItems: `center`,\r\n    },\r\n    keyView_disabled: { opacity: 0.5 },\r\n    keyText: {\r\n        fontSize: 16,\r\n    },\r\n    keyText_wrong: {\r\n        fontSize: 16,\r\n        color: `#FF0000`,\r\n    },\r\n} as const;\r\n\r\nexport const KeyboardSimplified = ({ expectedCharacter, showHints, onExpectedKeyPress }: { expectedCharacter: string, showHints: boolean, onExpectedKeyPress: () => void }) => {\r\n    const keyboard = englishKeyboard;\r\n\r\n    const [hintKeys, setHintKeys] = useState(null as null | string[]);\r\n    const [wrongKeys, setWrongKeys] = useState([] as string[]);\r\n    useEffect(() => {\r\n        if (!showHints) { setHintKeys(null); }\r\n\r\n        const hints = [expectedCharacter, ...shuffle(keyboard.rows.flatMap(x => x.keys).map(x => x.trim()).filter(x => x)).slice(0, 3)];\r\n        setHintKeys(hints);\r\n        setWrongKeys([]);\r\n    }, [expectedCharacter, showHints]);\r\n\r\n    const onKeyPress = (key: string) => {\r\n        if (key === expectedCharacter) {\r\n            onExpectedKeyPress();\r\n            return;\r\n        }\r\n        // Remove from choices\r\n        if (showHints) {\r\n            setHintKeys(s => (s ?? []).filter(x => x !== key));\r\n            setWrongKeys(s => [...s, key]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={styles.container}>\r\n                {keyboard.rows.map((row, iRow) => (\r\n                    <View style={styles.rowView} key={`${iRow}`} >\r\n                        {row.keys.map((k, i) => (\r\n                            <TouchableOpacity key={`${k}${i}`} style={{ outline: `none` }} onPress={() => onKeyPress(k)}>\r\n                                <View style={!hintKeys || hintKeys.includes(k) ? {} : styles.keyView_disabled} >\r\n                                    <View style={styles.keyView}>\r\n                                        <Text style={wrongKeys.includes(k) ? styles.keyText_wrong : styles.keyText}>{k}</Text>\r\n                                    </View>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        ))}\r\n                    </View>\r\n                ))}\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { DoodleDrawing, defaultDoodleDrawing, DoodleData } from './doodle';\r\nimport { DoodleDrawerView, DoodleDisplayView } from './doodle-view';\r\nimport { KeyboardSimplified } from './keyboard-simplified';\r\n\r\nexport const styles = {\r\n    container: {\r\n        alignItems: `center`,\r\n    },\r\n    drawing: {\r\n        width: 312,\r\n        height: 312,\r\n        color: `#FFFFFF`,\r\n        backgroundColor: `#000000`,\r\n    },\r\n    drawingChoicesView: {\r\n        maxWidth: 312 + 4 * 4 + 4,\r\n        flexDirection: `row`,\r\n        flexWrap: `wrap`,\r\n    },\r\n    drawingChoiceWrapper: {\r\n        padding: 4,\r\n    },\r\n    drawingChoice: {\r\n        width: 78,\r\n        height: 78,\r\n        color: `#FFFFFF`,\r\n        backgroundColor: `#000000`,\r\n    },\r\n    titleView: {\r\n        justifyContent: `center`,\r\n        alignItems: `center`,\r\n    },\r\n    titleText: {\r\n        fontSize: 20,\r\n        color: `#FFFFFF`,\r\n    },\r\n    promptView: {\r\n        justifyContent: `center`,\r\n        alignItems: `center`,\r\n    },\r\n    promptText: {\r\n        fontSize: 20,\r\n        color: `#FFFF00`,\r\n    },\r\n    hintText: {\r\n        fontSize: 14,\r\n        color: `#FFFF00`,\r\n    },\r\n    buttonRowView: {\r\n        flexDirection: `row`,\r\n    },\r\n    buttonView: {\r\n        margin: 4,\r\n        padding: 8,\r\n        backgroundColor: `#111111`,\r\n    },\r\n    buttonText: {\r\n        fontSize: 20,\r\n        color: `#FFFF00`,\r\n    },\r\n} as const;\r\n\r\nexport const DoodleGameView_DrawWord = (props: { prompt: string, hint?: string, onDone: (drawing: DoodleDrawing) => void, onSkip?: () => void }) => {\r\n    const [drawing, setDrawing] = useState(defaultDoodleDrawing());\r\n    const changeDoodle = (value: DoodleDrawing) => {\r\n        setDrawing(value);\r\n    };\r\n\r\n    const done = () => {\r\n        props.onDone(drawing);\r\n    };\r\n    const skip = () => {\r\n        props.onSkip?.();\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Reset problem when prompt changes\r\n        setDrawing(defaultDoodleDrawing());\r\n    }, [props.prompt]);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.titleView}>\r\n                <Text style={styles.titleText}>Draw</Text>\r\n            </View>\r\n            <DoodleDrawerView style={styles.drawing} drawing={drawing} onChange={changeDoodle} />\r\n            <View style={styles.promptView}>\r\n                <Text style={styles.promptText}>{props.prompt}</Text>\r\n                {!!props.hint && (<Text style={styles.hintText}>{props.hint}</Text>)}\r\n            </View>\r\n            <View style={styles.buttonRowView}>\r\n                {!!props.onSkip && (\r\n                    <TouchableOpacity onPress={skip}>\r\n                        <View style={styles.buttonView}>\r\n                            <Text style={styles.buttonText}>Skip</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                )}\r\n                <TouchableOpacity onPress={done}>\r\n                    <View style={styles.buttonView}>\r\n                        <Text style={styles.buttonText}>Done</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const DoodleGameView_ChooseBest = (props: { prompt: string, drawings: DoodleData[], onChooseBest: (drawing: DoodleData) => void }) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.titleView}>\r\n                <Text style={styles.titleText}>Choose Best</Text>\r\n            </View>\r\n            <View style={styles.promptView}>\r\n                <Text style={styles.promptText}>{props.prompt}</Text>\r\n            </View>\r\n            <View style={styles.drawingChoicesView} >\r\n                {props.drawings.map(x => (\r\n                    <TouchableOpacity key={x.key} onPress={() => props.onChooseBest(x)}>\r\n                        <View style={styles.drawingChoiceWrapper} >\r\n                            <DoodleDisplayView style={styles.drawingChoice} drawing={x.drawing} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                ))}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst typeStyles = {\r\n    completedText: {\r\n        fontSize: 16,\r\n        color: `#FFFF00`,\r\n    },\r\n} as const;\r\nexport const DoodleGameView_TypeExpected = (props: { prompt: string, drawings: DoodleData[], onDone: () => void, sayAgain: () => void }) => {\r\n\r\n    const [status, setStatus] = useState({ completed: ``, remaining: props.prompt });\r\n    useEffect(() => {\r\n        setStatus({ completed: ``, remaining: props.prompt });\r\n    }, [props.prompt, props.drawings]);\r\n\r\n    const onExpectedKeyPress = () => {\r\n        setStatus(s => {\r\n            if (s.remaining.length <= 1) {\r\n                props.onDone();\r\n            }\r\n            const nextChar = s.remaining[0];\r\n            return {\r\n                completed: s.completed + nextChar,\r\n                remaining: s.remaining.substr(1),\r\n            };\r\n        });\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.titleView}>\r\n                <Text style={styles.titleText}>Type Word</Text>\r\n            </View>\r\n            <View style={styles.drawingChoicesView} >\r\n                {props.drawings.map(x => (\r\n                    <View key={x.key} style={styles.drawingChoiceWrapper} >\r\n                        <DoodleDisplayView style={styles.drawingChoice} drawing={x.drawing} />\r\n                    </View>\r\n                ))}\r\n            </View>\r\n            <TouchableOpacity onPress={props.sayAgain}>\r\n                <View style={styles.buttonView}>\r\n                    <Text style={styles.buttonText}>Say Again</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            <View>\r\n                <Text style={typeStyles.completedText}>{`${status.completed}${status.remaining.length > 0 ? `_` : ``}`}</Text>\r\n            </View>\r\n            <KeyboardSimplified expectedCharacter={status.remaining[0] ?? ` `} showHints onExpectedKeyPress={onExpectedKeyPress} />\r\n        </View>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput } from 'react-native-lite';\r\n\r\n\r\nexport const createLeaderboard = <TScoreState extends {}>(args: {\r\n    storageKey: string;\r\n    sortKey: (item: TScoreState) => string | number;\r\n    sortDescending?: boolean;\r\n    scoreColumns: { name: string, getValue: (item: TScoreState) => string }[];\r\n}) => {\r\n\r\n    type LeaderboardScore = { name: string, score: TScoreState };\r\n    const leaderboard = {\r\n        saveScore: (name: string, score: TScoreState) => {\r\n            const data = leaderboard.loadScore();\r\n\r\n            data.push({ name, score });\r\n            data.sort((a, b) => args.sortKey(a.score) < args.sortKey(b.score) ? -1 : 1);\r\n\r\n            localStorage.setItem(args.storageKey, JSON.stringify(data));\r\n        },\r\n        loadScore: () => {\r\n            const json = localStorage.getItem(args.storageKey);\r\n            if (!json) { return []; }\r\n\r\n            const data = JSON.parse(json) as LeaderboardScore[];\r\n            data.sort((a, b) => (args.sortKey(a.score) > args.sortKey(b.score) ? -1 : 1) * (args.sortDescending ? -1 : 1));\r\n            return data;\r\n        },\r\n    };\r\n\r\n    const leaderboardInputStyles = {\r\n        container: {\r\n            flex: 1,\r\n            alignItems: `center`,\r\n            margin: 16,\r\n        },\r\n        textInput: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 16,\r\n            color: `#0000FF`,\r\n        },\r\n        buttonView: {\r\n            margin: 4,\r\n            padding: 4,\r\n            borderColor: `#FFFF00`,\r\n            borderStyle: `solid`,\r\n            borderWidth: 1,\r\n            borderRadius: 4,\r\n        },\r\n        buttonText: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 16,\r\n            color: `#FFFF00`,\r\n        },\r\n    } as const;\r\n\r\n    const LeaderboardNameInput = (props: { onSubmit: (value: string) => void }) => {\r\n        const [name, setName] = useState(``);\r\n        return (\r\n            <View style={leaderboardInputStyles.container}>\r\n                <TextInput style={leaderboardInputStyles.textInput} value={name} onChange={setName} placeholder='Name' keyboardType='default' autoCompleteType='off' />\r\n                <TouchableOpacity onPress={() => !!name && props.onSubmit(name)} style={!name ? { opacity: 0.5 } : {}}>\r\n                    <View style={leaderboardInputStyles.buttonView}>\r\n                        <Text style={leaderboardInputStyles.buttonText}>Save Score</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View >\r\n        );\r\n    };\r\n\r\n    const leaderboardStyles = {\r\n        container: {\r\n            marginTop: 16,\r\n            borderColor: `#FFFFFF`,\r\n            borderStyle: `solid`,\r\n            borderWidth: 1,\r\n            borderRadius: 0,\r\n        },\r\n        scoreView: {\r\n            flexDirection: `row`,\r\n            justifyContent: `space-around`,\r\n            padding: 4,\r\n            borderColor: `#FFFFFF`,\r\n            borderStyle: `solid`,\r\n            borderWidth: 1,\r\n            borderRadius: 0,\r\n        },\r\n        nameText: {\r\n            flex: 2,\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 12,\r\n            color: `#FFFFFF`,\r\n            overflow: `hidden`,\r\n        },\r\n        scoreText: {\r\n            flex: 1,\r\n            textAlign: `right`,\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 12,\r\n            color: `#FFFF00`,\r\n        },\r\n    } as const;\r\n\r\n    const LeaderboardViewInner = (props: { scores: LeaderboardScore[] }) => {\r\n\r\n        return (\r\n            <View style={leaderboardStyles.container}>\r\n                <View style={leaderboardStyles.scoreView}>\r\n                    <Text style={leaderboardStyles.nameText}>Leaderboard</Text>\r\n                    {args.scoreColumns.map(x => (\r\n                        <Text key={x.name} style={leaderboardStyles.scoreText} />\r\n                    ))}\r\n                </View>\r\n                <View style={leaderboardStyles.scoreView}>\r\n                    <Text style={leaderboardStyles.nameText}>Name</Text>\r\n                    {args.scoreColumns.map(x => (\r\n                        <Text key={x.name} style={leaderboardStyles.scoreText} >{x.name}</Text>\r\n                    ))}\r\n                </View>\r\n                {props.scores.map(x => (\r\n                    <View style={leaderboardStyles.scoreView}>\r\n                        <Text style={leaderboardStyles.nameText}>{x.name}</Text>\r\n                        {args.scoreColumns.map(c => (\r\n                            <Text key={x.name} style={leaderboardStyles.scoreText} >{c.getValue(x.score)}</Text>\r\n                        ))}\r\n                    </View>\r\n                ))}\r\n            </View>\r\n        );\r\n    };\r\n\r\n    const useLeaderboard = ({\r\n        getScore,\r\n    }: {\r\n        getScore: () => TScoreState;\r\n    }) => {\r\n\r\n        const [leaderboardScores, setLeaderboardScores] = useState({ scores: leaderboard.loadScore() } as { scores: LeaderboardScore[] });\r\n\r\n        const LeaderboardArea = (props: { gameOver: boolean, onScoreSaved: () => void }) => {\r\n\r\n            const onSaveScore = (name: string) => {\r\n                leaderboard.saveScore(name, getScore());\r\n                setLeaderboardScores({ scores: leaderboard.loadScore() });\r\n                props.onScoreSaved();\r\n            };\r\n\r\n            return (\r\n                <>\r\n                    {!!props.gameOver && (<LeaderboardNameInput onSubmit={onSaveScore} />)}\r\n                    <LeaderboardViewInner scores={leaderboardScores.scores} />\r\n                </>\r\n            );\r\n        };\r\n\r\n        return {\r\n            LeaderboardArea,\r\n        };\r\n    };\r\n\r\n\r\n    return {\r\n        useLeaderboard,\r\n    };\r\n};\r\n","export const userProfileChracters = `\r\n🐵 🐶 🐺 🐱 🦁 🐯 🦒 🦊 🦝 🐮 🐷 🐗 🐭 🐹 🐰 🐻 🐨 🐼 🐸 🦓 🐴 🦄 🐔 🐲\r\n`.split(` `).map(x => x.trim()).filter(x => x);\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { useAutoLoadingError } from 'utils-react/hooks';\r\nimport { C } from 'controls-react';\r\nimport { Icon } from 'controls-react/icon';\r\nimport { IconKind } from 'controls-react/icon-kind';\r\nimport { UserDataService, UserProfileInfo } from './user-data-service';\r\nimport { userProfileChracters } from './user-profile-emojis';\r\n\r\n\r\nexport const UserProfileManagerView = (props: { onClose?: () => void }) => {\r\n\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [userProfiles, setUserProfiles] = useState(null as null | UserProfileInfo[]);\r\n\r\n    const reload = () => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setup();\r\n        stopIfObsolete();\r\n\r\n        const profiles = await UserDataService.get().getUserProfiles();\r\n        setUserProfiles(profiles);\r\n    });\r\n\r\n    useEffect(() => {\r\n        reload();\r\n    }, []);\r\n\r\n    return (\r\n        <C.View_Panel>\r\n            <C.Text_FormTitle >Users</C.Text_FormTitle>\r\n            <C.LoadingInline loading={loading} />\r\n            <C.ErrorBox error={error} />\r\n            {userProfiles?.map(x => (\r\n                <UserProfileView key={x.key} userProfile={x} onActiveUserChange={reload} onUserProfileChange={reload} />\r\n            ))}\r\n            <C.Text_FormTitle >Add User</C.Text_FormTitle>\r\n            <AddUserProfileView onUserAdded={reload} />\r\n            {!!props.onClose && (\r\n                <C.View_FormActionRow>\r\n                    <C.Button_FormAction onPress={() => props.onClose?.()}>Done</C.Button_FormAction>\r\n                </C.View_FormActionRow>\r\n            )}\r\n        </C.View_Panel>\r\n    );\r\n};\r\n\r\nconst AddUserProfileView = (props: { onUserAdded: () => void }) => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [shareCode, setShareCode] = useState(null as null | string);\r\n    const addShareCode = () => {\r\n        if (!shareCode) { return; }\r\n\r\n        doWork(async (stopIfObsolete) => {\r\n            await UserDataService.get().addUserFromShareCode(shareCode);\r\n            stopIfObsolete();\r\n            props.onUserAdded();\r\n            setShareCode(null);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <C.View_Form>\r\n                <C.View_FieldRow>\r\n                    <C.LoadingInline loading={loading} />\r\n                    <C.Input_Text value={shareCode ?? ``} onChange={setShareCode} placeholder='Enter Share Code' />\r\n                    <C.Button_FieldInline onPress={addShareCode}>Add User</C.Button_FieldInline>\r\n                </C.View_FieldRow>\r\n                <C.ErrorBox error={error} />\r\n            </C.View_Form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst UserProfileView = ({ userProfile, onActiveUserChange, onUserProfileChange }: { userProfile: UserProfileInfo, onActiveUserChange: () => void, onUserProfileChange: () => void }) => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [shareCode, setShareCode] = useState(null as null | string);\r\n    const [characters, setCharacters] = useState(null as null | string[]);\r\n\r\n    const createShareCode = () => doWork(async (stopIfObsolete) => {\r\n        const result = await UserDataService.get().createShareCode(userProfile.key);\r\n        stopIfObsolete();\r\n        setShareCode(result.shareCode);\r\n    });\r\n    const makeActive = () => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setActiveUser(userProfile.key);\r\n        stopIfObsolete();\r\n        onActiveUserChange();\r\n    });\r\n\r\n    const showCharacterSelection = () => {\r\n        setCharacters(userProfileChracters);\r\n    };\r\n    const selectCharacter = (character: string) => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setUserProfileInfo(userProfile.key, { emoji: character });\r\n\r\n        setCharacters(null);\r\n        onUserProfileChange();\r\n    });\r\n\r\n    if (characters) {\r\n        return (\r\n            <>\r\n                <C.View_Form>\r\n                    <View style={{ flexDirection: `row`, flexWrap: `wrap` }}>\r\n                        {characters.map(x => (\r\n                            <TouchableOpacity key={x} onPress={() => selectCharacter(x)} >\r\n                                <View>\r\n                                    <Text style={{ fontSize: 32 }} >{x}</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        ))}\r\n                    </View>\r\n                </C.View_Form>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <C.View_Form>\r\n                <C.View_FieldRow>\r\n                    <C.LoadingInline loading={loading} />\r\n                    <TouchableOpacity onPress={makeActive}>\r\n                        <Icon style={{ size: 32 }} kind={userProfile.isActive ? IconKind.checkChecked : IconKind.checkUnchecked} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={showCharacterSelection} >\r\n                        <View>\r\n                            <Text style={{ fontSize: 32 }} >{userProfile.emoji}</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    <UserProfileName userProfile={userProfile} onNameChange={onUserProfileChange} />\r\n                    {!!shareCode && (\r\n                        <C.Text_FieldLabel>{shareCode}</C.Text_FieldLabel>\r\n                    )}\r\n                    {!shareCode && (\r\n                        <C.Button_FieldInline onPress={createShareCode}>Create Share Code</C.Button_FieldInline>\r\n                    )}\r\n                </C.View_FieldRow>\r\n                <C.ErrorBox error={error} />\r\n            </C.View_Form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport const UserProfileName = ({ userProfile, onNameChange }: { userProfile: UserProfileInfo, onNameChange: () => void }) => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [name, setName] = useState(userProfile.name);\r\n    const [isEditingName, setIsEditingName] = useState(false);\r\n\r\n    const changeName = () => doWork(async (stopIfObsolete) => {\r\n        console.log(`UserProfileName changeName`, { name });\r\n\r\n        await UserDataService.get().setUserProfileInfo(userProfile.key, { name });\r\n\r\n        setIsEditingName(false);\r\n        onNameChange();\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {!isEditingName && (\r\n                <TouchableOpacity onPress={() => setIsEditingName(true)} >\r\n                    <C.Text_FieldLabel>{userProfile.name}</C.Text_FieldLabel>\r\n                </TouchableOpacity>\r\n            )}\r\n            {isEditingName && (\r\n                <>\r\n                    <C.Input_Text value={name} onChange={setName} onSubmit={changeName} />\r\n                    <C.Button_FieldInline onPress={changeName}>Change</C.Button_FieldInline>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import { ApiError } from './error';\r\n\r\nexport function fetchWithTimeout(url: string, options: RequestInit, timeout = 10000): Promise<Response> {\r\n    return Promise.race([\r\n        fetch(url, options),\r\n        new Promise((resolve, reject) =>\r\n            setTimeout(() => reject(new ApiError(`Fetch Timeout`)), timeout),\r\n        ) as Promise<Response>,\r\n    ]);\r\n}\r\n\r\nexport async function webRequest(url: string, data: unknown, options?: { method: 'POST' | 'PUT' }) {\r\n\r\n    const body = JSON.stringify(data);\r\n    const reqData: RequestInit = {\r\n        method: options?.method ?? `POST`,\r\n        headers: {\r\n            'Accept': `application/json`,\r\n            'Content-Type': `application/json`,\r\n            'Content-Length': `${body.length}`,\r\n        },\r\n        body,\r\n    };\r\n    const result = await fetchWithTimeout(url, reqData).catch((error) => { throw new ApiError(`Request Failure`, { url, data, error }); });\r\n    if (!result.ok) {\r\n        throw new ApiError(`Api Error`, { data: (await result.json().catch(error => {/* Ignore Parse Error */ })) ?? {}, responseStatus: result.status, request: { url, data } });\r\n    }\r\n    const resultObj = await result.json().catch((error) => { throw new ApiError(`Request Parse Failure`, { url, data, error }); });\r\n    return resultObj;\r\n}\r\n","export const websocketsApiConfig = {\r\n    websocketsApiUrl: `wss://p4w1a7ysk8.execute-api.us-east-1.amazonaws.com/prod`,\r\n};\r\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Platform } from 'react-native-lite';\r\nimport { ProblemService } from '../problems/problems-service';\r\n\r\n\r\nconst subjectStyles = {\r\n    container: {\r\n        margin: 16,\r\n    },\r\n    header: {\r\n        view: {\r\n            margin: 4,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n        },\r\n    },\r\n    section: {\r\n        view: {\r\n            margin: 4,\r\n            flexDirection: `row`,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n        },\r\n    },\r\n} as const;\r\n\r\nexport type SubjectProblemService = {\r\n    getSections: () => { key: string, name: string, isComplete: boolean }[];\r\n    gotoSection: (section: { key: string }) => void;\r\n};\r\nexport const SubjectNavigator = (props: { problemService: SubjectProblemService, onOpen: () => void, onClose: () => void, onSubjectNavigation: () => void }) => {\r\n\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const toggle = () => {\r\n        if (!isExpanded) {\r\n            props.onOpen();\r\n        }\r\n        if (isExpanded) {\r\n            props.onClose();\r\n        }\r\n        setIsExpanded(s => !s);\r\n    };\r\n\r\n    return (\r\n        <View style={subjectStyles.container}>\r\n            <TouchableOpacity onPress={toggle}>\r\n                <View style={subjectStyles.header.view}>\r\n                    <Text style={subjectStyles.header.text}>Sections</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            {isExpanded && (\r\n                <View>\r\n                    {props.problemService.getSections().map(s => (\r\n                        <TouchableOpacity key={s.key} onPress={() => {\r\n                            console.log(`SubjectNavigator onSection`, { s });\r\n                            props.problemService.gotoSection(s);\r\n                            props.onSubjectNavigation();\r\n                            props.onClose();\r\n                            setIsExpanded(false);\r\n                            if (Platform.OS === `web`) {\r\n                                window.scrollTo(0, 0);\r\n                            }\r\n                        }}>\r\n                            <View style={subjectStyles.section.view}>\r\n                                <Text style={subjectStyles.section.text}>{s.isComplete ? `✅` : `⬜`}</Text>\r\n                                <Text style={subjectStyles.section.text}>{s.name}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                </View>\r\n            )}\r\n\r\n        </View>\r\n    );\r\n};\r\n","import { ProblemStateStorage, ProblemService } from './problems-service';\r\n\r\nexport const createProblemStateStorage = (storageKey: string): ProblemStateStorage => {\r\n    const storage: ProblemStateStorage = {\r\n        load: async <T>() => {\r\n            try {\r\n                return JSON.parse(localStorage.getItem(storageKey) ?? `error - NOT FOUND`) as T;\r\n            }\r\n            catch{\r\n                return null;\r\n            }\r\n        },\r\n        save: async (value) => {\r\n            localStorage.setItem(storageKey, JSON.stringify(value));\r\n        },\r\n    };\r\n    return storage;\r\n};\r\n\r\nexport const createAutoSavedProblemService = (problemSource: ProblemService, storageKey: string): ProblemService => {\r\n    const storage = createProblemStateStorage(storageKey);\r\n\r\n    // Load \r\n    (async () => await problemSource.load(storage))();\r\n\r\n    return {\r\n        ...problemSource,\r\n        recordAnswer: (problem, answer) => {\r\n            problemSource.recordAnswer(problem, answer);\r\n\r\n            if (problem.isLastOfSection) {\r\n                (async () => await problemSource.save(storage))();\r\n            }\r\n        },\r\n    };\r\n};\r\n","import { createUploadApiWebClient } from 'upload-api/client/web-client';\r\nimport { uploadApiConfig } from 'upload-api/client/config';\r\nimport { UploadUrl } from 'upload-api/client/types';\r\nimport { createUploader, downloadData } from 'upload-api/client/uploader';\r\nimport { AppError } from 'utils/error';\r\nimport { delay } from 'utils/delay';\r\nimport { error } from 'console';\r\n\r\nconst USER_DATA_SERVICE_STATE_KEY = `_USER_DATA_SERVICE_STATE`;\r\nexport type UserProfileInfo = {\r\n    key: string;\r\n    name: string;\r\n    emoji: string;\r\n    isActive: boolean;\r\n};\r\ntype UserProfileMetadata = {\r\n    name?: string;\r\n    emoji?: string;\r\n};\r\ntype UserProfileData = {\r\n    key: string;\r\n    name: string;\r\n    emoji?: string;\r\n    uploadUrl: UploadUrl;\r\n    lastUploadTimestamp?: number;\r\n};\r\ntype UserServiceState = {\r\n    userProfiles: UserProfileData[];\r\n    activeUserProfileKey: string;\r\n    changeTimestamp: number;\r\n};\r\ntype UserData = {\r\n    data: { [key: string]: null | string };\r\n    metadata?: UserProfileMetadata;\r\n    timestamp: number;\r\n};\r\n\r\nconst createUserDataService = () => {\r\n    const uploadApi = createUploadApiWebClient(uploadApiConfig);\r\n\r\n    const storage = {\r\n        getUserDataServiceState: (): null | UserServiceState => {\r\n            try {\r\n                return JSON.parse(localStorage.getItem(USER_DATA_SERVICE_STATE_KEY) ?? `NULL !{}`);\r\n            } catch{\r\n                return null;\r\n            }\r\n        },\r\n        setUserDataServiceState: (state: UserServiceState) => {\r\n            localStorage.setItem(USER_DATA_SERVICE_STATE_KEY, JSON.stringify(state));\r\n        },\r\n        getUserData: (): UserData => {\r\n            const state = storage.getUserDataServiceState();\r\n            const userState = state && state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n            const data = {\r\n                data: {},\r\n                metadata: { name: userState?.name, emoji: userState?.emoji },\r\n                timestamp: Date.now(),\r\n            } as UserData;\r\n            const keys = Object.keys(localStorage).filter(x => !x.startsWith(`_`));\r\n            for (const k of keys) {\r\n                data.data[k] = localStorage.getItem(k);\r\n            }\r\n            return data;\r\n        },\r\n        clearUserData: () => {\r\n            // Remove all old data\r\n            const keys = Object.keys(localStorage).filter(x => !x.startsWith(`_`));\r\n            for (const k of keys) {\r\n                localStorage.removeItem(k);\r\n            }\r\n\r\n            // Load metadata\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) { return; }\r\n            state.userProfiles.forEach(x => { x.lastUploadTimestamp = undefined; });\r\n            storage.setUserDataServiceState(state);\r\n        },\r\n        setUserData: (userData: UserData) => {\r\n            storage.clearUserData();\r\n\r\n            // Set New data\r\n            for (const k of Object.keys(userData.data)) {\r\n                const val = userData.data[k];\r\n                if (!val) {\r\n                    localStorage.removeItem(k);\r\n                    return;\r\n                }\r\n                localStorage.setItem(k, val);\r\n            }\r\n\r\n            // Load metadata\r\n            const state = storage.getUserDataServiceState();\r\n            const userState = state && state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n            if (!state || !userState) { return; }\r\n            userState.emoji = userData.metadata?.emoji ?? userState.emoji;\r\n            userState.name = userData.metadata?.name ?? userState.name;\r\n            userState.lastUploadTimestamp = userData.timestamp;\r\n            storage.setUserDataServiceState(state);\r\n        },\r\n    };\r\n\r\n    const getUserProfile = (userProfileKey: string) => {\r\n        const state = storage.getUserDataServiceState();\r\n        if (!state) { return null; }\r\n        return state.userProfiles.find(x => x.key === userProfileKey);\r\n    };\r\n    const getActiveUserProfile = () => {\r\n        const state = storage.getUserDataServiceState();\r\n        if (!state?.activeUserProfileKey) { return null; }\r\n        return state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n    };\r\n\r\n    const uploadBackup = async (userState: UserProfileData, userData: UserData) => {\r\n        const uploadUrl = await uploadApi.createUploadUrl({ prefix: `backup/users/${userState.name}/${userState.uploadUrl.relativePath}/${Date.now()}` });\r\n        const uploader = createUploader(uploadUrl.uploadUrl);\r\n        await uploader.uploadData(userData);\r\n    };\r\n\r\n    const uploadWithAutoRenew = async (userProfileKey: string, userData: UserData) => {\r\n        const state = storage.getUserDataServiceState();\r\n        const userState = state && state.userProfiles.find(x => x.key === userProfileKey);\r\n        if (!state || !userState) { return; }\r\n\r\n        // Upload backup\r\n        await uploadBackup(userState, userData);\r\n\r\n        const upload = async () => {\r\n            const uploader = createUploader(userState.uploadUrl);\r\n            await uploader.uploadData(userData);\r\n        };\r\n\r\n        try {\r\n            // Try to upload\r\n            console.log(`uploadWithAutoRenew - Attempt 1`);\r\n            await upload();\r\n            console.log(`uploadWithAutoRenew - UPLOADED`);\r\n        } catch{\r\n            // Rewew and try again\r\n            console.log(`uploadWithAutoRenew - Attempt 2`);\r\n\r\n            const newUploarUrl = await uploadApi.renewUploadUrl({ uploadUrl: userState.uploadUrl });\r\n            userState.uploadUrl = newUploarUrl.uploadUrl;\r\n            storage.setUserDataServiceState(state);\r\n\r\n            await upload();\r\n\r\n            console.log(`uploadWithAutoRenew - UPLOADED AFTER RENEW`);\r\n        }\r\n    };\r\n\r\n    const updateUserProfileFromServer = async (userProfileKey: string) => {\r\n        console.log(`updateUserProfile`, { userProfileKey });\r\n        const state = storage.getUserDataServiceState();\r\n        const userState = state && state.userProfiles.find(x => x.key === userProfileKey);\r\n        if (!state || !userState) {\r\n            console.log(`updateUserProfile - NO USER STATE`, { userProfileKey });\r\n            return;\r\n        }\r\n\r\n        const userData = await downloadData(userState.uploadUrl.getUrl) as UserData;\r\n        if (!userData.timestamp || userData.timestamp <= (userState.lastUploadTimestamp ?? 0)) {\r\n            // Skip if not new\r\n            console.log(`updateUserProfile - NOT NEW`, { name: userState.name });\r\n            return;\r\n        }\r\n\r\n        console.log(`updateUserProfile - UPDATED USER PROFILE`, { name: userState.name });\r\n        userState.emoji = userData.metadata?.emoji ?? userState.emoji;\r\n        userState.name = userData.metadata?.name ?? userState.name;\r\n        userState.lastUploadTimestamp = userData.timestamp;\r\n        storage.setUserDataServiceState(state);\r\n\r\n        if (userState.key === state.activeUserProfileKey) {\r\n            console.log(`updateUserProfile - UPDATED ACTIVE USER DATA`, { name: userState.name });\r\n            storage.setUserData(userData);\r\n        }\r\n    };\r\n    const updateAllProfilesFromServer = async () => {\r\n        const state = storage.getUserDataServiceState();\r\n        if (!state) { return; }\r\n\r\n        for (const userState of state.userProfiles) {\r\n            try {\r\n                // eslint-disable-next-line no-await-in-loop\r\n                await updateUserProfileFromServer(userState.key);\r\n            } catch (error_) {\r\n                console.log(`updateAllProfiles - ERROR Updating user profile`, { error: error_ });\r\n            }\r\n        }\r\n    };\r\n\r\n    let isSetupStarted = false;\r\n    let isSetupDone = false;\r\n\r\n    const service = {\r\n        setup: async () => {\r\n            if (isSetupStarted) {\r\n                while (!isSetupDone) {\r\n                    // eslint-disable-next-line no-await-in-loop\r\n                    await delay(10);\r\n                }\r\n                return;\r\n            }\r\n            isSetupStarted = true;\r\n            const doSetup = async () => {\r\n                console.log(`UserDataService:setup`);\r\n\r\n                const a = getActiveUserProfile();\r\n                if (a) {\r\n                    await updateAllProfilesFromServer();\r\n                    return;\r\n                }\r\n\r\n                const state = storage.getUserDataServiceState();\r\n                if (state && state.userProfiles.length > 0) {\r\n                    state.activeUserProfileKey = state.userProfiles[0].key;\r\n                    storage.setUserDataServiceState(state);\r\n                    await updateAllProfilesFromServer();\r\n                    return;\r\n                }\r\n\r\n                const newUploadUrlResult = await uploadApi.createUploadUrl({ prefix: `users` });\r\n                const newState: UserServiceState = state ?? {\r\n                    userProfiles: [{\r\n                        key: newUploadUrlResult.uploadUrl.relativePath,\r\n                        name: `${`Player 1`}`,\r\n                        uploadUrl: newUploadUrlResult.uploadUrl,\r\n                    }],\r\n                    activeUserProfileKey: newUploadUrlResult.uploadUrl.relativePath,\r\n                    changeTimestamp: 0,\r\n                };\r\n                storage.setUserDataServiceState(newState);\r\n\r\n                // Upload initial data\r\n                await service.uploadUserData();\r\n            };\r\n\r\n            try {\r\n                await doSetup();\r\n                isSetupDone = true;\r\n            } catch (error_) {\r\n                // Setup Failed\r\n                isSetupDone = true;\r\n                throw error_;\r\n            }\r\n        },\r\n        getActiveUser: (): null | UserProfileInfo => {\r\n            const user = getActiveUserProfile();\r\n            if (!user) { return null; }\r\n            return {\r\n                key: user.key,\r\n                name: user.name,\r\n                emoji: user.emoji ?? `👤`,\r\n                isActive: true,\r\n            };\r\n        },\r\n        setActiveUser: async (userProfileKey: string) => {\r\n            console.log(`setActiveUser`, { userProfileKey });\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) { return; }\r\n\r\n            if (!state.userProfiles.find(x => x.key === userProfileKey)) {\r\n                console.log(`setActiveUser - User Profile Not Found`, { userProfileKey });\r\n                throw new AppError(`User Profile not found`);\r\n            }\r\n\r\n            // Don't upload old user data - the chance of this being out of date is high\r\n            // // Upload old user data\r\n            // await service.uploadUserData();\r\n\r\n            if (state.activeUserProfileKey !== userProfileKey) {\r\n                console.log(`setActiveUser - user changed - clearing state`);\r\n\r\n                state.activeUserProfileKey = userProfileKey;\r\n                state.changeTimestamp = 0;\r\n                storage.setUserDataServiceState(state);\r\n                storage.clearUserData();\r\n            }\r\n\r\n            console.log(`setActiveUser - before download`, { stateJson: JSON.stringify(storage.getUserDataServiceState()) });\r\n\r\n            // Download new user data\r\n            await service.downloadUserDataIfNewer();\r\n        },\r\n        getUserProfiles: async (): Promise<UserProfileInfo[]> => {\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state?.activeUserProfileKey) { return []; }\r\n            return state.userProfiles.map(x => ({\r\n                key: x.key,\r\n                name: x.name,\r\n                emoji: x.emoji ?? `👤`,\r\n                isActive: state.activeUserProfileKey === x.key,\r\n            }));\r\n        },\r\n        setUserProfileInfo: async (userProfileKey: string, info: { emoji?: string, name?: string }) => {\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) {\r\n                console.log(`uploadUserData - NO STATE`);\r\n                return;\r\n            }\r\n\r\n            const userState = state.userProfiles.find(x => x.key === userProfileKey);\r\n            if (!userState) {\r\n                console.log(`uploadUserData - NO USER STATE`);\r\n                return;\r\n            }\r\n\r\n            userState.emoji = info.emoji ?? userState.emoji;\r\n            userState.name = info.name ?? userState.name;\r\n            storage.setUserDataServiceState(state);\r\n\r\n            // Save to remote data\r\n            const uploader = createUploader(userState.uploadUrl);\r\n            const uData = await uploader.downloadData() as UserData;\r\n            if (!uData) { return; }\r\n            uData.metadata = {\r\n                name: userState.name,\r\n                emoji: userState.emoji,\r\n            };\r\n            uData.timestamp = Date.now();\r\n            await uploadWithAutoRenew(userProfileKey, uData);\r\n        },\r\n        uploadUserData: async () => {\r\n            console.log(`uploadUserData`);\r\n\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) {\r\n                console.log(`uploadUserData - NO STATE`);\r\n                return;\r\n            }\r\n\r\n            const userState = state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n            if (!userState) {\r\n                console.log(`uploadUserData - NO user State`, { state });\r\n                return;\r\n            }\r\n\r\n            userState.lastUploadTimestamp = Date.now();\r\n            storage.setUserDataServiceState(state);\r\n\r\n            const userData = storage.getUserData();\r\n            await uploadWithAutoRenew(userState.key, userData);\r\n\r\n            console.log(`uploadUserData - UPLOADED`, { userData });\r\n        },\r\n        downloadUserDataIfNewer: async () => {\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) { return; }\r\n\r\n            const userState = state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n            if (!userState) { return; }\r\n\r\n            console.log(`downloadUserDataIfNewer`);\r\n\r\n            const uploader = createUploader(userState.uploadUrl);\r\n            const userData = await uploader.downloadData() as UserData;\r\n\r\n            // Don't update if not newer\r\n            if (!userData.timestamp || userData.timestamp <= (userState.lastUploadTimestamp ?? 0)) {\r\n                console.log(`downloadUserDataIfNewer - Local data is up to date`, { state, userData });\r\n                return;\r\n            }\r\n\r\n            console.log(`downloadUserDataIfNewer - UPDATING`, { state, userData });\r\n            storage.clearUserData();\r\n            storage.setUserData(userData);\r\n        },\r\n        createShareCode: async (userProfileKey: string) => {\r\n            await service.setup();\r\n            const user = getUserProfile(userProfileKey);\r\n            if (!user) {\r\n                throw new AppError(`user should not be null`);\r\n            }\r\n\r\n            const shareUrlResult = await uploadApi.createUploadUrl({ shareablePath: true });\r\n\r\n            // Save user uploadUrl to shared path\r\n            const uploader = createUploader(shareUrlResult.uploadUrl);\r\n            await uploader.uploadData(user.uploadUrl);\r\n\r\n            return {\r\n                shareCode: shareUrlResult.uploadUrl.relativePath,\r\n            };\r\n        },\r\n        addUserFromShareCode: async (shareCode: string) => {\r\n            console.log(`addUserFromShareCode`, { shareCode });\r\n\r\n            // Don't have a clean way to get the path, but can generate a new path from the server and use it as a template\r\n            const shareUrlResult = await uploadApi.createUploadUrl({ shareablePath: true });\r\n            const shareGetUrl = shareUrlResult.uploadUrl.getUrl.replace(shareUrlResult.uploadUrl.relativePath, shareCode.toUpperCase());\r\n            const sharedUploadUrl = await downloadData(shareGetUrl) as UploadUrl;\r\n            if (!sharedUploadUrl.putUrl) {\r\n                console.log(`addUserFromShareCode - FAILED TO GET PROFILE`);\r\n                throw new AppError(`Failed to get user profile`);\r\n            }\r\n\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) {\r\n                console.log(`addUserFromShareCode - NO STATE`);\r\n                throw new AppError(`UserDataService is not setup`);\r\n            }\r\n\r\n            // Already has that user profile\r\n            if (state.userProfiles.find(x => x.key === sharedUploadUrl.relativePath)) {\r\n                console.log(`addUserFromShareCode - ALREADY HAS USER`, { userKey: sharedUploadUrl.relativePath });\r\n                return;\r\n            }\r\n\r\n            state.userProfiles.push({\r\n                key: sharedUploadUrl.relativePath,\r\n                name: `Player ${state.userProfiles.length + 1}`,\r\n                uploadUrl: sharedUploadUrl,\r\n            });\r\n            storage.setUserDataServiceState(state);\r\n\r\n            console.log(`addUserFromShareCode - ADDED`, { userKey: sharedUploadUrl.relativePath });\r\n\r\n            // Reload profile\r\n            await updateUserProfileFromServer(sharedUploadUrl.relativePath);\r\n        },\r\n    };\r\n    return service;\r\n};\r\n\r\nexport type UserDataService = ReturnType<typeof createUserDataService>;\r\nconst serviceState = {\r\n    instance: null as null | UserDataService,\r\n};\r\nexport const UserDataService = {\r\n    get: (): UserDataService => {\r\n        if (!serviceState.instance) {\r\n            serviceState.instance = createUserDataService();\r\n        };\r\n        return serviceState.instance;\r\n    },\r\n};\r\n","export { delay } from 'utils/delay';\r\nexport { randomIndex, randomItem } from 'utils/random';\r\nexport { getValuesAsItems } from 'utils/objects';\r\nexport { moveItem } from 'utils/arrays';\r\nexport const randomBinary = (length: number) => String.fromCharCode(...[...new Array(length)].map(x => Math.random() * (126 - 32) + 32));\r\n"],"sourceRoot":""}