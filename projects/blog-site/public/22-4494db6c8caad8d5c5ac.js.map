{"version":3,"sources":["webpack:///D:/Projects/rick-love-master/code/code-training/lesson-server/client/lesson-api-client.ts","webpack:///D:/Projects/rick-love-master/code/code-training/lesson-editor/lesson-modules-client-editor.tsx"],"names":["serverUrl","request","styles","container","background","containerPanel","buttonView","alignSelf","padding","margin","buttonText","fontSize","color","apiClient","endpoint","data","a","webRequest","timeoutMs","getLessonModules","getLessonModule","setLessonModule","buildLessonModule","deleteLessonModule","setProjectState","LessonModulesClientEditor","props","useState","mode","setMode","modes","value","label","modules","setModules","activeModule","setActiveModule","useAutoLoadingError","loading","error","doWork","reloadModules","stopIfObsolete","result","useEffect","projectState","iFrameUrl","filesHashCode","style","selectedTabText","header","items","getKey","x","getLabel","selected","find","onSelect","key","title","onAdd","newItem","createDefaultLessonModule","undefined","flexDirection","justifyContent","onPress","onChange","borderStyle","borderBottomWidth","borderBottomColor","module"],"mappings":"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","file":"22-4494db6c8caad8d5c5ac.js","sourcesContent":["import { webRequest } from 'utils/web-request';\r\nimport { LessonServerApi } from '../lesson-api-types';\r\n\r\nexport const createLessonApiClient = ({\r\n    serverUrl = `http://localhost:3042/api/`,\r\n}: {\r\n    serverUrl?: string;\r\n}): LessonServerApi => {\r\n\r\n    const request = async <T, TResponse>(endpoint: string, data: T): Promise<TResponse> => {\r\n        return await webRequest(serverUrl, { endpoint, data }, { timeoutMs: 30000 });\r\n    };\r\n\r\n    const client: LessonServerApi = {\r\n        getLessonModules: async (data) => await request(`getLessonModules`, data),\r\n        getLessonModule: async (data) => await request(`getLessonModule`, data),\r\n        setLessonModule: async (data) => await request(`setLessonModule`, data),\r\n        buildLessonModule: async (data) => await request(`buildLessonModule`, data),\r\n        deleteLessonModule: async (data) => await request(`deleteLessonModule`, data),\r\n        setProjectState: async (data) => await request(`setProjectState`, data),\r\n    };\r\n    return client;\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TouchableOpacity, View, Text, TextInput } from 'react-native-lite';\r\nimport { useAutoLoadingError } from 'utils-react/hooks';\r\nimport { ErrorBox } from 'controls-react/error-box';\r\nimport { Loading } from 'controls-react/loading';\r\nimport { LessonModulePlayer } from '../lesson-player/lesson-module-player';\r\nimport { LessonModuleMeta } from '../lesson-server/lesson-api-types';\r\nimport { createLessonApiClient } from '../lesson-server/client/lesson-api-client';\r\nimport { TabsComponent, TabsListEditorComponent } from '../common/components/tabs';\r\nimport { LessonData, LessonModule, LessonProjectState, SetProjectState } from '../common/lesson-types';\r\nimport { createDefaultLesson, createDefaultLessonModule } from './lesson-defaults';\r\nimport { LessonEditor } from './lesson-editor';\r\nimport { LessonModuleEditor } from './lesson-module-editor';\r\n\r\n\r\nconst styles = {\r\n    container: {\r\n        background: `#111111`,\r\n    },\r\n    containerPanel: {\r\n        background: `#292a2d`,\r\n    },\r\n    buttonView: {\r\n        background: `#1e1e1e`,\r\n        alignSelf: `flex-start`,\r\n        padding: 8,\r\n        margin: 1,\r\n    },\r\n    buttonText: {\r\n        fontSize: 14,\r\n        color: `#FFFFFFF`,\r\n    },\r\n} as const;\r\n\r\nconst apiClient = createLessonApiClient({});\r\nexport const LessonModulesClientEditor = (props: {}) => {\r\n    const [mode, setMode] = useState(`edit` as 'edit' | 'play');\r\n    const modes = [\r\n        { value: `edit` as const, label: `Edit` },\r\n        { value: `play` as const, label: `Play` },\r\n    ];\r\n\r\n    const [modules, setModules] = useState(null as null | LessonModuleMeta[]);\r\n    const [activeModule, setActiveModule] = useState(null as null | LessonModule);\r\n    // const [mode, setMode] = useState(`lesson` as 'lesson' | 'json');\r\n\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const reloadModules = async (stopIfObsolete: () => void) => {\r\n        const result = await apiClient.getLessonModules({});\r\n        stopIfObsolete();\r\n        setModules(result.data);\r\n    };\r\n    useEffect(() => {\r\n        doWork(async (stopIfObsolete) => {\r\n            await reloadModules(stopIfObsolete);\r\n        });\r\n    }, []);\r\n\r\n    const loadModule = (key: string) => {\r\n        doWork(async (stopIfObsolete) => {\r\n            const result = await apiClient.getLessonModule({ key });\r\n            stopIfObsolete();\r\n\r\n            setActiveModule(result.data);\r\n        });\r\n    };\r\n\r\n    const onChangeModule = (value: LessonModule) => {\r\n        setActiveModule(value);\r\n    };\r\n    const onSaveModule = () => {\r\n        if (!activeModule) { return; }\r\n        doWork(async (stopIfObsolete) => {\r\n            const r2 = await apiClient.setLessonModule({ value: activeModule });\r\n            stopIfObsolete();\r\n        });\r\n    };\r\n\r\n    const onAddModule = () => {\r\n        const newItem = createDefaultLessonModule();\r\n        setActiveModule(newItem);\r\n\r\n        doWork(async (stopIfObsolete) => {\r\n            const r2 = await apiClient.setLessonModule({ value: newItem });\r\n            stopIfObsolete();\r\n\r\n            await reloadModules(stopIfObsolete);\r\n        });\r\n    };\r\n    const onBuildModule = () => {\r\n        const key = activeModule?.key;\r\n        if (!key) { return; }\r\n\r\n        setActiveModule(null);\r\n        doWork(async (stopIfObsolete) => {\r\n            const r2 = await apiClient.buildLessonModule({ key });\r\n            stopIfObsolete();\r\n            await reloadModules(stopIfObsolete);\r\n        });\r\n    };\r\n    const onDeleteModule = () => {\r\n        const key = activeModule?.key;\r\n        if (!key) { return; }\r\n\r\n        setActiveModule(null);\r\n        doWork(async (stopIfObsolete) => {\r\n            const r2 = await apiClient.deleteLessonModule({ key });\r\n            stopIfObsolete();\r\n\r\n            await reloadModules(stopIfObsolete);\r\n        });\r\n    };\r\n\r\n    const setProjectState: SetProjectState = async (projectState: LessonProjectState) => {\r\n        await apiClient.setProjectState({ projectState });\r\n        return { iFrameUrl: `http://localhost:3043/?filesHashCode=${projectState.filesHashCode}` };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Loading loading={loading} />\r\n            <ErrorBox error={error} />\r\n            <View style={styles.container}>\r\n                <TabsComponent\r\n                    style={{ selectedTabText: { color: `#8888FF` } }}\r\n                    header='Mode'\r\n                    items={modes}\r\n                    getKey={x => x.value}\r\n                    getLabel={x => x.label}\r\n                    selected={modes.find(x => x.value === mode)}\r\n                    onSelect={x => setMode(x.value)}\r\n                />\r\n                {modules && (\r\n                    <TabsComponent\r\n                        style={{ selectedTabText: { color: `#88FF88` } }}\r\n                        header='Modules'\r\n                        items={modules}\r\n                        getKey={x => x.key}\r\n                        getLabel={x => x.title}\r\n                        selected={modules?.find(x => x.key === activeModule?.key)}\r\n                        onSelect={x => loadModule(x.key)}\r\n                        onAdd={mode === `edit` ? onAddModule : undefined}\r\n                    />\r\n                )}\r\n                {activeModule && mode === `edit` && (\r\n                    <>\r\n                        <View style={{ flexDirection: `row`, justifyContent: `flex-end` }}>\r\n                            <TouchableOpacity onPress={onSaveModule}>\r\n                                <View style={styles.buttonView}>\r\n                                    <Text style={styles.buttonText}>{`${`💾`} Save Module`}</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={onBuildModule}>\r\n                                <View style={styles.buttonView}>\r\n                                    <Text style={styles.buttonText}>{`${`🔨`} Build Module`}</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={onDeleteModule}>\r\n                                <View style={styles.buttonView}>\r\n                                    <Text style={styles.buttonText}>{`${`❌`} Delete Module`}</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <LessonModuleEditor key={activeModule.key} value={activeModule} onChange={onChangeModule} setProjectState={setProjectState} />\r\n                    </>\r\n                )}\r\n                {activeModule && mode === `play` && (\r\n                    <>\r\n                        <View style={{ borderStyle: `solid`, borderBottomWidth: 4, borderBottomColor: `#FFFFFF` }} />\r\n                        <LessonModulePlayer key={activeModule.key} module={activeModule} setProjectState={setProjectState} />\r\n                    </>\r\n                )}\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n"],"sourceRoot":""}