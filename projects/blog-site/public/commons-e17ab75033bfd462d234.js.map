{"version":3,"sources":["webpack:///D:/Projects/rick-love-master/code/utils/objects.ts","webpack:///D:/Projects/rick-love-master/code/upload-api/client/config.ts","webpack:///D:/Projects/rick-love-master/code/doodle/doodle-paths.ts","webpack:///D:/Projects/rick-love-master/code/doodle/doodle-storage.ts","webpack:///D:/Projects/rick-love-master/code/utils/random.ts","webpack:///D:/Projects/rick-love-master/code/controls-react/icon-kind.ts","webpack:///D:/Projects/rick-love-master/code/user-data-service/user-profile-selection-view.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/progress-games/emoji-idle-game/emoji-skills/emoji-skill-tree.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/progress-games/emoji-idle-game/emoji-idle-service.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/progress-games/emoji-idle-game/emoji-idle-view.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/progress-games/progress-game.tsx","webpack:///D:/Projects/rick-love-master/code/utils/email-address.ts","webpack:///D:/Projects/rick-love-master/code/utils/error.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/problems/problems-reviewer.ts","webpack:///D:/Projects/rick-love-master/code/websockets-api/client/config.ts","webpack:///D:/Projects/rick-love-master/code/react-native-lite/index.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/utils/voice-chooser.tsx","webpack:///D:/Projects/rick-love-master/code/doodle/keyboard-simplified.tsx","webpack:///D:/Projects/rick-love-master/code/doodle/doodle-components.tsx","webpack:///D:/Projects/rick-love-master/code/utils/subscribable.ts","webpack:///D:/Projects/rick-love-master/code/doodle/doodle.ts","webpack:///D:/Projects/rick-love-master/node_modules/@stripe/react-stripe-js/dist/react-stripe.umd.js","webpack:///D:/Projects/rick-love-master/code/utils/phone-number.ts","webpack:///D:/Projects/rick-love-master/node_modules/@stripe/stripe-js/dist/stripe.esm.js","webpack:///D:/Projects/rick-love-master/code/payments/common/process-steps.ts","webpack:///D:/Projects/rick-love-master/code/payments/common/types.ts","webpack:///D:/Projects/rick-love-master/code/payments/providers/stripe/common/stripe-process-steps.ts","webpack:///D:/Projects/rick-love-master/code/payments/providers/stripe/client/stripe-payment-react.tsx","webpack:///D:/Projects/rick-love-master/code/payments/providers/stripe/client/stripe-client-tokens.ts","webpack:///D:/Projects/rick-love-master/code/user-data-service/user-data-service.ts","webpack:///D:/Projects/rick-love-master/code/upload-api/client/web-client.ts","webpack:///D:/Projects/rick-love-master/code/upload-api/client/uploader.ts","webpack:///D:/Projects/rick-love-master/node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///D:/Projects/rick-love-master/node_modules/react-icons/lib/esm/iconContext.js","webpack:///D:/Projects/rick-love-master/node_modules/react-icons/lib/esm/iconBase.js","webpack:///D:/Projects/rick-love-master/code/games/educational-games/utils/speech.ts","webpack:///D:/Projects/rick-love-master/code/utils/json.ts","webpack:///D:/Projects/rick-love-master/code/controls-react/error-box.tsx","webpack:///D:/Projects/rick-love-master/code/controls-react/button.tsx","webpack:///D:/Projects/rick-love-master/code/controls-react/index.tsx","webpack:///D:/Projects/rick-love-master/code/controls-react/loading.tsx","webpack:///D:/Projects/rick-love-master/code/controls-react/inputs.tsx","webpack:///D:/Projects/rick-love-master/code/utils/delay.ts","webpack:///(webpack)/buildin/global.js","webpack:///D:/Projects/rick-love-master/code/controls-react/icon.tsx","webpack:///D:/Projects/rick-love-master/code/themes/theme.ts","webpack:///D:/Projects/rick-love-master/code/websockets-api/client/websocket-client.ts","webpack:///D:/Projects/rick-love-master/code/utils/arrays.ts","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/core-js/internals/flatten-into-array.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack:///D:/Projects/rick-love-master/code/user-data-service/user-profile-emojis.tsx","webpack:///D:/Projects/rick-love-master/code/user-data-service/user-profile-manager-view.tsx","webpack:///D:/Projects/rick-love-master/code/utils-react/hooks.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/problems/spelling/spelling-problem-service.ts","webpack:///D:/Projects/rick-love-master/code/doodle/doodle-view.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/components/game-pad-analog.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/utils/vectors.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/star-blast-sideways.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/problems/multiples.ts","webpack:///D:/Projects/rick-love-master/code/games/educational-games/components/leaderboard.tsx","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/construct.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack:///D:/Projects/rick-love-master/code/utils/web-request.ts","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/core-js/modules/es.array.flat-map.js","webpack:///D:/Projects/rick-love-master/code/games/educational-games/utils/subject-navigator.tsx","webpack:///D:/Projects/rick-love-master/code/games/educational-games/problems/problem-state-storage.ts","webpack:///D:/Projects/rick-love-master/code/games/console-simulator/utils.ts"],"names":["getValuesAsItems","obj","Object","keys","map","k","filter","x","toKeyValueObject","items","v","forEach","key","value","toMap","Map","toKeyValueArray","uploadApiConfig","uploadApiUrl","doodleStoragePaths","storageAccess","JSON","parse","localStorage","getItem","setItem","stringify","createDoodleDrawingStorageService","a","remoteDoodle","createSmartUploader","getUploadUrl","doodleUploadUrl","setUploadUrl","uploadUrlPrefix","remoteVotes","scoresUploadUrl","getSummaryData","uploadUrl","uploadApiWebClient","createUploadApiWebClient","createUploadUrl","serverUrl","getUrl","replace","relativePath","summaryUrl","console","log","downloadData","summaryDataRaw","summaryData","doodles","prompt","p","timestamp","t","drawing","decodeDoodleDrawing","d","score","s","memory","doodleScores","doodleVotes","load","voteTotals","doodleKey","service","saveDrawing","doodle","substr","Date","now","Math","floor","random","push","setTimeout","save","encodeDoodleDrawing","saveBestDrawingSelection","find","getDrawings","options","includeOtherPrompts","maxCount","allDoodles","distinct_key","samePromptDrawings","sort","b","otherPromptDrawings","allDrawings","randomItem","shuffle","slice","drawings","getAllDrawings","randomIndex","length","IconKind","styles","container","flexDirection","flexWrap","justifyContent","profileContainer","alignItems","profileCharacterView","width","height","borderWidth","borderStyle","borderColor","profileCharacterText","fontSize","textAlign","profileNameView","profileNameText","UserProfileSelectionView","props","useAutoLoadingError","doWork","loading","error","useState","userProfiles","setUserProfiles","isManagerVisible","setIsManagerVisible","reload","stopIfObsolete","UserDataService","get","setup","getUserProfiles","profiles","useEffect","onClose","style","onPress","setActiveUser","onUserSelected","emoji","name","buildEmojiSkillTree","maleSkillDoc","child_male","student_male","skillDoc","femaleSkillDoc","child_female","student_female","getFemaleVariant","maleNodes","parseSkillDoc","femaleNodes","babyNode","babyEmoji","gender","pay","requirementEmojis","startEmoji","parent","children","allNodes","root","child","allRequirements","parseRequirementsDoc","requirementsDoc","node","allCosts","r","cost","summary","join","totalCost","reduce","out","debug_totalRequirementsCost","doc","split","trim","line","parts","Number","parseInt","parseSkillLine","skillLine","payText","p1","end","RegExp","genderCharCodes","male","female","man","woman","String","fromCodePoint","storage","createService","skillTree","reqMap","defaultState","characterEmoji","emotion","lastEmotionTimestamp","money","multiplier","lastMultiplierChangeTimestamp","lastPurchaseTimestamp","townState","characters","sub","createSubscribable","changeState","partialState","onStateChange","rewardInner","min","setInterval","targetEmoji","targetOptions","skillNode","remainingSkills","c","targetSkillNode","reqs","reqs_remaining","requirementsPurchased","includes","reqs_available","requirementsAvailable","requirementsNeeded","requirementsRemaining","undefined","subscribePetStateChange","subscribe","reward","reward_major","reward_extreme","punish","max","selectOption","finishedTimestamp","serviceState","instance","EmojiIdleService","fixed","position","top","right","left","zIndex","inner","emotionEmoji","fontFamily","characterEmoji_small","costText","color","costText_small","targetCharacterEmoji","objectEmoji","marginLeft","money_small","foodText","EmojiIdleView","gameState","setGameState","isExpanded","setIsExpanded","unsubscribe","purchased","townStyles","background","payText_disabled","moneyText","townMoneyText","TownView","townPersons","character","skill","n","years","missingSkills","townMoney","flex","padding","toLocaleString","toFixed","opacity","CommandsView","offset","setOffset","targetOptionsLength","i","canBuy","borderRadius","paddingLeft","paddingRight","ScoreView","moneySizeOffset","setMoneySizeOffset","multiplierSizeOffset","setMultiplierSizeOffset","lastMultiplier","useRef","multiplierDelta","setMultiplierDelta","update","clearInterval","id","current","transform","padStart","EmojiCharacterView","PurchasedView","EmotionView","text","isEmotion","display","setDisplay","showEmotion","variant","getEmoji","ProgressGameService","onCorrect","onCompleteSection","onCompleteSubject","onWrong","createProgressGameProblemService","problemSource","recordAnswer","problem","answer","isCorrect","isReview","isLastOfSubject","uploadUserData","isLastOfSection","ProgressGameView","hasSelectedProfile","setHasSelectedProfile","userProfile","setUserProfile","getActiveUser","lastPurchase","Platform","OS","window","location","toEmailAddress","email","AppError","message","data","Error","ApiError","createReviewProblemService","maxNewReviewCount","reviewSequencePreviousLength","reviewQuestionPrefix","requiredCorrectInRow","state","problemSourceHistory","reviewProblems","lastReviewProblem","reviewSequence","repeatState","startReview","getSections","gotoSection","getNextProblem","reviewProblem","rSeq","iNext","iEnd","index","lastReviewProblemIndex","iStart","seq","question","answers","getReviewProblem","correctsInRow","newProblem","findIndex","problemAlreadyInReview","newReview","_debug_problemKey","websocketsApiConfig","websocketsApiUrl","mergeStyles","Array","isArray","item","viewStyleDefaults","textStyleDefaults","whiteSpace","finalizeTextStyle","userSelect","MozUserSelect","WebkitUserSelect","View","Text","numberOfLines","allStyles","overflow","wordWrap","textOverflow","TextInput","type","keyboardType","secureTextEntry","autoCompleteType","onKeyPress","onSubmitEditing","e","shiftKey","preventDefault","placeholder","disabled","editable","onFocus","onChange","target","onBlur","TouchableOpacity","lastPressTime","hasTouchStarted","onClick","onTouchStart","onTouchMove","onTouchEnd","role","tabIndex","Pressable","onIgnore","stopPropagation","cancelBubble","returnValue","onPressIn","onPressOut","onMouseDown","onMouseUp","onTouchCancel","onMouseLeave","onTouchEndCapture","ActivityIndicator","size","sizePx","CircleSvg","thickness","dashLength","PI","maxWidth","viewBox","xmlns","fill","stroke","strokeWidth","cx","cy","className","strokeDasharray","transformOrigin","Clipboard","setString","navigator","clipboard","writeText","VoiceChooser","languange","speechService","setLoading","setRenderId","refresh","getVoicesForLanguange","voice","setVoiceForLanguange","speak","margin","isSelected","lang","localService","englishKeyboard","rows","rowView","keyView","backgroundColor","keyView_disabled","keyText","keyText_wrong","KeyboardSimplified","expectedCharacter","showHints","onExpectedKeyPress","keyboard","hintKeys","setHintKeys","wrongKeys","setWrongKeys","hints","flatMap","row","iRow","outline","drawingChoicesView","drawingChoiceWrapper","drawingChoice","titleView","titleText","promptView","promptText","hintText","buttonRowView","buttonView","buttonText","DoodleGameView_DrawWord","defaultDoodleDrawing","setDrawing","hint","onSkip","onDone","DoodleGameView_ChooseBest","onChooseBest","typeStyles","completedText","DoodleGameView_TypeExpected","completed","remaining","status","setStatus","sayAgain","nextChar","initialState","lastState","callbacks","callback","segments","encodeDoodleSegmentPoints","points","last","y","decodeDoodleSegmentPoints","pointsString","point","o","w","h","doodleText","doodleSegmentToSvgPath_line","segment","exports","React","_typeof","Symbol","iterator","constructor","prototype","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","_slicedToArray","arr","_arrayWithHoles","toString","_arr","_n","_d","_e","_s","_i","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","emptyFunction","emptyFunctionWithReset","hasOwnProperty","resetWarningCache","propTypes","fn","module","createCommonjsModule","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","factoryWithThrowingShims","isUnknownObject","raw","isEqual","leftArray","leftPlainObject","leftKeys","rightKeys","keySet","allKeys","l","every","usePrevious","ref","validateStripe","maybeStripe","elements","createToken","createPaymentMethod","confirmCardPayment","parseStripeProp","then","isPromise","tag","stripePromise","Promise","resolve","stripe","ElementsContext","createContext","displayName","useElementsContextWithUseCase","useCaseMessage","ctx","useCase","concat","parseElementsContext","useContext","ElementsConsumer","_ref2","useCallbackReference","cb","apply","arguments","extractUpdateableOptions","paymentRequest","noop","createElementComponent","isServer","str","charAt","toUpperCase","Element","createElement","_ref","_ref$options","_ref$onBlur","_ref$onFocus","_ref$onReady","onReady","_ref$onChange","_ref$onEscape","onEscape","_ref$onClick","elementRef","domNode","callOnReady","callOnBlur","callOnFocus","callOnClick","callOnChange","callOnEscape","useLayoutEffect","create","mount","on","prevOptions","warn","updateableOptions","destroy","__elementType","AuBankAccountElement","CardElement","CardNumberElement","CardExpiryElement","CardCvcElement","FpxBankElement","IbanElement","IdealBankElement","PaymentRequestButtonElement","Elements","rawStripeProp","_final","isMounted","parsed","useMemo","_React$useState2","setContext","prevStripe","anyStripe","_registerWrapper","version","Provider","useElements","useStripe","defineProperty","factory","formatPhoneNumber_UsaCanada","phoneNumberMask_UsaCanada","corrected","toStandardPhoneNumber","digitsNo1","digits","letters","iDigit","iLast","full","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","V3_URL","V3_URL_REGEX","EXISTING_SCRIPT_MESSAGE","loadScript","params","reject","Stripe","script","scripts","document","querySelectorAll","test","src","findScript","queryString","advancedFraudSignals","headOrBody","head","body","appendChild","injectScript","addEventListener","initStripe","args","registerWrapper","stripePromise$1","loadCalled","ProcessSteps_CreateSavedPaymentMethod","PaymentError","ProcessSteps_CreateSavedPaymentMethod_Stripe","_02_Server_SetupSavedPaymentMethod","_03_Client_CollectPaymentDetails","_04_Server_ObtainPaymentMethod","logProcessStep_CreateSavedPaymentMethod_Stripe","step","wrapProcessStep_CreateSavedPaymentMethod_Stripe","execute","result","createPaymentClientComponents_stripe","_len","_key","loadStripe","stripePublicKey","AppWrapperComponent","PaymentMethodEntryComponent","paymentMethodSetupToken","onPaymentMethodReady","stripeError","setStripeError","handleSubmit","event","_03A_Client_CollectPaymentDetails","setupInfo","stripeDecodeClientSetupToken","confirmCardSetup","clientSecret","payment_method","card","getElement","billing_details","customerBillingDetails","setupIntent","stripeEncodeClientToken","inputStyle","base","textColor","fontSmoothing","invalid","textColor_invalid","iconColor","inputContainerStyle","marginBottom","elementPadding","textPadding","buttonStyle","fontWeight","buttonJustifyContent","buttonAlignment","errorContainerStyle","errorMessageStyle","onSubmit","stripeEncodeClientSetupToken","uploadApi","getUserProfile","getActiveUserProfile","uploadBackup","uploadWithAutoRenew","updateUserProfileFromServer","updateAllProfilesFromServer","isSetupStarted","isSetupDone","getUserDataServiceState","setUserDataServiceState","getUserData","userState","activeUserProfileKey","metadata","startsWith","clearUserData","removeItem","lastUploadTimestamp","setUserData","userData","val","userProfileKey","prefix","uploader","createUploader","uploadData","upload","renewUploadUrl","newUploarUrl","delay","doSetup","newUploadUrlResult","newState","changeTimestamp","user","isActive","stateJson","downloadUserDataIfNewer","setUserProfileInfo","info","uData","createShareCode","shareablePath","shareUrlResult","shareCode","addUserFromShareCode","shareGetUrl","sharedUploadUrl","putUrl","userKey","config","apiRequest","endpoint","url","requestData","webRequest","resultObj","fetchWithTimeout","method","headers","json","ok","_uploadUrl","setupUploadUrl","backupUrl","backupUploader","DefaultContext","attr","IconContext","__assign","assign","this","__rest","GenIcon","IconBase","Tree2Element","tree","elem","conf","computedSize","title","svgProps","Consumer","createSpeechService","synth","speechSynthesis","selectedVoices","voiceLang","u","SpeechSynthesisUtterance","voices","getVoices","language","jsonStringify_safe","shouldFormat","visited","_","errorBoxStyle","view","theme","view_error","text_error","text_errorMessage","icon","icon_errorMessage","button","outlineColor","colors","ErrorBox_Inner","expanded","setExpanded","errorAsString","errorMessage","errorDetails","errorObjText","canExpand","kind","collapsed","copy","retryCallback","retry","Button","styleAlt","button_formAction_alt","button_formAction","extractViewStyle","extractTextStyle","C","Loading","loader","LoadingInline","ErrorBox","ErrorMessage","View_Panel","view_panel","View_Form","view_form","View_FormFields","view_formFields","View_FieldRow","view_fieldRow","View_FormActionRow","view_formActionRow","Text_FormTitle","text_formTitle","Text_FieldLabel","text_fieldLabel","Button_FieldInline","button_fieldInline_alt","button_fieldInline","Button_FormAction","Input_Text","input_fieldEntry","Input_Username","Input_Password","showPassword","setShowPassword","marginRight","eye","eyeSlash","Input_Phone","valueActual","setValueActual","Input_Email","Input_Currency","parseFloat","timeout","g","Function","Icon","menu","component","MdMenu","back","MdArrowBack","MdErrorOutline","FiChevronDown","FiChevronRight","MdContentCopy","FaRedo","dashboard","MdDashboard","add","FaPlus","remove","FaMinus","FaEye","FaEyeSlash","checkChecked","FaCheckSquare","checkUnchecked","FaSquare","MdCheckBoxOutlineBlank","getIcon","IconComponent","sizes","marginTop","paddingTop","paddingBottom","minWidth","lineHeight","basicThemeColors","text_header","text_button","border","border_minor","border_input","background_field","background_button","background_error","getBorderSizes","all","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","bottom","basicThemeSizes","borderWidth_minor","borderWidth_input","sectionGap","elementGap","rowGap","rowPadding","fontSize_input","fontSize_button","fontSize_header","minWidth_label","minWidth_input","minWidth_button","basicFont","fontWeight_normal","fontWeight_button","fontWeight_header","createTheme","font","borderProps","borderProps_minor","borderProps_input","sTextView","createWebsocketClient","connect","subscribable","subscribableEvents","createSocket","socket","WebSocket","activeSocket","connectionStatus","messageContainer","send","close","reconnect","m","readyState","OPEN","isConnected","subscribeMessages","subscribeConnectionEvents","moveItem","to","splice","distinct","set","Set","getKey","groupItems","groups","sameArrayContents","toLength","bind","flattenIntoArray","original","sourceLen","start","depth","mapper","thisArg","targetIndex","sourceIndex","mapFn","addToUnscopables","userProfileChracters","UserProfileManagerView","onActiveUserChange","onUserProfileChange","onUserAdded","AddUserProfileView","setShareCode","UserProfileView","setCharacters","onNameChange","UserProfileName","setName","isEditingName","setIsEditingName","changeName","mounted","useMounted","loadingError","setLoadingError","doWorkInner","getContext","contextInit","doCall","createSpellingProblemService","maxAnswers","sectionSize","speech","spellingEntries","getSpellingEntries","sectionCount","ceil","nextIndex","completedSectionKeys","getSectionKey","sectionIndex","loaded","isComplete","correctValue","word","wrongAnswerCount","wrongValues","mispellings","onQuestion","sectionKey","DoodleTestView","setDoodle","DoodleDrawerView","DoodleDisplayView","scale","setSegment","segmentClientStart","divHost","nativeEvent","pos","div","rect","getBoundingClientRect","clientX","clientY","onClientMove","lastPos","abs","onMove","onIgnoreNative","passive","removeEventListener","preserveAspectRatio","onMouseMove","touches","redrawId","setRedrawId","enableRedraw","DoodleDisplayView_Inner","shouldAnimate","animatePointsPerSecond","tick","setTick","totalPoints","remainingPoints","MAX_SAFE_INTEGER","maxPoints","DoodleBrowser","setDoodles","DoodleBrowseView","grouped","GamepadAnalogStateful","moveDirection","buttons","isDown","onPressStateChange","onMovePressIn","dir","onMovePressOut","inputStyles","alignSelf","section","moveSectionWrapper","moveSectionRotation","cellTouch","cellView","pointerEvents","cellText","moveCellText","cellEmptyView","cellTextOcclusionView","GamepadAnalog","cellViewStyle","onKeyDown","onKeyUp","DirectionButton","direction","ActionButton","Fragment","getDistanceSq","EducationalGame_StarBlastSideways_Multiples","problemService","createAutoSavedProblemService","bVal","round","EducationalGame_StarBlastSideways","EducationalGame_StarBlastSideways_Inner","paused","pauseState","setPauseState","pressState","setPressState","problemSourceKey","setProblemSourceKey","gamepad","onOpen","onSubjectNavigation","viewscreen","gameStyles","directAnswerButtonContainer","directAnswerButton","directAnswerButton_hidden","viewscreenView","sprite","viewSize","fontSize_small","gameOver","GameView","getDefaultGameState","lastActualTimeMs","lastGameTime","gameSpeed","lives","getGameTime","actualTimePassed","gameTime","gameTimePassed","playerPositionState","rotation","projectilesState","lastShotActualTime","shots","debris","enemiesState","enemies","problemsState","restartGame","e2","gotoNextProblem","pSize","newProblemState","problemTime","isAnsweredWrong","newEnemyState","ans","enemy","vel","onHit","ignore","destroyed","gameLastTime","requestAnimationFrame","gameLoop","gameDeltaTime","getCommonState","playerPosition","onLoseLife","deadTime","gameOverTime","gameResult","updateGame","playerResult","updatePlayer","projectilesResult","updateProjectiles","enemiesResult","updateEnemies","timeSinceProblem","hasHitGround","explodeTime","weaponsLock","lockedEnemy","lockedAtPlayerPosition","playerTargetPosition","directAnswer","dirPress","targetPos","sign","targetRotation","gw","gh","playerPos","didShoot","destoyed","pad","hPad","shift","newShots","radius","radiusSq","radiusSq_enemies","i2","swap","radiusSq_player","wPad","closestEnemyToPlayer","newEnemies","Sprite","offsetX","offsetY","getSpriteEmoji","stylePosition","styleRotation","TextPositioned","createLeaderboard","leaderboard","saveScore","loadScore","sortKey","storageKey","sortDescending","leaderboardInputStyles","textInput","LeaderboardNameInput","leaderboardStyles","scoreView","nameText","scoreText","LeaderboardViewInner","scoreColumns","scores","getValue","useLeaderboard","getScore","leaderboardScores","setLeaderboardScores","LeaderboardArea","onScoreSaved","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Parent","Class","_cache","has","Wrapper","enumerable","writable","configurable","race","fetch","reqData","catch","responseStatus","request","$","toObject","aFunction","arraySpeciesCreate","proto","callbackfn","A","O","subjectStyles","header","SubjectNavigator","scrollTo","createProblemStateStorage","randomBinary","fromCharCode"],"mappings":"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","file":"commons-e17ab75033bfd462d234.js","sourcesContent":["export const getValuesAsItems = <T>(obj: T) => {\r\n    return Object.keys(obj).map(k => k as keyof typeof obj).map(k => obj[k]).filter(x => x);\r\n};\r\n\r\nexport const toKeyValueObject = <T>(items: { key: string, value: T }[]): { [key: string]: T } => {\r\n    const v = {} as { [key: string]: T };\r\n    items.forEach(x => { v[x.key] = x.value; });\r\n    return v;\r\n};\r\n\r\nexport const toMap = <T>(items: { key: string, value: T }[]): Map<string, T> => {\r\n    const v = new Map(items.map(x => [x.key, x.value]));\r\n    return v;\r\n};\r\n\r\nexport const toKeyValueArray = <T>(obj: { [key: string]: T }): { key: string, value: T }[] => {\r\n    return Object.keys(obj).map(k => k as keyof typeof obj).map(k => ({ key: k as string, value: obj[k] }));\r\n};\r\n","export const uploadApiConfig = {\r\n    uploadApiUrl: `https://s7mrgkmtk5.execute-api.us-east-1.amazonaws.com/prod/upload-api`,\r\n};\r\n","export const doodleStoragePaths = {\r\n    doodleSummary: `doodle/summary`,\r\n    doodleDrawingsPrefix: `doodle/drawings`,\r\n    doodleVotesPrefix: `doodle/votes`,\r\n} as const;\r\n","import { randomItem } from 'utils/random';\r\nimport { shuffle, distinct_key } from 'utils/arrays';\r\nimport { UploadUrl } from 'upload-api/client/types';\r\nimport { uploadApiConfig } from 'upload-api/client/config';\r\nimport { createSmartUploader, downloadData } from 'upload-api/client/uploader';\r\nimport { toKeyValueArray } from 'utils/objects';\r\nimport { createUploadApiWebClient } from 'upload-api/client/web-client';\r\nimport { DoodleDrawingStorageService, DoodleData, decodeDoodleDrawing, encodeDoodleDrawing, DoodleScoreVote, DoodleScore, DoodleUserDrawingDataJson, DoodleUserVotesDataJson, DoodleSummaryDataJson } from './doodle';\r\nimport { doodleStoragePaths } from './doodle-paths';\r\n\r\ntype DoodleStorageData = {\r\n    doodleUploadUrl?: UploadUrl;\r\n    scoresUploadUrl?: UploadUrl;\r\n};\r\n\r\nconst storageAccess = {\r\n    load: (): null | DoodleStorageData => {\r\n        try {\r\n            return JSON.parse(localStorage.getItem(`doodleStorage.v2`) ?? `NULL!{}`);\r\n        } catch{ return null; }\r\n    },\r\n    save: (value: DoodleStorageData) => {\r\n        localStorage.setItem(`doodleStorage.v2`, JSON.stringify(value));\r\n    },\r\n};\r\n\r\n\r\nexport const createDoodleDrawingStorageService = async () => {\r\n\r\n    const remoteDoodle = createSmartUploader<DoodleUserDrawingDataJson>({\r\n        getUploadUrl: async () => storageAccess.load()?.doodleUploadUrl ?? null,\r\n        setUploadUrl: async (x) => storageAccess.save({ ...(storageAccess.load() ?? {}), doodleUploadUrl: x }),\r\n        uploadApiUrl: uploadApiConfig.uploadApiUrl,\r\n        uploadUrlPrefix: doodleStoragePaths.doodleDrawingsPrefix,\r\n    });\r\n    const remoteVotes = createSmartUploader<DoodleUserVotesDataJson>({\r\n        getUploadUrl: async () => storageAccess.load()?.scoresUploadUrl ?? null,\r\n        setUploadUrl: async (x) => storageAccess.save({ ...(storageAccess.load() ?? {}), scoresUploadUrl: x }),\r\n        uploadApiUrl: uploadApiConfig.uploadApiUrl,\r\n        uploadUrlPrefix: doodleStoragePaths.doodleVotesPrefix,\r\n    });\r\n\r\n    const getSummaryData = async () => {\r\n        try {\r\n            let uploadUrl = storageAccess.load()?.doodleUploadUrl;\r\n\r\n            if (!uploadUrl) {\r\n                const uploadApiWebClient = createUploadApiWebClient(uploadApiConfig);\r\n                uploadUrl = (await uploadApiWebClient.createUploadUrl({})).uploadUrl;\r\n            }\r\n\r\n            const serverUrl = uploadUrl?.getUrl.replace(uploadUrl.relativePath, ``);\r\n            const summaryUrl = `${serverUrl}${doodleStoragePaths.doodleSummary}`;\r\n            console.log(`getSummaryData`, { uploadUrl, serverUrl, summaryUrl });\r\n\r\n            const summaryDataRaw = await downloadData(summaryUrl) as DoodleSummaryDataJson;\r\n            const summaryData = {\r\n                doodles: summaryDataRaw.doodles.map(x => ({\r\n                    key: x.k,\r\n                    prompt: x.p,\r\n                    timestamp: x.t,\r\n                    drawing: decodeDoodleDrawing(x.d),\r\n                    score: x.s,\r\n                })),\r\n            };\r\n            return summaryData;\r\n        } catch{\r\n            return { doodles: [] };\r\n        }\r\n    };\r\n    const summaryData = await getSummaryData();\r\n\r\n    const memory = {\r\n        doodles: [] as DoodleData[],\r\n        doodleScores: [] as DoodleScore[],\r\n        doodleVotes: [] as DoodleScoreVote[],\r\n    };\r\n\r\n\r\n    // Load from server\r\n    memory.doodles = (await remoteDoodle.load())?.doodles.map(x => ({\r\n        key: x.k,\r\n        prompt: x.p,\r\n        timestamp: x.t,\r\n        drawing: x.d ? decodeDoodleDrawing(x.d) : (x as unknown as DoodleData).drawing,\r\n    })) ?? [];\r\n    memory.doodleVotes = (await remoteVotes.load())?.doodleVotes ?? [];\r\n\r\n    const voteTotals = {} as { [key: string]: number };\r\n    // memory.doodleVotes.forEach(x => { voteTotals[x.k] = (voteTotals[x.k] ?? 0) + 1; });\r\n    summaryData.doodles.forEach(x => { voteTotals[x.key] = (voteTotals[x.key] ?? 0) + x.score; });\r\n    memory.doodleScores = toKeyValueArray(voteTotals).map(x => ({\r\n        doodleKey: x.key,\r\n        score: x.value,\r\n    }));\r\n\r\n    const service: DoodleDrawingStorageService = {\r\n        saveDrawing: async (prompt, drawing) => {\r\n            const doodle = { key: `${prompt.substr(0, 8)}:${Date.now()}:${Math.floor(Math.random() * 999999)}`, drawing, prompt, timestamp: Date.now() };\r\n            memory.doodles.push(doodle);\r\n\r\n            // Save to server\r\n            setTimeout(async () => {\r\n                await remoteDoodle.save({\r\n                    doodles: memory.doodles.map(x => ({\r\n                        k: x.key,\r\n                        p: x.prompt,\r\n                        t: x.timestamp,\r\n                        d: encodeDoodleDrawing(x.drawing),\r\n                    })),\r\n                });\r\n            });\r\n        },\r\n        saveBestDrawingSelection: async (doodle) => {\r\n            memory.doodleVotes.push({\r\n                k: doodle.key,\r\n                t: Date.now(),\r\n            });\r\n\r\n            let d = memory.doodleScores.find(x => x.doodleKey === doodle.key);\r\n            if (!d) {\r\n                d = {\r\n                    doodleKey: doodle.key,\r\n                    score: 0,\r\n                };\r\n                memory.doodleScores.push(d);\r\n            }\r\n            d.score = (d.score ?? 0) + 1;\r\n\r\n            // Save to server\r\n            setTimeout(async () => {\r\n                await remoteVotes.save({\r\n                    doodleVotes: memory.doodleVotes,\r\n                });\r\n            });\r\n        },\r\n        getDrawings: async (prompt, options) => {\r\n            const {\r\n                includeOtherPrompts = false,\r\n                maxCount = 4,\r\n            } = options ?? {};\r\n\r\n            const allDoodles = distinct_key([...summaryData.doodles, ...memory.doodles.map(x => ({ ...x, score: memory.doodleScores.find(s => s.doodleKey === x.key)?.score ?? 0 }))], x => x.key);\r\n\r\n            const samePromptDrawings = allDoodles.filter(x => x.prompt === prompt).sort((a, b) => -(a.score - b.score));\r\n            console.log(`getDrawings`, { samePromptDrawings });\r\n\r\n            const otherPromptDrawings = includeOtherPrompts ? allDoodles.filter(x => x.prompt !== prompt) : [];\r\n            const allDrawings =\r\n                includeOtherPrompts ? [randomItem(samePromptDrawings), ...shuffle(otherPromptDrawings).slice(0, maxCount - 1)]\r\n                    : samePromptDrawings;\r\n            const drawings = shuffle(allDrawings).slice(0, maxCount);\r\n            return { doodles: drawings };\r\n        },\r\n        getAllDrawings: async () => {\r\n            const allDoodles = distinct_key([...summaryData.doodles, ...memory.doodles.map(x => ({ ...x, score: memory.doodleScores.find(s => s.doodleKey === x.key)?.score ?? 0 }))], x => x.key);\r\n            return { doodles: allDoodles };\r\n        },\r\n    };\r\n\r\n    return service;\r\n};\r\n","export const randomIndex = (length: number) => {\r\n    const x = Math.floor(length * Math.random());\r\n    return x >= length ? length - 1 : x;\r\n};\r\nexport const randomItem = <T>(items: T[]) => items[randomIndex(items.length)];\r\n","\r\nexport enum IconKind {\r\n    // common icons\r\n    menu,\r\n    back,\r\n    error,\r\n    expanded,\r\n    collapsed,\r\n    copy,\r\n    retry,\r\n    dashboard,\r\n    add,\r\n    remove,\r\n    eye,\r\n    eyeSlash,\r\n\r\n    checkChecked,\r\n    checkUnchecked,\r\n\r\n    // navigation icons\r\n    account,\r\n    message,\r\n    subscription,\r\n    calendar,\r\n    contacts,\r\n    keys,\r\n    resources,\r\n    admin,\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { useAutoLoadingError } from 'utils-react/hooks';\r\nimport { UserDataService, UserProfileInfo } from './user-data-service';\r\nimport { UserProfileManagerView } from './user-profile-manager-view';\r\n\r\nconst styles = {\r\n    container: {\r\n        flexDirection: `row`,\r\n        flexWrap: `wrap`,\r\n        justifyContent: `space-around`,\r\n    },\r\n    profileContainer: {\r\n        flexDirection: `column`,\r\n        alignItems: `center`,\r\n    },\r\n    profileCharacterView: {\r\n        width: 80,\r\n        height: 80,\r\n        borderWidth: 1,\r\n        borderStyle: `solid`,\r\n        borderColor: `#888888`,\r\n    },\r\n    profileCharacterText: {\r\n        fontSize: 48,\r\n        textAlign: `center`,\r\n    },\r\n    profileNameView: {\r\n    },\r\n    profileNameText: {\r\n\r\n    },\r\n} as const;\r\n\r\nexport const UserProfileSelectionView = (props: { onUserSelected: () => void }) => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [userProfiles, setUserProfiles] = useState(null as null | UserProfileInfo[]);\r\n    const [isManagerVisible, setIsManagerVisible] = useState(false);\r\n\r\n    const reload = () => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setup();\r\n        stopIfObsolete();\r\n\r\n        const profiles = await UserDataService.get().getUserProfiles();\r\n        setUserProfiles(profiles);\r\n    });\r\n\r\n    const selectUser = (key: string) => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setActiveUser(key);\r\n        props.onUserSelected();\r\n    });\r\n\r\n    const onEditProfiles = () => {\r\n        setIsManagerVisible(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        reload();\r\n    }, []);\r\n\r\n    if (!userProfiles) {\r\n        return (<></>);\r\n    }\r\n\r\n    if (isManagerVisible) {\r\n        return <UserProfileManagerView onClose={() => { setIsManagerVisible(false); reload(); }} />;\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {userProfiles.map(x => (\r\n                <TouchableOpacity key={x.key} onPress={() => selectUser(x.key)}>\r\n                    <View style={styles.profileContainer}>\r\n                        <View style={styles.profileCharacterView}>\r\n                            <Text style={styles.profileCharacterText}>{x.emoji ?? `👤`}</Text>\r\n                        </View>\r\n                        <View style={styles.profileNameView}>\r\n                            <Text style={styles.profileNameText}>{x.name}</Text>\r\n                        </View>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            ))}\r\n            <TouchableOpacity onPress={onEditProfiles}>\r\n                <View style={styles.profileContainer}>\r\n                    <View style={styles.profileCharacterView}>\r\n                        <Text style={styles.profileCharacterText}>{` 👤 `}</Text>\r\n                    </View>\r\n                    <View style={styles.profileNameView}>\r\n                        <Text style={styles.profileNameText}>Edit</Text>\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n","export type EmojiSkillNode = {\r\n    emoji: string;\r\n    name: string;\r\n    gender: `baby` | `male` | `female`;\r\n    pay: number;\r\n    startEmoji: null | string;\r\n    requirementEmojis: string[];\r\n    debug_totalRequirementsCost?: string;\r\n\r\n    parent: null | EmojiSkillNode;\r\n    children: EmojiSkillNode[];\r\n};\r\nexport type EmojiSkillRequirement = {\r\n    emoji: string;\r\n    cost: number;\r\n};\r\nexport type EmojiSkillTree = {\r\n    allNodes: EmojiSkillNode[];\r\n    allRequirements: EmojiSkillRequirement[];\r\n    root: EmojiSkillNode;\r\n};\r\n\r\n\r\nexport const buildEmojiSkillTree = (): EmojiSkillTree => {\r\n    const maleSkillDoc = `${child_male}\\n${student_male}\\n${skillDoc}`;\r\n    const femaleSkillDoc = `${child_female}\\n${student_female}\\n\\n${getFemaleVariant(skillDoc)}`;\r\n    const maleNodes = parseSkillDoc(maleSkillDoc, `male`);\r\n    const femaleNodes = parseSkillDoc(femaleSkillDoc, `female`);\r\n    const babyNode: EmojiSkillNode = {\r\n        emoji: babyEmoji,\r\n        name: `baby`,\r\n        gender: `baby`,\r\n        pay: 0,\r\n        requirementEmojis: [],\r\n        startEmoji: null,\r\n        parent: null,\r\n        children: [],\r\n    };\r\n    const allNodes = [babyNode, ...maleNodes, ...femaleNodes];\r\n    const root = babyNode;\r\n\r\n    allNodes.forEach(child => {\r\n        const parent = allNodes.find(x => child.startEmoji === x.emoji);\r\n        if (!parent) { return; }\r\n\r\n        parent.children.push(child);\r\n        child.parent = parent;\r\n    });\r\n\r\n    const allRequirements = parseRequirementsDoc(requirementsDoc);\r\n\r\n    allNodes.forEach(node => {\r\n        const allCosts = node.requirementEmojis\r\n            .map(r => allRequirements.find(x => x.emoji === r) ?? { emoji: r, cost: 0 });\r\n\r\n        const summary = allCosts\r\n            .map(x => `${x.emoji} = ${x.cost}`)\r\n            .join(`\\n`);\r\n\r\n        // eslint-disable-next-line unicorn/no-reduce\r\n        const totalCost = allCosts.reduce((out, x) => { out += x.cost; return out; }, 0);\r\n        node.debug_totalRequirementsCost = `${totalCost} =\\n${summary}`;\r\n    });\r\n\r\n    const tree: EmojiSkillTree = {\r\n        allNodes,\r\n        root,\r\n        allRequirements,\r\n    };\r\n\r\n    // const allRequirements = distinct(allNodes.flatMap(x => x.requirementEmojis));\r\n    // const allRequirementsDoc = allRequirements.map(x => `${x} = 0`).join(`\\n`);\r\n\r\n    // console.log(`buildSkillTree`, { tree, maleSkillDoc, femaleSkillDoc });\r\n    return tree;\r\n};\r\n// setTimeout(buildEmojiSkillTree);\r\n\r\nconst parseRequirementsDoc = (doc: string) => {\r\n    const lines = doc.split(`\\n`).map(x => x.trim()).filter(x => x);\r\n    const nodes = lines.map(line => {\r\n        const parts = line.split(`=`).map(x => x.trim()).filter(x => x);\r\n        const r: EmojiSkillRequirement = {\r\n            emoji: parts[0],\r\n            cost: Number.parseInt(parts[1], 10),\r\n        };\r\n        return r;\r\n    });\r\n    return nodes;\r\n};\r\n\r\nconst parseSkillDoc = (doc: string, gender: 'male' | 'female') => {\r\n    const lines = doc.split(`\\n`).map(x => x.trim()).filter(x => x);\r\n    const nodes = lines.map(x => parseSkillLine(x, gender));\r\n    return nodes;\r\n};\r\n\r\nconst parseSkillLine = (skillLine: string, gender: 'male' | 'female'): EmojiSkillNode => {\r\n    const [name, payText, p1] = skillLine.split(`:`).map(x => x.trim());\r\n    const pay = Number.parseInt(payText, 10);\r\n    const [end, p2] = p1.split(`=`).map(x => x.trim());\r\n    const [start, requirementsStr] = p2.split(`+`).map(x => x.trim());\r\n    const requirements = requirementsStr.split(` `).map(x => x.trim()).filter(x => x);\r\n    return { name, pay, emoji: end, startEmoji: start, requirementEmojis: requirements, children: [], parent: null, gender };\r\n};\r\n\r\nconst getFemaleVariant = (emoji: string) => {\r\n    return emoji\r\n        .replace(new RegExp(genderCharCodes.male, `g`), genderCharCodes.female)\r\n        .replace(new RegExp(genderCharCodes.man, `g`), genderCharCodes.woman);\r\n};\r\n\r\nconst genderCharCodes = {\r\n    man: String.fromCodePoint(0x1F468),\r\n    woman: String.fromCodePoint(0x1F469),\r\n    male: String.fromCodePoint(0x1F469),\r\n    female: String.fromCodePoint(0x1F469),\r\n};\r\n\r\nconst babyEmoji = `👶`;\r\nconst child_male = `boy               : 0 : 👦 = 👶 + 🍼 🧸 👕 👖 🧦 🩲 👟 📖 🪁 🚲 🎮`;\r\nconst child_female = `girl            : 0 : 👧 = 👶 + 🍼 🧸 👚 👗 🩰 🩱 🥿 📖 🪁 🚲 🎮`;\r\nconst student_male = `  student_boy   : 0 : 👨‍🎓 = 👦 + 🍕 ✏️ 📓 📚 ⏰ 📱 💻 🚗 🧳 🎓`;\r\nconst student_female = `student_girl  : 0 : 👩‍🎓 = 👧 + 🍕 ✏️ 📓 📚 ⏰ 📱 💻 🚗 🧳 🎓`;\r\n\r\nconst skillDoc = `\r\nfactory_worker      :   20000 : 👨‍🏭 = 👨‍🎓 + 🧤 🥾 🔧 ⏲ 📋 🚗              \r\nmechanic            :   30000 : 👨‍🔧 = 👨‍🎓 + 🧤 🥾 🧰 🔧 🔩 🚚         \r\nconstruction_worker :   75000 : 👷‍♂️ = 👨‍🎓 + 🦺 🥾 🧰 🔧 🔨 ⚒ 🧱 🧨 🚙                    \r\nartist              :   35000 : 👨‍🎨 = 👨‍🎓 + 🎨 🖌 🖊 🖋 🖍 ✏️ 📒 🖼 💡 📷 🚗          \r\nsinger              :   40000 : 👨‍🎤 = 👨‍🎓 + 🎤 🎧 🎼 🎹 🥁 🎻 🎥 🚗       \r\nfarmer              :   50000 : 👨‍🌾 = 👨‍🎓 + 🧢 🥾 🥚 🐕 🐈 🐓 🐄 🐖 🐑 🐐 🚜        \r\ncook                :   40000 : 👨‍🍳 = 👨‍🎓 + 🍓 🥑 🥕 🥩 🍤 🥚 🥫 🥄 🍴 🧂 ⏰ 🔪 🚗      \r\nfirefighter         :   55000 : 👨‍🚒 = 👨‍🎓 + ⛑️ 🧯 🥾 🪓 🔔 🚒    \r\npolice_officer      :   60000 : 👮‍♂️ = 👨‍🎓 + 🧢 ⚖️ 🔫 🥊 🤼 📢 🚓             \r\ndetective           :   70000 : 🕵️‍♂️ = 👨‍🎓 + 👔 ⚖️ 🔦 🔎 📋 💼 🚓          \r\nteacher             :   50000 : 👨‍🏫 = 👨‍🎓 + 📝 📒 📕 📗 📘 📙 🚐\r\noffice_worker       :   60000 : 👨‍💼 = 👨‍🎓 + 👔 💼 💻 🗄 🪑 📁 📊 🚗             \r\ntechnologist        :   80000 : 👨‍💻 = 👨‍🎓 + 💻 ⌨️ 🖥 📱 🖱 🎮 🤖 🚗              \r\nscientist           :   90000 : 👨‍🔬 = 👨‍🎓 + 🥼 🥽 🔬 💻 🧫 🧪 ⚗️ 🚗            \r\njudge               :  120000 : 👨‍⚖️ = 👨‍🎓 + 👔 ⚖️ 💼 📚 🗃 🕰 🚗   \r\nhealth_worker       :  100000 : 👨‍⚕️ = 👨‍🎓 + 🥼 ⛑ 🔬 🩹 🩺 💊 💉 🧫 ⛑ 🚑\r\npilot               :  110000 : 👨‍✈️ = 👨‍🎓 + 🧥 🧭 💻 🕹 ✈️       \r\nastronaut           :  130000 : 👨‍🚀 = 👨‍🎓 + 🧥 🔭 💻 🕹 🚀  \r\n`;\r\n\r\nconst requirementsDoc = `\r\n🍼 = 10\r\n🧸 = 10\r\n👕 = 20\r\n👖 = 20\r\n🧦 = 10\r\n🩲 = 20\r\n👟 = 30\r\n📖 = 50\r\n🪁 = 25\r\n🚲 = 150\r\n🎮 = 200\r\n\r\n👚 = 20\r\n👗 = 20\r\n🩰 = 10\r\n🩱 = 20\r\n🥿 = 30\r\n\r\n🍕 = 30\r\n✏️ = 10\r\n📓 = 20\r\n📚 = 500\r\n⏰ = 15\r\n📱 = 350\r\n💻 = 1250\r\n🚗 = 7000\r\n🧳 = 800\r\n🎓 = 10000\r\n\r\n🧤 = 20\r\n🥾 = 80\r\n🔧 = 110\r\n⏲ = 25\r\n📋 = 15\r\n🧰 = 300\r\n🔩 = 700\r\n🚚 = 35000\r\n🦺 = 150\r\n🔨 = 75\r\n⚒ = 150\r\n🧱 = 3000\r\n🧨 = 16000\r\n🚙 = 32000\r\n🎨 = 100\r\n🖌 = 70\r\n🖊 = 50\r\n🖋 = 35\r\n🖍 = 15\r\n📒 = 15\r\n🖼 = 80\r\n💡 = 150\r\n📷 = 400\r\n🎤 = 150\r\n🎧 = 120\r\n🎼 = 750\r\n🎹 = 320\r\n🥁 = 450\r\n🎻 = 320\r\n🎥 = 1450\r\n🧢 = 25\r\n🥚 = 10\r\n🐕 = 35\r\n🐈 = 25\r\n🐓 = 30\r\n🐄 = 350\r\n🐖 = 150\r\n🐑 = 120\r\n🐐 = 100\r\n🚜 = 15000\r\n🍓 = 25\r\n🥑 = 30\r\n🥕 = 20\r\n🥩 = 75\r\n🍤 = 100\r\n🥫 = 50\r\n🥄 = 120\r\n🍴 = 350\r\n🧂 = 120\r\n🔪 = 225\r\n⛑️ = 150\r\n🧯 = 250\r\n🪓 = 50\r\n🔔 = 75\r\n🚒 = 135000\r\n⚖️ = 15000\r\n🔫 = 750\r\n🥊 = 500\r\n🤼 = 1250\r\n📢 = 150\r\n🚓 = 55000\r\n👔 = 250\r\n🔦 = 55\r\n🔎 = 85\r\n💼 = 125\r\n📝 = 25\r\n📕 = 75\r\n📗 = 25\r\n📘 = 60\r\n📙 = 30\r\n🚐 = 16000\r\n🗄 = 250\r\n🪑 = 150\r\n📁 = 50\r\n📊 = 750\r\n⌨️ = 75\r\n🖥 = 150\r\n🖱 = 50\r\n🤖 = 1500\r\n🥼 = 150\r\n🥽 = 25\r\n🔬 = 3500\r\n🧫 = 150\r\n🧪 = 300\r\n⚗️ = 250\r\n🗃 = 150\r\n🕰 = 650\r\n⛑ = 150\r\n🩹 = 100\r\n🩺 = 120\r\n💊 = 1200\r\n💉 = 1500\r\n🚑 = 75000\r\n🧥 = 550\r\n🧭 = 50\r\n🕹 = 850\r\n✈️ = 1500000\r\n🔭 = 350\r\n🚀 = 150000000\r\n`;\r\n","import { createSubscribable } from 'utils/subscribable';\r\nimport { toMap } from 'utils/objects';\r\nimport { buildEmojiSkillTree } from './emoji-skills/emoji-skill-tree';\r\n\r\nexport type EmojiIdleEmotionKind = 'excited' | 'happy' | 'normal' | 'angry' | 'sick' | 'dead';\r\nexport type EmojiIdleState = {\r\n    characterEmoji: string;\r\n    targetEmoji?: string;\r\n    targetOptions?: { emoji: string }[];\r\n    requirementsPurchased?: string[];\r\n    requirementsAvailable?: { emoji: string, cost: number }[];\r\n    requirementsRemaining?: { emoji: string, cost: number }[];\r\n    requirementsNeeded?: { emoji: string, cost: number }[];\r\n    lastPurchaseTimestamp: number;\r\n\r\n    emotion: EmojiIdleEmotionKind;\r\n    lastEmotionTimestamp: number;\r\n\r\n    money: number;\r\n\r\n    multiplier: number;\r\n    lastMultiplierChangeTimestamp: number;\r\n\r\n    townState: {\r\n        characters: {\r\n            characterEmoji: string;\r\n            finishedTimestamp: number;\r\n            // requirementsPurchased: string[];\r\n        }[];\r\n    };\r\n};\r\n\r\nconst storageKey = `EmojiIdleState`;\r\nconst storage = {\r\n    save: (value: EmojiIdleState) => { localStorage.setItem(storageKey, JSON.stringify(value)); },\r\n    load: () => {\r\n        if (!localStorage.getItem(storageKey)) { return null; }\r\n        try {\r\n            return JSON.parse(localStorage.getItem(storageKey) ?? ``);\r\n        } catch{\r\n            return null;\r\n        }\r\n    },\r\n};\r\n\r\nconst createService = () => {\r\n    const skillTree = buildEmojiSkillTree();\r\n    const reqMap = toMap(skillTree.allRequirements.map(x => ({ key: x.emoji, value: x })));\r\n\r\n    const defaultState: EmojiIdleState = {\r\n        characterEmoji: skillTree.root.emoji,\r\n        emotion: `normal`,\r\n        lastEmotionTimestamp: Date.now(),\r\n        money: 0,\r\n        multiplier: 1,\r\n        lastMultiplierChangeTimestamp: Date.now(),\r\n        lastPurchaseTimestamp: Date.now(),\r\n        townState: {\r\n            characters: [],\r\n        },\r\n    };\r\n    let s: EmojiIdleState = storage.load() ?? defaultState;\r\n\r\n    // Load missing state fields\r\n    s = { ...defaultState, ...s };\r\n\r\n    // // Hard code Missing Town Characters for Kids Accounts\r\n    // s.townState = {\r\n    //     // characters: [...skillTree.allNodes.filter(x => x.children.length <= 0).slice(0, 5).map(x => ({\r\n    //     //     characterEmoji: x.emoji,\r\n    //     //     finishedTimestamp: Date.now() - Math.random() * 1000 * 60 * 60 * 24 * 7,\r\n    //     // }))],\r\n    //     characters: [...skillTree.allNodes\r\n    //         .filter(x => x.name === `artist` && x.gender === `female`)\r\n    //         .map(x => ({\r\n    //             characterEmoji: x.emoji,\r\n    //             finishedTimestamp: Math.floor(Date.now() - 0.25 * 1000 * 60 * 60 * 24),\r\n    //         }))],\r\n    // };\r\n\r\n    const sub = createSubscribable<EmojiIdleState>(s);\r\n\r\n    const changeState = (partialState: Partial<EmojiIdleState>) => {\r\n        // console.log(`changePetState`, { partialState, before: { ...s } });\r\n        s = { ...s, ...partialState };\r\n        sub.onStateChange(s);\r\n        storage.save(s);\r\n    };\r\n\r\n    const rewardInner = (value: number) => {\r\n        // max multiplier - keeps things more linear?\r\n        const maxMultiplier = 100;\r\n        changeState({\r\n            money: s.money + s.multiplier,\r\n            multiplier: Math.min(maxMultiplier, s.multiplier + value),\r\n            lastMultiplierChangeTimestamp: Date.now(),\r\n        });\r\n    };\r\n\r\n    const punish = () => {\r\n        // This is the only way to lose multiplier\r\n        changeState({\r\n            multiplier: Math.max(1, s.multiplier - 5),\r\n            lastMultiplierChangeTimestamp: Date.now(),\r\n        });\r\n    };\r\n\r\n    const selectOption = (emoji: string) => {\r\n        // console.log(`selectOption`, { emoji });\r\n\r\n        // Choose character\r\n        if (s.targetOptions?.find(x => x.emoji === emoji)) {\r\n            if (emoji === skillTree.root.emoji) {\r\n                // Add finished character to town\r\n                s.townState.characters.push({\r\n                    characterEmoji: s.characterEmoji,\r\n                    finishedTimestamp: Date.now(),\r\n                });\r\n            }\r\n\r\n            changeState({\r\n                targetEmoji: emoji,\r\n                targetOptions: undefined,\r\n                emotion: `excited`,\r\n                lastEmotionTimestamp: Date.now(),\r\n                lastPurchaseTimestamp: Date.now(),\r\n\r\n                money: 0,\r\n                // money: emoji === skillTree.root.emoji ? 0 : s.money,\r\n            });\r\n        }\r\n\r\n        // Purchases\r\n        const r = s.requirementsAvailable?.find(x => x.emoji === emoji);\r\n        if (r && r.cost <= s.money) {\r\n            // Purchase \r\n            changeState({\r\n                requirementsPurchased: [...s.requirementsPurchased ?? [], r.emoji],\r\n                requirementsRemaining: undefined,\r\n                money: s.money - r.cost,\r\n                requirementsAvailable: undefined,\r\n                emotion: `excited`,\r\n                lastEmotionTimestamp: Date.now(),\r\n                lastPurchaseTimestamp: Date.now(),\r\n            });\r\n        }\r\n\r\n        // Ignore\r\n    };\r\n\r\n    // Update state\r\n    setInterval(() => {\r\n        const second = 1000;\r\n        const minute = 60 * second;\r\n        const hour = 60 * minute;\r\n\r\n        // console.log(`emoji - idle - service update`, {});\r\n\r\n        // This is too powerful against slow players\r\n        // // Decrease Multiplier over time\r\n        // const decTime = 3 * second;\r\n        // if (s.multiplier > 1 && Date.now() > s.lastMultiplierChangeTimestamp + decTime) {\r\n        //     const timeDelta = Date.now() - s.lastMultiplierChangeTimestamp;\r\n        //     const multChange = Math.floor(timeDelta / decTime);\r\n\r\n        //     // console.log(`emoji - idle - service`, { timeDelta, multChange });\r\n        //     changeState({\r\n        //         multiplier: Math.max(1, s.multiplier - multChange),\r\n        //         lastMultiplierChangeTimestamp: Date.now(),\r\n        //     });\r\n        // }\r\n\r\n        // Choose target\r\n        if (!s.targetEmoji && !s.targetOptions) {\r\n            const skillNode = skillTree.allNodes.find(x => x.emoji === s.characterEmoji);\r\n            if (skillNode) {\r\n                let t = skillNode.children.map(x => ({ emoji: x.emoji }));\r\n                const remainingSkills = t.filter(x => !s.townState.characters.find(c => c.characterEmoji));\r\n\r\n                if (remainingSkills.length > 0) {\r\n                    t = remainingSkills;\r\n                }\r\n\r\n                if (t.length === 0) {\r\n                    // Top of skill tree\r\n                    changeState({\r\n                        targetOptions: [{ emoji: skillTree.root.emoji }],\r\n                    });\r\n                }\r\n                // else if (t.length === 1) {\r\n                //     // Auto select\r\n                //     changeState({\r\n                //         targetEmoji: t[0].emoji,\r\n                //     });\r\n                // } \r\n                else {\r\n                    changeState({\r\n                        targetOptions: t,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Populate Available Requirements\r\n        if (s.targetEmoji) {\r\n            const targetSkillNode = skillTree.allNodes.find(x => x.emoji === s.targetEmoji);\r\n            if (targetSkillNode) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                const reqs = targetSkillNode.requirementEmojis.map(x => reqMap.get(x)).filter(x => x).map(x => x!);\r\n                const reqs_remaining = reqs.filter(x => !s.requirementsPurchased?.includes(x.emoji));\r\n                reqs_remaining.sort((a, b) => a.cost - b.cost);\r\n                const reqs_available = reqs_remaining.filter(x => x.cost <= s.money);\r\n\r\n                if (reqs_available.length !== s.requirementsAvailable?.length) {\r\n                    changeState({\r\n                        requirementsNeeded: reqs,\r\n                        requirementsAvailable: reqs_available,\r\n                    });\r\n                }\r\n\r\n                if (reqs_remaining.length !== s.requirementsRemaining?.length) {\r\n                    changeState({\r\n                        requirementsRemaining: reqs_remaining,\r\n                    });\r\n                }\r\n\r\n                // Target completed\r\n                if (reqs_remaining.length <= 0) {\r\n                    changeState({\r\n                        characterEmoji: s.targetEmoji,\r\n                        targetEmoji: undefined,\r\n                        targetOptions: undefined,\r\n                        requirementsAvailable: undefined,\r\n                        requirementsNeeded: undefined,\r\n                        requirementsPurchased: undefined,\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Emotion\r\n            if (Date.now() > (s.lastEmotionTimestamp ?? 0) + 15 * second) {\r\n                // TODO: Sickness\r\n                const emotion = Date.now() > (s.lastPurchaseTimestamp ?? 0) + 5 * minute ? `angry`\r\n                    : `normal`;\r\n\r\n                if (s.emotion !== emotion) {\r\n                    changeState({ emotion, lastEmotionTimestamp: Date.now() });\r\n                }\r\n            }\r\n        }\r\n\r\n    }, 1000);\r\n\r\n    return {\r\n        subscribePetStateChange: sub.subscribe,\r\n        reward: () => rewardInner(1),\r\n        reward_major: () => rewardInner(10),\r\n        reward_extreme: () => rewardInner(100),\r\n        punish,\r\n\r\n        selectOption,\r\n    };\r\n};\r\n\r\nexport type EmojiIdleService = ReturnType<typeof createService>;\r\n\r\nconst serviceState = {\r\n    instance: null as null | EmojiIdleService,\r\n};\r\nexport const EmojiIdleService = {\r\n    get: () => {\r\n        // eslint-disable-next-line no-return-assign\r\n        return serviceState.instance ?? (serviceState.instance = createService());\r\n    },\r\n    reset: () => {\r\n        serviceState.instance = createService();\r\n    },\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { shuffle } from 'utils/arrays';\r\nimport { EmojiIdleService, EmojiIdleState, EmojiIdleEmotionKind } from './emoji-idle-service';\r\nimport { buildEmojiSkillTree } from './emoji-skills/emoji-skill-tree';\r\n\r\nexport const styles = {\r\n    container: {\r\n        height: 40,\r\n    },\r\n    fixed: {\r\n        position: `fixed`,\r\n        top: 0, right: 0, left: 0,\r\n        zIndex: 1000,\r\n    },\r\n    inner: {\r\n        position: `relative`,\r\n        height: 40,\r\n    },\r\n    emotionEmoji: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 24,\r\n    },\r\n    characterEmoji: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 24,\r\n    },\r\n    characterEmoji_small: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n    },\r\n    costText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n        color: `#00FF00`,\r\n    },\r\n    costText_small: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 10,\r\n        color: `#00FF00`,\r\n    },\r\n    targetCharacterEmoji: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n    },\r\n    objectEmoji: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 12,\r\n    },\r\n\r\n    money: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 20,\r\n        color: `#FFFF00`,\r\n        marginLeft: 8,\r\n    },\r\n    money_small: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n        color: `#FFFF00`,\r\n    },\r\n    multiplier: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 14,\r\n        color: `#FF00FF`,\r\n        marginLeft: 8,\r\n    },\r\n    foodText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 12,\r\n        color: `#333300`,\r\n    },\r\n} as const;\r\n\r\nexport const EmojiIdleView = (props: {}) => {\r\n    const [gameState, setGameState] = useState(null as null | EmojiIdleState);\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    useEffect(() => {\r\n        const service = EmojiIdleService.get();\r\n        const sub = service.subscribePetStateChange(setGameState);\r\n        return () => sub.unsubscribe();\r\n    });\r\n\r\n    if (isExpanded && gameState) {\r\n        return (\r\n            <TownView gameState={gameState} onClose={() => setIsExpanded(false)} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.fixed}>\r\n                <View style={styles.inner}>\r\n                    <EmojiCharacterView\r\n                        emoji={gameState?.characterEmoji ?? ``}\r\n                        targetEmoji={gameState?.targetEmoji ?? ``}\r\n                        emotion={gameState?.emotion ?? null}\r\n                        purchased={gameState?.requirementsPurchased ?? []}\r\n                        onPress={() => setIsExpanded(s => !s)}\r\n                    />\r\n                    {gameState && <CommandsView gameState={gameState} />}\r\n                    {/* {gameState && gameState.food > 0 && [...new Array(gameState.food)].map((x, i) => (\r\n                        // eslint-disable-next-line react/no-array-index-key\r\n                        <View key={`${i}`} style={{ position: `absolute`, transform: `translate(${100 + i * 87 % 100}px,${4 + i * 43 % 12}px)` }} >\r\n                            <Text style={styles.foodText}>{getFoodVariant(i)}</Text>\r\n                        </View>\r\n                    ))} */}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const townStyles = {\r\n    container: {\r\n        background: `#555555`,\r\n    },\r\n    payText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 14,\r\n        color: `#FFFFFF`,\r\n    },\r\n    payText_disabled: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 14,\r\n        color: `#CCCCCC`,\r\n    },\r\n    moneyText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n        color: `#FFFF00`,\r\n    },\r\n    townMoneyText: {\r\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n        fontSize: 16,\r\n        color: `#00FF00`,\r\n    },\r\n} as const;\r\n\r\nconst skillTree = buildEmojiSkillTree();\r\nconst TownView = ({ gameState, onClose }: { gameState: EmojiIdleState, onClose: () => void }) => {\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const townPersons = gameState.townState.characters.map(x => ({\r\n        character: x,\r\n        skill: skillTree.allNodes.find(n => n.emoji === x.characterEmoji) ?? skillTree.root,\r\n    }))\r\n        .filter(x => x.skill.pay)\r\n        .map(x => ({\r\n            ...x,\r\n            years: (Date.now() - x.character.finishedTimestamp) / (24 * 60 * 60 * 1000),\r\n            money: Math.floor((Date.now() - x.character.finishedTimestamp) / (24 * 60 * 60 * 1000) * x.skill.pay),\r\n        }));\r\n    const missingSkills = skillTree.allNodes.filter(x => x.children.length <= 0 && !gameState.townState.characters.find(t => t.characterEmoji === x.emoji));\r\n    // eslint-disable-next-line unicorn/no-reduce\r\n    const townMoney = townPersons.reduce((out, x) => { out += x.money ?? 0; return out; }, 0);\r\n    return (\r\n        <View style={townStyles.container}>\r\n            <View>\r\n                <View style={{ background: `#333333`, flexDirection: `row`, alignItems: `center` }}>\r\n                    <View style={{ position: `relative`, width: 100, height: 40 }}>\r\n                        <View style={{ position: `absolute`, left: 0, top: 0, flexDirection: `column`, alignItems: `flex-end` }} >\r\n                            <TouchableOpacity onPress={() => onClose()}>\r\n                                <Text style={styles.characterEmoji}>{` 🏙 `}</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={{ flex: 1 }} />\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.townMoneyText}>{`$${(townMoney).toLocaleString()}`}</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={{ background: `#333333`, flexDirection: `row`, alignItems: `center` }}>\r\n                <View style={{ position: `relative`, width: 100, height: 40 }}>\r\n                    <EmojiCharacterView\r\n                        emoji={gameState?.characterEmoji ?? ``}\r\n                        targetEmoji={gameState?.targetEmoji ?? ``}\r\n                        emotion={gameState?.emotion ?? null}\r\n                        purchased={gameState?.requirementsPurchased ?? []}\r\n                        onPress={() => onClose()}\r\n                    />\r\n                </View>\r\n            </View>\r\n            {/* Finished Characters */}\r\n            {townPersons.map(x => (\r\n                <View style={{ background: `#333333`, flexDirection: `row`, alignItems: `center` }}>\r\n                    <View style={{ position: `relative`, width: 100, height: 40 }}>\r\n                        <EmojiCharacterView\r\n                            emoji={x.character.characterEmoji}\r\n                            targetEmoji=''\r\n                            emotion='happy'\r\n                            purchased={x.skill?.requirementEmojis ?? []}\r\n                        />\r\n                    </View>\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.payText}>{`$${(x.skill?.pay ?? 0).toLocaleString()}`}</Text>\r\n                    </View>\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.payText}>{`x${(x.years).toFixed(1)}`}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }} />\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.moneyText}>{`$${(x.money).toLocaleString()}`}</Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n            {/* Missing Characters */}\r\n            {missingSkills.map(x => (\r\n                <View style={{ background: `#555555`, flexDirection: `row`, alignItems: `center` }}>\r\n                    <View style={{ position: `relative`, width: 100, height: 40, opacity: 0.5 }}>\r\n                        <EmojiCharacterView\r\n                            emoji={x.emoji}\r\n                            targetEmoji=''\r\n                            emotion={null}\r\n                            purchased={[]}\r\n                        />\r\n                    </View>\r\n                    <View style={{ padding: 4 }}>\r\n                        <Text style={townStyles.payText_disabled}>{`$${(x.pay).toLocaleString()}`}</Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst CommandsView = ({ gameState }: { gameState: EmojiIdleState }) => {\r\n\r\n    const [offset, setOffset] = useState(0);\r\n    useEffect(() => {\r\n        setOffset(0);\r\n    }, [gameState.targetOptions, gameState.requirementsAvailable]);\r\n\r\n    if (gameState.targetOptions && gameState.targetOptions.length > 0) {\r\n        const listSize = 4;\r\n        const targetOptionsLength = gameState.targetOptions.length;\r\n        return (\r\n            <View style={{ position: `absolute`, top: 0, left: 0, right: 0 }} >\r\n                <View style={{ flexDirection: `row`, justifyContent: `center` }}>\r\n                    {gameState.targetOptions.slice(offset, offset + listSize).map(x => (\r\n                        <TouchableOpacity key={x.emoji} onPress={() => EmojiIdleService.get().selectOption(x.emoji)}>\r\n                            <View>\r\n                                <Text style={styles.characterEmoji}>{x.emoji}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                    {targetOptionsLength > listSize && (\r\n                        <TouchableOpacity onPress={() => setOffset(s => { const i = s + 5; return i >= targetOptionsLength ? 0 : i; })}>\r\n                            <View>\r\n                                <Text style={styles.characterEmoji}>{offset + listSize < targetOptionsLength ? `⏩` : `⏮`}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    // if (gameState.requirementsAvailable && gameState.requirementsAvailable.length > 0) {\r\n    //     return (\r\n    //         <View style={{ position: `absolute`, top: 0, left: 0, right: 0 }} >\r\n    //             <View style={{ alignSelf: `center`, alignItems: `center`, background: `#222222`, borderRadius: 4, padding: 4 }}>\r\n    //                 <View style={{ flexDirection: `row`, justifyContent: `center` }}>\r\n    //                     {gameState.requirementsAvailable.slice(0, 5).map(x => (\r\n    //                         <TouchableOpacity key={x.emoji} onPress={() => EmojiIdleService.get().selectOption(x.emoji)}>\r\n    //                             <View style={{ flexDirection: `column`, margin: 4, alignItems: `center`, background: `#333333`, borderRadius: 4 }}>\r\n    //                                 <Text style={styles.characterEmoji}>{x.emoji}</Text>\r\n    //                                 <Text style={styles.costText}>{`$${x.cost.toLocaleString()}`}</Text>\r\n    //                             </View>\r\n    //                         </TouchableOpacity>\r\n    //                     ))}\r\n    //                 </View>\r\n    //                 <Text style={styles.money_small}>{`$${(gameState.money ?? 0).toLocaleString()}`}</Text>\r\n    //             </View>\r\n    //         </View>\r\n    //     );\r\n    // }\r\n\r\n    const reqs = gameState.requirementsRemaining ?? [];\r\n    const reqShowLength = 3;\r\n    return (\r\n        <View>\r\n            <ScoreView {...gameState ?? { money: 0, multiplier: 1 }} />\r\n            <View style={{ position: `absolute`, left: 90, top: 0, flexDirection: `row`, zIndex: 10 }} >\r\n                {reqs.slice(0, reqShowLength).map(x => {\r\n                    const canBuy = x.cost <= gameState.money;\r\n                    return (\r\n                        <TouchableOpacity key={x.emoji} onPress={() => EmojiIdleService.get().selectOption(x.emoji)}>\r\n                            <View style={{ flexDirection: `column`, alignItems: `center`, background: canBuy ? `#003300` : `#553300`, borderRadius: 4, paddingLeft: 2, paddingRight: 2 }}>\r\n                                <Text style={styles.characterEmoji_small}>{x.emoji}</Text>\r\n                                <Text style={{ ...styles.costText_small, ...(canBuy ? {} : { color: `#FF0000` }) }}>{`$${x.cost.toLocaleString()}`}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    );\r\n                })}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst ScoreView = ({ money, multiplier }: { money: number, multiplier: number }) => {\r\n\r\n    const [moneySizeOffset, setMoneySizeOffset] = useState(0);\r\n    const [multiplierSizeOffset, setMultiplierSizeOffset] = useState(0);\r\n    const lastMultiplier = useRef(multiplier);\r\n    const [multiplierDelta, setMultiplierDelta] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        setMoneySizeOffset(5);\r\n\r\n        const update = () => {\r\n            setMoneySizeOffset(s => {\r\n                if (s > 0) {\r\n                    return s - 1;\r\n                }\r\n                clearInterval(id);\r\n                return 0;\r\n            });\r\n        };\r\n        update();\r\n\r\n        const id = setInterval(update, 25);\r\n        return () => clearInterval(id);\r\n    }, [money]);\r\n\r\n    useEffect(() => {\r\n        setMultiplierSizeOffset(10);\r\n        setMultiplierDelta(multiplier - lastMultiplier.current);\r\n        lastMultiplier.current = multiplier;\r\n\r\n        const update = () => {\r\n            setMultiplierSizeOffset(s => {\r\n                if (s > 0) {\r\n                    return s - 1;\r\n                }\r\n                clearInterval(id);\r\n                return 0;\r\n            });\r\n        };\r\n        update();\r\n\r\n        const id = setInterval(update, 25);\r\n        return () => clearInterval(id);\r\n    }, [multiplier]);\r\n\r\n\r\n    return (\r\n        <View style={{ position: `absolute`, top: 0, right: 4 }} >\r\n            <View style={{ flexDirection: `row`, justifyContent: `flex-end` }}>\r\n                <View style={{ transform: `translate(-${moneySizeOffset}px,${2 * moneySizeOffset}px) scale(${moneySizeOffset * 0.1 + 1})` }}>\r\n                    <Text style={styles.money}>{`$${(money ?? 0).toLocaleString()}`}</Text>\r\n                </View>\r\n                <View style={{ transform: `translate(-${multiplierSizeOffset}px,${2 * multiplierSizeOffset}px) scale(${multiplierSizeOffset * 0.1 + 1})` }}>\r\n                    <Text style={{ ...styles.multiplier, ...(multiplierDelta < -5 ? { color: `#FF0000` } : multiplierDelta < 0 ? { color: `#FFFF00` } : { color: `#00FF00` }) }}>{`x${(multiplier ?? 1).toLocaleString()}`.padStart(4, ` `)}</Text>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst EmojiCharacterView = ({ emoji, targetEmoji, emotion, purchased, onPress }: { emoji: string, targetEmoji: string, emotion: null | EmojiIdleEmotionKind, purchased: string[], onPress?: () => void }) => {\r\n    return (\r\n        <>\r\n            <PurchasedView purchased={purchased} />\r\n            <View style={{ position: `absolute`, left: 20, top: 0, flexDirection: `column`, alignItems: `flex-end` }} >\r\n                <TouchableOpacity onPress={() => onPress?.()}>\r\n                    <EmotionView emotion={emotion ?? null} emoji={emoji} />\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={{ position: `absolute`, left: 66, top: 0, flexDirection: `column`, alignItems: `flex-end` }} >\r\n                <Text style={styles.targetCharacterEmoji}>{`${targetEmoji}`}</Text>\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\nconst PurchasedView = ({ purchased }: { purchased: string[] }) => {\r\n    const [offset, setOffset] = useState(0);\r\n    useEffect(() => {\r\n        const update = () => {\r\n            setOffset(s => s + 1);\r\n        };\r\n        update();\r\n\r\n        const id = setInterval(update, 200);\r\n        return () => clearInterval(id);\r\n    }, [purchased.length]);\r\n\r\n    return (\r\n        <>\r\n            {purchased.map((x, i) => (\r\n                <View key={x} style={{ position: `absolute`, left: 0, top: 0, flexDirection: `column`, alignItems: `flex-end` }} >\r\n                    <View style={{ transform: `translate(${((i * 17) + offset) % 60}px,${((i * 5) + offset) % 24}px)` }}>\r\n                        <Text style={styles.objectEmoji}>{`${x}`}</Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nconst EmotionView = ({ emotion, emoji }: { emotion: null | EmojiIdleEmotionKind, emoji: string }) => {\r\n    const [display, setDisplay] = useState({ text: emoji, isEmotion: false });\r\n    useEffect(() => {\r\n        if (!emotion) {\r\n            return () => { };\r\n        }\r\n        let showEmotion = false;\r\n        let variant = 0;\r\n        const update = () => {\r\n            showEmotion = !showEmotion;\r\n            if (!showEmotion) {\r\n                setDisplay({ text: emoji, isEmotion: false });\r\n                return;\r\n            }\r\n            setDisplay({ text: getEmoji(emotion, variant++), isEmotion: true });\r\n        };\r\n        update();\r\n\r\n        const id = setInterval(update, 3000);\r\n        return () => clearInterval(id);\r\n    }, [emotion, emoji]);\r\n\r\n    return (\r\n        <Text style={display.isEmotion ? styles.emotionEmoji : styles.characterEmoji}>{display.text}</Text>\r\n    );\r\n};\r\n\r\n// 😀😁😂🤣😃😄😅😆😉😊😋😎😍😘🥰😗😙😚☺🙂🤗🤩🤔🤨😐😑😶\r\n// 🙄😏😣😥😮🤐😯😪😫🥱😴😌😛😜😝🤤😒😓😔😕🙃🤑😲☹🙁😖😞\r\n// 😟😤😢😭😦😧😨😩🤯😬😰😱🥵🥶😳🤪😵🥴😠😡🤬😷🤒🤕🤢🤮\r\n// 🤧😇🥳🥺🤠🤡🤥🤫🤭🧐🤓😈👿👹👺💀☠👻👽👾🤖💩\r\n// 🧟‍♂️\r\nconst getEmoji = (emotion: null | EmojiIdleEmotionKind, variant: number) => {\r\n    // console.log(`getEmoji`, { emotion, variant });\r\n\r\n    // Setup State\r\n    if (!emotion) { return `😶`; }\r\n\r\n    if (emotion === `excited`) {\r\n        const items = shuffle([`😁`, `😍`, `😎`, `🤩`, `🤗`, `🥳`, `😂`]);\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `happy`) {\r\n        const items = [`😀`, `🙂`, `😄`, `😃`, `😊`];\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `normal`) {\r\n        // const items = [`🙂`, `😋`, `😮`, `🤔`, `🙄`, `🥱`, `😴`];\r\n        const items = [`🙂`, `😋`, `😮`, `🙄`];\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `angry`) {\r\n        const items = [`😳`, `😟`, `😤`, `😣`, `🥺`, `😫`, `😩`];\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `sick`) {\r\n        const items = [`🤢`, `🤮`, `😵`, `🤧`, `😬`, `💩`, `😞`];\r\n        return items[variant % items.length];\r\n    }\r\n    if (emotion === `dead`) {\r\n        const items = [`💀`, `👻`, `🧟‍♂️`];\r\n        return items[variant % items.length];\r\n    }\r\n\r\n    // Unknown\r\n    return `👾`;\r\n};\r\n\r\nconst foodItems = shuffle(` \r\n        🍕 🍔 🍟 🌭 🍿 🥓 🥚 🧇 🥞 🧈 🥐 🍞 🥨 🥖 🥯 🧀 🥗 🥙 🥪 🌯 🌮 \r\n        🥩 🍗 🍖 🍠 🥟 🥠 🍘 🥡 🍱 🍚 🍙 🍛 🍜 🦪 🍣 🥮 🍥 🍤 🍢 🧆 \r\n        🥣 🍝 🍲 🥧 🍦 🍧 🍪 🍩 🍨 🎂 🍰 🧁 🍮 🍯 🍵 `\r\n    .replace(`\\n`, ` `).split(` `).map(x => x.trim()).filter(x => x));\r\n\r\nconst getFoodVariant = (variant: number) => {\r\n    return foodItems[variant % foodItems.length];\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { UserDataService, UserProfileInfo } from 'user-data-service/user-data-service';\r\nimport { useAutoLoadingError } from 'utils-react/hooks';\r\nimport { UserProfileManagerView } from 'user-data-service/user-profile-manager-view';\r\nimport { UserProfileSelectionView } from 'user-data-service/user-profile-selection-view';\r\nimport { View, Text, TouchableOpacity, Platform } from 'react-native-lite';\r\nimport { ProblemService } from '../problems/problems-service';\r\nimport { EmojiIdleView } from './emoji-idle-game/emoji-idle-view';\r\nimport { EmojiIdleService } from './emoji-idle-game/emoji-idle-service';\r\n\r\nexport const ProgressGameService = {\r\n    onCorrect: () => {\r\n        EmojiIdleService.get().reward();\r\n    },\r\n    onCompleteSection: () => {\r\n        EmojiIdleService.get().reward_major();\r\n    },\r\n    onCompleteSubject: () => {\r\n        EmojiIdleService.get().reward_extreme();\r\n    },\r\n    onWrong: () => {\r\n        EmojiIdleService.get().punish();\r\n    },\r\n};\r\n\r\nexport const createProgressGameProblemService = (problemSource: ProblemService, options?: {}): ProblemService => {\r\n    const service: ProblemService = {\r\n        ...problemSource,\r\n        recordAnswer: (problem, answer) => {\r\n            // (async () => UserDataService.get().markUserDataChanged())();\r\n\r\n            if (answer.isCorrect) {\r\n                ProgressGameService.onCorrect();\r\n\r\n                if (!problem.isReview && problem.isLastOfSubject) {\r\n                    ProgressGameService.onCompleteSubject();\r\n\r\n                    // Save User Data (delayed to let other state update)\r\n                    setTimeout(async () => {\r\n                        await UserDataService.get().uploadUserData();\r\n                    }, 1000);\r\n                } else if (!problem.isReview && problem.isLastOfSection) {\r\n                    ProgressGameService.onCompleteSection();\r\n\r\n                    // Save User Data (delayed to let other state update)\r\n                    setTimeout(async () => {\r\n                        await UserDataService.get().uploadUserData();\r\n                    }, 1000);\r\n                }\r\n\r\n            } else {\r\n                ProgressGameService.onWrong();\r\n            }\r\n\r\n            return problemSource.recordAnswer(problem, answer);\r\n        },\r\n    };\r\n    return service;\r\n};\r\n\r\nexport const ProgressGameView = () => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [hasSelectedProfile, setHasSelectedProfile] = useState(false);\r\n    const [userProfile, setUserProfile] = useState(null as null | UserProfileInfo);\r\n\r\n    // Save UserData after Purchase\r\n    const subscribeToSaveOnPurchase = () => {\r\n        let lastPurchase = Date.now();\r\n        const subscription = EmojiIdleService.get().subscribePetStateChange((x) => {\r\n            console.log(`ProgressGameView subscribePetStateChange`, { lastPurchase, x });\r\n            if (lastPurchase >= x.lastPurchaseTimestamp) { return; }\r\n            lastPurchase = x.lastPurchaseTimestamp;\r\n            // Save User Data (delayed to let other state update)\r\n            setTimeout(async () => {\r\n                await UserDataService.get().uploadUserData();\r\n            }, 1000);\r\n        });\r\n        return subscription;\r\n    };\r\n\r\n    useEffect(() => {\r\n        setUserProfile(UserDataService.get().getActiveUser() ?? null);\r\n        EmojiIdleService.reset();\r\n\r\n        const sub = subscribeToSaveOnPurchase();\r\n        return () => {\r\n            sub.unsubscribe();\r\n        };\r\n    }, [hasSelectedProfile]);\r\n\r\n    useEffect(() => {\r\n        // Load User Data\r\n        doWork(async () => {\r\n            await UserDataService.get().setup();\r\n            EmojiIdleService.reset();\r\n        });\r\n    }, []);\r\n\r\n    const onChangeProfile = () => {\r\n        // setHasSelectedProfile(false);\r\n        // Force Reload Page\r\n        if (Platform.OS === `web`) {\r\n            window.location.reload();\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!hasSelectedProfile) {\r\n        return <UserProfileSelectionView onUserSelected={() => setHasSelectedProfile(true)} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <EmojiIdleView />\r\n            <View>\r\n                <TouchableOpacity onPress={onChangeProfile}>\r\n                    <View style={{ flexDirection: `row`, alignItems: `center`, justifyContent: `flex-start`, padding: 4 }}>\r\n                        <Text style={{ fontSize: 32 }}>{userProfile?.emoji ?? `👤`}</Text>\r\n                        <Text style={{ fontSize: 14 }}>{userProfile?.name ?? ``}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n","\r\nexport type EmailAddress = string & { __type: 'email' };\r\nexport const toEmailAddress = (email: string): EmailAddress => {\r\n    return email.trim() as EmailAddress;\r\n};\r\n","/* eslint-disable max-classes-per-file */\r\nexport type ErrorState = { message: string, data?: unknown, error?: unknown, retryCallback?: () => void };\r\n\r\nexport class AppError extends Error implements ErrorState {\r\n    constructor(public message: string, public data?: unknown) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class ApiError extends Error implements ErrorState {\r\n    constructor(public message: string, public data?: unknown) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class MockError extends Error implements ErrorState {\r\n    constructor(public message: string, public data?: unknown) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class NotImplementedError extends Error implements ErrorState {\r\n    constructor(public message: string = `Not Implemented`, public data?: unknown) {\r\n        super();\r\n    }\r\n}\r\n","import { shuffle } from 'utils/arrays';\r\nimport { ProblemService, Problem, ProblemResult } from './problems-service';\r\n\r\nexport const createReviewProblemService = (problemSource: ProblemService, {\r\n    maxNewReviewCount = 3,\r\n    reviewSequencePreviousLength = 1,\r\n    reviewQuestionPrefix = `🔄 `,\r\n    requiredCorrectInRow = 3,\r\n}: {\r\n    maxNewReviewCount?: number;\r\n    reviewSequencePreviousLength?: number;\r\n    reviewQuestionPrefix?: string;\r\n    requiredCorrectInRow?: number;\r\n}): ProblemService => {\r\n    const state = {\r\n        problemSourceHistory: [] as Problem[],\r\n        reviewProblems: [] as { index: number, correctsInRow: number }[],\r\n        lastReviewProblem: null as null | { index: number, correctsInRow: number },\r\n        reviewSequence: null as null | { iNext: number, iStart: number, iEnd: number },\r\n        repeatState: `new` as 'new' | 'review',\r\n    };\r\n\r\n    const startReview = () => {\r\n        console.log(`createReviewProblemService startReview`, state);\r\n        state.repeatState = `review`;\r\n    };\r\n\r\n    const getReviewProblem = (): null | Problem => {\r\n        console.log(`createReviewProblemService getReviewProblem`, state);\r\n\r\n        const rSeq = state.reviewSequence;\r\n        if (rSeq && rSeq.iNext > rSeq.iEnd) {\r\n            console.log(`createReviewProblemService getReviewProblem - End of Sequence`, { rSeq, state });\r\n            state.reviewSequence = null;\r\n        }\r\n\r\n        if (!state.reviewSequence) {\r\n            // If reached end of review problems, exit review mode\r\n            const reviewProblem = state.reviewProblems.find(x => x.index > (state.lastReviewProblem?.index ?? -1));\r\n            if (!reviewProblem) {\r\n                console.log(`createReviewProblemService getReviewProblem - No Review Problem (with greater order than last)`, { reviewProblems: state.reviewProblems, lastReviewProblem: state.lastReviewProblem, state });\r\n                state.lastReviewProblem = null;\r\n                return null;\r\n            }\r\n\r\n            const lastReviewProblemIndex = state.lastReviewProblem?.index ?? -1;\r\n            state.lastReviewProblem = reviewProblem;\r\n\r\n            console.log(`createReviewProblemService getReviewProblem - Start Review Sequence`, state);\r\n            const iStart = Math.max(0, reviewProblem.index - reviewSequencePreviousLength, lastReviewProblemIndex + 1);\r\n\r\n            state.reviewSequence = {\r\n                iNext: iStart,\r\n                iStart,\r\n                iEnd: reviewProblem.index,\r\n            };\r\n        }\r\n\r\n        // Next in sequence\r\n        const seq = state.reviewSequence;\r\n        const p = state.problemSourceHistory[seq.iNext];\r\n        seq.iNext++;\r\n\r\n        return {\r\n            ...p,\r\n            question: reviewQuestionPrefix + p.question,\r\n            answers: shuffle(p.answers),\r\n        };\r\n    };\r\n\r\n    const service: ProblemService = {\r\n        load: problemSource.load,\r\n        save: problemSource.save,\r\n\r\n        getSections: problemSource.getSections,\r\n        gotoSection: problemSource.gotoSection,\r\n\r\n        getNextProblem: (): ProblemResult => {\r\n            console.log(`createReviewProblemService getNextProblem`, state);\r\n\r\n            if (state.repeatState === `review`) {\r\n                const reviewProblem = getReviewProblem();\r\n                if (reviewProblem) {\r\n                    return { ...reviewProblem, isReview: true };\r\n                }\r\n\r\n                console.log(`createReviewProblemService getNextProblem - No Review Problem - Change Mode to NEW`, state);\r\n                state.repeatState = `new`;\r\n            }\r\n\r\n            if (state.reviewProblems.filter(x => x.correctsInRow <= 1).length >= maxNewReviewCount) {\r\n                startReview();\r\n                return service.getNextProblem();\r\n            }\r\n\r\n            const newProblem = problemSource.getNextProblem();\r\n            if (newProblem.question) {\r\n                state.problemSourceHistory.push(newProblem);\r\n            } else {\r\n                // Done - Finish Review\r\n                startReview();\r\n                return service.getNextProblem();\r\n            }\r\n            return newProblem;\r\n        },\r\n        recordAnswer: (problem, answer) => {\r\n            console.log(`createReviewProblemService recordAnswer`, state);\r\n\r\n            // if (answer.isCorrect) {\r\n\r\n            //     problemSource.recordAnswer(problem, answer);\r\n            //     return;\r\n            // }\r\n\r\n            const i = state.problemSourceHistory.findIndex(x => x.key === problem.key);\r\n            if (i < 0) {\r\n                problemSource.recordAnswer(problem, answer);\r\n                return;\r\n            }\r\n\r\n            const problemAlreadyInReview = state.reviewProblems.find(x => x.index === i);\r\n            if (answer.isCorrect) {\r\n                // Correct\r\n                if (problemAlreadyInReview) {\r\n                    problemAlreadyInReview.correctsInRow++;\r\n\r\n                    // Remove if enough corrects in a row \r\n                    state.reviewProblems = state.reviewProblems.filter(x => x.correctsInRow <= requiredCorrectInRow);\r\n                }\r\n            } else {\r\n                // Wrong \r\n                // eslint-disable-next-line no-lonely-if\r\n                if (problemAlreadyInReview) {\r\n                    problemAlreadyInReview.correctsInRow = 0;\r\n                } else {\r\n                    // Insert Review Problem in Index order\r\n                    const newReview = { index: i, correctsInRow: 0, _debug_problemKey: problem.key };\r\n                    state.reviewProblems.push(newReview);\r\n                    state.reviewProblems.sort((a, b) => a.index - b.index);\r\n                    // state.problemsToReview = distinct_key(state.problemsToReview, x => `${x.index}`);\r\n                }\r\n            }\r\n\r\n\r\n            problemSource.recordAnswer(problem, answer);\r\n        },\r\n    };\r\n\r\n    return service;\r\n};\r\n","export const websocketsApiConfig = {\r\n    websocketsApiUrl: `wss://p4w1a7ysk8.execute-api.us-east-1.amazonaws.com/prod`,\r\n};\r\n","import './index.css';\r\nimport React, { ReactNode, useRef } from 'react';\r\nimport { ThemeTextStyle, ThemeViewStyle } from 'themes/theme';\r\n\r\nfunction mergeStyles<T>(items: (T | undefined | null) | (T | T[] | undefined | null)[]): T {\r\n    if (Array.isArray(items)) {\r\n        if (items.length === 1) { return mergeStyles(items[0]) ?? {} as T; }\r\n        let item = { ...mergeStyles(items[0]) };\r\n        items.forEach(x => { item = { ...item, ...mergeStyles(x ?? {}) }; });\r\n        return (item ?? {}) as T;\r\n    }\r\n    return items as T;\r\n};\r\n\r\nconst viewStyleDefaults = {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n} as const;\r\n\r\nconst textStyleDefaults = {\r\n    whiteSpace: `pre`,\r\n} as const;\r\n\r\nconst finalizeTextStyle = <T extends unknown>(style: T) => {\r\n    const s = style as {\r\n        userSelect?: 'none';\r\n        MozUserSelect?: 'none';\r\n        WebkitUserSelect?: 'none';\r\n    };\r\n    if (s.userSelect === `none`) {\r\n        s.MozUserSelect = `none`;\r\n        s.WebkitUserSelect = `none`;\r\n    }\r\n\r\n    return style;\r\n};\r\n\r\nexport const View = (props: { style?: ThemeViewStyle | ThemeViewStyle[], children?: ReactNode }) => { return (<div style={mergeStyles([viewStyleDefaults, props.style])}>{props.children}</div>); };\r\nexport const Text = (props: { style?: ThemeTextStyle | ThemeTextStyle[], children?: string, numberOfLines?: undefined | 1 }) => {\r\n    if (props.numberOfLines === 1) {\r\n        const singleLineStyle = {\r\n            overflow: `hidden`,\r\n            whiteSpace: `nowrap`,\r\n            wordWrap: `break-word`,\r\n            textOverflow: `ellipsis`,\r\n        } as const;\r\n        const allStyles = mergeStyles([textStyleDefaults, props.style, singleLineStyle]);\r\n        return (<span style={finalizeTextStyle(allStyles)}>{props.children}</span>);\r\n    }\r\n    const allStyles = mergeStyles([textStyleDefaults, props.style]);\r\n    return (<span style={finalizeTextStyle(allStyles)}>{props.children}</span>);\r\n};\r\nexport const TextInput = (props: {\r\n    style?: ThemeTextStyle | ThemeTextStyle[];\r\n    keyboardType: 'default' | 'numeric' | 'phone-pad' | 'email-address';\r\n    autoCompleteType: 'off' | 'username' | 'password' | 'email' | 'name' | 'tel' | 'street-address' | 'postal-code';\r\n    secureTextEntry?: boolean;\r\n    placeholder?: string;\r\n    editable?: boolean;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    onSubmitEditing?: () => void;\r\n    onFocus?: () => void;\r\n    onBlur?: () => void;\r\n}) => {\r\n    const type = props.keyboardType === `numeric` ? `number`\r\n        : (props.secureTextEntry ? `password`\r\n            : `text`);\r\n\r\n    const name = props.autoCompleteType === `username` ? `username`\r\n        : (props.autoCompleteType === `password` ? `password`\r\n            : undefined);\r\n\r\n    const onKeyPress = props.onSubmitEditing && ((e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === `Enter` && !e.shiftKey) {\r\n            e.preventDefault();\r\n            props.onSubmitEditing?.();\r\n        }\r\n    }) || undefined;\r\n\r\n    return (<input type={type}\r\n        name={name} id={name}\r\n        style={mergeStyles([textStyleDefaults, props.style])}\r\n        placeholder={props.placeholder}\r\n        disabled={!(props.editable ?? true)}\r\n        value={props.value}\r\n        onFocus={props.onFocus}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        onKeyPress={onKeyPress}\r\n        onBlur={props.onBlur}\r\n    />);\r\n\r\n};\r\nexport const TouchableOpacity = (props: { style?: ThemeViewStyle | ThemeViewStyle[], children?: ReactNode, onPress: () => void }) => {\r\n\r\n    // Prevent Initial Press (already pressing when created)\r\n    const lastPressTime = useRef(Date.now());\r\n    const onPress = () => {\r\n        // Prevent duplicate triggers\r\n        if (Date.now() < lastPressTime.current + 250) {\r\n            // console.log(`TouchableOpacity - prevented duplicate trigger`, { lastPressTime: lastPressTime.current, now: Date.now() });\r\n            return;\r\n        }\r\n        lastPressTime.current = Date.now();\r\n\r\n        props.onPress();\r\n    };\r\n\r\n    const hasTouchStarted = useRef(true);\r\n\r\n    return (\r\n        <div style={mergeStyles([viewStyleDefaults, props.style])}\r\n            onClick={onPress}\r\n            onKeyPress={onPress}\r\n            onTouchStart={() => { hasTouchStarted.current = true; }}\r\n            onTouchMove={() => { hasTouchStarted.current = false; }}\r\n            onTouchEnd={() => { if (hasTouchStarted.current) { onPress(); } }}\r\n            role='button'\r\n            tabIndex={0}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Pressable = (props: { style?: ThemeViewStyle | ThemeViewStyle[], children?: ReactNode, onPressIn: () => void, onPressOut: () => void }) => {\r\n\r\n    const onIgnore = (e: React.MouseEvent | React.TouchEvent) => {\r\n        e.preventDefault();\r\n        e.stopPropagation?.();\r\n        (e as unknown as { [key: string]: boolean }).cancelBubble = true;\r\n        (e as unknown as { [key: string]: boolean }).returnValue = false;\r\n        return false;\r\n    };\r\n\r\n    const onPressIn = (e: React.MouseEvent | React.TouchEvent) => {\r\n        props.onPressIn();\r\n        return onIgnore(e);\r\n    };\r\n    const onPressOut = (e: React.MouseEvent | React.TouchEvent) => {\r\n        props.onPressOut();\r\n        return onIgnore(e);\r\n    };\r\n\r\n    return (\r\n        <div style={mergeStyles([viewStyleDefaults, props.style])}\r\n            onMouseDown={onPressIn}\r\n            onMouseUp={onPressOut}\r\n            onTouchStart={onPressIn}\r\n            onTouchEnd={onPressOut}\r\n            onTouchCancel={onPressOut}\r\n            onTouchMove={onIgnore}\r\n            onMouseLeave={onPressOut}\r\n            onTouchEndCapture={onPressOut}\r\n            role='button'\r\n            tabIndex={0}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const ActivityIndicator = ({ size, color }: { size: 'large' | 'small', color: string }) => {\r\n    const sizePx = size === `small` ? 16 : 32;\r\n    return (\r\n        <CircleSvg size={sizePx} thickness={sizePx / 8} color={color} />\r\n    );\r\n};\r\n\r\n// Based on: https://glennmccomb.com/articles/building-a-pure-css-animated-svg-spinner/\r\nconst CircleSvg = ({ size, thickness, color }: { size: number, thickness: number, color: string }) => {\r\n    const circumference = 2 * Math.PI * (size - thickness) * 0.5;\r\n    const dashLength = circumference * 0.6;\r\n    return (\r\n        <svg style={{ maxWidth: size }} viewBox={`0 0 ${size} ${size}`} xmlns='http://www.w3.org/2000/svg'>\r\n            <circle style={{\r\n                fill: `transparent`,\r\n                stroke: color,\r\n                strokeWidth: thickness,\r\n                opacity: 0.5,\r\n            }} cx={size * 0.5} cy={size * 0.5} r={size * 0.5 - thickness} />\r\n            <circle className='activity-spinner' style={{\r\n                strokeDasharray: dashLength,\r\n                fill: `transparent`,\r\n                stroke: color,\r\n                strokeWidth: thickness,\r\n                transformOrigin: `${size * 0.5}px ${size * 0.5}px`,\r\n            }} cx={size * 0.5} cy={size * 0.5} r={size * 0.5 - thickness} />\r\n        </svg>\r\n    );\r\n};\r\n\r\n\r\nexport const Platform = {\r\n    OS: `web` as 'web' | 'ios' | 'android',\r\n};\r\n\r\nexport const Clipboard = {\r\n    setString: async (value: string) => { await navigator.clipboard.writeText(value); },\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Text, View, ActivityIndicator, TouchableOpacity } from 'react-native-lite';\r\nimport { SpeechService } from './speech';\r\n\r\nexport const VoiceChooser = ({ languange, speechService }: { languange: string, speechService: SpeechService }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [renderId, setRenderId] = useState(0);\r\n\r\n    const refresh = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n    };\r\n\r\n    useEffect(() => {\r\n        refresh();\r\n    }, []);\r\n\r\n    const selectVoice = (voice: SpeechSynthesisVoice) => {\r\n        speechService.setVoiceForLanguange(languange, voice);\r\n        setRenderId(s => s + 1);\r\n        speechService.speak(voice.name, languange);\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <TouchableOpacity onPress={refresh}>\r\n                <Text style={{ fontSize: 24 }}>{`Voice for ${languange}`}</Text>\r\n            </TouchableOpacity>\r\n            {loading && <ActivityIndicator size='small' color='red' />}\r\n            {!loading && (\r\n                <>\r\n                    {speechService.getVoicesForLanguange(languange).map(x => (\r\n                        <TouchableOpacity key={x.voice.name} onPress={() => { selectVoice(x.voice); }}>\r\n                            <View>\r\n                                <Text style={{ margin: 4, fontSize: 14, whiteSpace: `normal` }} >{`${x.isSelected ? `✅` : `🔲`} ${x.voice.lang} - ${x.voice.name} - ${x.voice.localService ? `local` : `web`}`}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { shuffle } from 'utils/arrays';\r\n\r\nconst englishKeyboard = {\r\n    rows: [\r\n        { keys: `qwertyuiop`.split(``) },\r\n        { keys: ` asdfghjkl`.split(``) },\r\n        { keys: `  zxcvbnm `.split(``) },\r\n    ],\r\n};\r\n\r\nconst styles = {\r\n    container: {},\r\n    rowView: { flex: 1, flexDirection: `row` },\r\n    keyView: {\r\n        margin: 2,\r\n        padding: 2,\r\n        // width: 20,\r\n        flex: 1,\r\n        height: 20,\r\n        backgroundColor: `#111111`,\r\n        justifyContent: `center`,\r\n        alignItems: `center`,\r\n    },\r\n    keyView_disabled: { opacity: 0.5 },\r\n    keyText: {\r\n        fontSize: 16,\r\n    },\r\n    keyText_wrong: {\r\n        fontSize: 16,\r\n        color: `#FF0000`,\r\n    },\r\n} as const;\r\n\r\nexport const KeyboardSimplified = ({ expectedCharacter, showHints, onExpectedKeyPress }: { expectedCharacter: string, showHints: boolean, onExpectedKeyPress: () => void }) => {\r\n    const keyboard = englishKeyboard;\r\n\r\n    const [hintKeys, setHintKeys] = useState(null as null | string[]);\r\n    const [wrongKeys, setWrongKeys] = useState([] as string[]);\r\n    useEffect(() => {\r\n        if (!showHints) { setHintKeys(null); }\r\n\r\n        const hints = [expectedCharacter, ...shuffle(keyboard.rows.flatMap(x => x.keys).map(x => x.trim()).filter(x => x)).slice(0, 3)];\r\n        setHintKeys(hints);\r\n        setWrongKeys([]);\r\n    }, [expectedCharacter, showHints]);\r\n\r\n    const onKeyPress = (key: string) => {\r\n        if (key === expectedCharacter) {\r\n            onExpectedKeyPress();\r\n            return;\r\n        }\r\n        // Remove from choices\r\n        if (showHints) {\r\n            setHintKeys(s => (s ?? []).filter(x => x !== key));\r\n            setWrongKeys(s => [...s, key]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={styles.container}>\r\n                {keyboard.rows.map((row, iRow) => (\r\n                    <View style={styles.rowView} key={`${iRow}`} >\r\n                        {row.keys.map((k, i) => (\r\n                            <TouchableOpacity key={`${k}${i}`} style={{ outline: `none` }} onPress={() => onKeyPress(k)}>\r\n                                <View style={!hintKeys || hintKeys.includes(k) ? {} : styles.keyView_disabled} >\r\n                                    <View style={styles.keyView}>\r\n                                        <Text style={wrongKeys.includes(k) ? styles.keyText_wrong : styles.keyText}>{k}</Text>\r\n                                    </View>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        ))}\r\n                    </View>\r\n                ))}\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { DoodleDrawing, defaultDoodleDrawing, DoodleData } from './doodle';\r\nimport { DoodleDrawerView, DoodleDisplayView } from './doodle-view';\r\nimport { KeyboardSimplified } from './keyboard-simplified';\r\n\r\nexport const styles = {\r\n    container: {\r\n        alignItems: `center`,\r\n    },\r\n    drawing: {\r\n        width: 312,\r\n        height: 312,\r\n        color: `#FFFFFF`,\r\n        backgroundColor: `#000000`,\r\n    },\r\n    drawingChoicesView: {\r\n        maxWidth: 312 + 4 * 4 + 4,\r\n        flexDirection: `row`,\r\n        flexWrap: `wrap`,\r\n    },\r\n    drawingChoiceWrapper: {\r\n        padding: 4,\r\n    },\r\n    drawingChoice: {\r\n        width: 78,\r\n        height: 78,\r\n        color: `#FFFFFF`,\r\n        backgroundColor: `#000000`,\r\n    },\r\n    titleView: {\r\n        justifyContent: `center`,\r\n        alignItems: `center`,\r\n    },\r\n    titleText: {\r\n        fontSize: 20,\r\n        color: `#FFFFFF`,\r\n    },\r\n    promptView: {\r\n        justifyContent: `center`,\r\n        alignItems: `center`,\r\n    },\r\n    promptText: {\r\n        fontSize: 20,\r\n        color: `#FFFF00`,\r\n    },\r\n    hintText: {\r\n        fontSize: 14,\r\n        color: `#FFFF00`,\r\n    },\r\n    buttonRowView: {\r\n        flexDirection: `row`,\r\n    },\r\n    buttonView: {\r\n        margin: 4,\r\n        padding: 8,\r\n        backgroundColor: `#111111`,\r\n    },\r\n    buttonText: {\r\n        fontSize: 20,\r\n        color: `#FFFF00`,\r\n    },\r\n} as const;\r\n\r\nexport const DoodleGameView_DrawWord = (props: { prompt: string, hint?: string, onDone: (drawing: DoodleDrawing) => void, onSkip?: () => void }) => {\r\n    const [drawing, setDrawing] = useState(defaultDoodleDrawing());\r\n    const changeDoodle = (value: DoodleDrawing) => {\r\n        setDrawing(value);\r\n    };\r\n\r\n    const done = () => {\r\n        props.onDone(drawing);\r\n    };\r\n    const skip = () => {\r\n        props.onSkip?.();\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Reset problem when prompt changes\r\n        setDrawing(defaultDoodleDrawing());\r\n    }, [props.prompt]);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.titleView}>\r\n                <Text style={styles.titleText}>Draw</Text>\r\n            </View>\r\n            <DoodleDrawerView style={styles.drawing} drawing={drawing} onChange={changeDoodle} />\r\n            <View style={styles.promptView}>\r\n                <Text style={styles.promptText}>{props.prompt}</Text>\r\n                {!!props.hint && (<Text style={styles.hintText}>{props.hint}</Text>)}\r\n            </View>\r\n            <View style={styles.buttonRowView}>\r\n                {!!props.onSkip && (\r\n                    <TouchableOpacity onPress={skip}>\r\n                        <View style={styles.buttonView}>\r\n                            <Text style={styles.buttonText}>Skip</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                )}\r\n                <TouchableOpacity onPress={done}>\r\n                    <View style={styles.buttonView}>\r\n                        <Text style={styles.buttonText}>Done</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const DoodleGameView_ChooseBest = (props: { prompt: string, drawings: DoodleData[], onChooseBest: (drawing: DoodleData) => void }) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.titleView}>\r\n                <Text style={styles.titleText}>Choose Best</Text>\r\n            </View>\r\n            <View style={styles.promptView}>\r\n                <Text style={styles.promptText}>{props.prompt}</Text>\r\n            </View>\r\n            <View style={styles.drawingChoicesView} >\r\n                {props.drawings.map(x => (\r\n                    <TouchableOpacity key={x.key} onPress={() => props.onChooseBest(x)}>\r\n                        <View style={styles.drawingChoiceWrapper} >\r\n                            <DoodleDisplayView style={styles.drawingChoice} drawing={x.drawing} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                ))}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst typeStyles = {\r\n    completedText: {\r\n        fontSize: 16,\r\n        color: `#FFFF00`,\r\n    },\r\n} as const;\r\nexport const DoodleGameView_TypeExpected = (props: { prompt: string, drawings: DoodleData[], onDone: () => void, sayAgain: () => void }) => {\r\n\r\n    const [status, setStatus] = useState({ completed: ``, remaining: props.prompt });\r\n    useEffect(() => {\r\n        setStatus({ completed: ``, remaining: props.prompt });\r\n    }, [props.prompt, props.drawings]);\r\n\r\n    const onExpectedKeyPress = () => {\r\n        setStatus(s => {\r\n            if (s.remaining.length <= 1) {\r\n                props.onDone();\r\n            }\r\n            const nextChar = s.remaining[0];\r\n            return {\r\n                completed: s.completed + nextChar,\r\n                remaining: s.remaining.substr(1),\r\n            };\r\n        });\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.titleView}>\r\n                <Text style={styles.titleText}>Type Word</Text>\r\n            </View>\r\n            <View style={styles.drawingChoicesView} >\r\n                {props.drawings.map(x => (\r\n                    <View key={x.key} style={styles.drawingChoiceWrapper} >\r\n                        <DoodleDisplayView style={styles.drawingChoice} drawing={x.drawing} />\r\n                    </View>\r\n                ))}\r\n            </View>\r\n            <TouchableOpacity onPress={props.sayAgain}>\r\n                <View style={styles.buttonView}>\r\n                    <Text style={styles.buttonText}>Say Again</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            <View>\r\n                <Text style={typeStyles.completedText}>{`${status.completed}${status.remaining.length > 0 ? `_` : ``}`}</Text>\r\n            </View>\r\n            <KeyboardSimplified expectedCharacter={status.remaining[0] ?? ` `} showHints onExpectedKeyPress={onExpectedKeyPress} />\r\n        </View>\r\n    );\r\n};\r\n","\r\nexport type Subscription<T> = (state: T) => void;\r\n\r\nexport const createSubscribable = <T>(initialState?: T) => {\r\n    let lastState = initialState;\r\n    const callbacks = [] as (null | Subscription<T>)[];\r\n    const subscribe = (callback: Subscription<T>) => {\r\n        const i = callbacks.length;\r\n        callbacks.push(callback);\r\n\r\n        // Send Initial State if it exists\r\n        setTimeout(() => {\r\n            if (!lastState) { return; }\r\n            callback(lastState);\r\n        });\r\n\r\n        return {\r\n            unsubscribe: () => {\r\n                callbacks[i] = null;\r\n            },\r\n        };\r\n    };\r\n    const onStateChange = (state: T) => {\r\n        lastState = state;\r\n        callbacks.forEach(x => x?.(state));\r\n    };\r\n    return {\r\n        subscribe,\r\n        onStateChange,\r\n    };\r\n};\r\n","export type DoodleDrawingStorageService = {\r\n    saveDrawing: (prompt: string, drawing: DoodleDrawing) => Promise<void>;\r\n    saveBestDrawingSelection: (doodle: DoodleData) => Promise<void>;\r\n    getDrawings: (prompt: string, options?: { includeOtherPrompts?: boolean, maxCount?: number }) => Promise<{ doodles: DoodleData[] }>;\r\n    getAllDrawings: () => Promise<{ doodles: DoodleDataWithScore[] }>;\r\n};\r\n\r\n\r\nexport type DoodleSummaryDataJson = {\r\n    doodles: DoodleData_EncodedWithScore[];\r\n};\r\nexport type DoodleData_EncodedWithScore = DoodleData_Encoded & {\r\n    s: number;\r\n};\r\n\r\nexport type DoodleUserDrawingDataJson = {\r\n    doodles: DoodleData_Encoded[];\r\n};\r\n\r\nexport type DoodleUserVotesDataJson = {\r\n    doodleVotes: DoodleScoreVote[];\r\n};\r\n\r\nexport type DoodleScoreVote = {\r\n    // Doodle Key\r\n    k: string;\r\n    // Doodle Timestamp\r\n    t: number;\r\n};\r\n\r\nexport type DoodleScore = {\r\n    doodleKey: string;\r\n    score: number;\r\n};\r\n\r\nexport type DoodleDataWithScore = {\r\n    key: string;\r\n    drawing: DoodleDrawing;\r\n    prompt: string;\r\n    timestamp: number;\r\n    score: number;\r\n};\r\n\r\nexport type DoodleData = {\r\n    key: string;\r\n    drawing: DoodleDrawing;\r\n    prompt: string;\r\n    timestamp: number;\r\n};\r\nexport type DoodleData_Encoded = {\r\n    // Doodle Key\r\n    k: string;\r\n    // Doodle Drawing\r\n    d: DoodleDrawingEncoded;\r\n    // Prompt\r\n    p: string;\r\n    // Doodle Timestamp\r\n    t: number;\r\n};\r\n\r\nexport type DoodleDrawing = {\r\n    width: number;\r\n    height: number;\r\n    segments: DoodleSegment[];\r\n};\r\nexport type DoodleSegment = {\r\n    points: { x: number, y: number }[];\r\n};\r\n\r\n// const sampleDrawing: DoodleDrawing = {\r\n//     width: 128,\r\n//     height: 128,\r\n//     segments: [{\r\n//         points: [\r\n//             { x: 10, y: 10 },\r\n//             { x: 50, y: 10 },\r\n//             { x: 50, y: 50 },\r\n//             { x: 10, y: 50 },\r\n//             { x: 10, y: 10 },\r\n//         ],\r\n//     }],\r\n// };\r\n\r\nexport const defaultDoodleDrawing = (): DoodleDrawing => ({\r\n    width: 104,\r\n    height: 104,\r\n    segments: [],\r\n});\r\n\r\nexport type DoodleDrawingEncoded = {\r\n    doodleText: string;\r\n};\r\ntype DoodleDrawingEncodedObj = {\r\n    w: number;\r\n    h: number;\r\n    s: {\r\n        x: number;\r\n        y: number;\r\n        p: string;\r\n    }[];\r\n};\r\nconst encodeDoodleSegmentPoints = (points: { x: number, y: number }[]): string => {\r\n    if (points.length <= 0) { return ``; }\r\n    let last = points[0];\r\n    let t = ``;\r\n\r\n    points.slice(1).forEach(p => {\r\n        t += `${p.x - last.x},${p.y - last.y};`;\r\n        last = p;\r\n    });\r\n\r\n    return t;\r\n};\r\nconst decodeDoodleSegmentPoints = (x: number, y: number, pointsString: string): { x: number, y: number }[] => {\r\n    if (!pointsString) { return [{ x, y }]; }\r\n    let last = { x, y };\r\n    const pointRelPos = pointsString.split(`;`).filter(p => p);\r\n    const points = pointRelPos.map(p => {\r\n        const parts = p.split(`,`);\r\n        const point = {\r\n            x: last.x + Number.parseInt(parts[0], 10),\r\n            y: last.y + Number.parseInt(parts[1], 10),\r\n        };\r\n        last = point;\r\n        return point;\r\n    });\r\n\r\n    return [...points];\r\n};\r\n\r\nexport const encodeDoodleDrawing = (doodle: DoodleDrawing): DoodleDrawingEncoded => {\r\n    const o: DoodleDrawingEncodedObj = {\r\n        w: doodle.width,\r\n        h: doodle.height,\r\n        s: doodle.segments.map(x => ({\r\n            x: x.points[0].x,\r\n            y: x.points[0].y,\r\n            p: encodeDoodleSegmentPoints(x.points),\r\n        })),\r\n    };\r\n    return { doodleText: JSON.stringify(o) };\r\n};\r\nexport const decodeDoodleDrawing = (doodle: DoodleDrawingEncoded): DoodleDrawing => {\r\n    const o: DoodleDrawingEncodedObj = JSON.parse(doodle.doodleText) as DoodleDrawingEncodedObj;\r\n    return {\r\n        width: o.w,\r\n        height: o.h,\r\n        segments: o.s.map(p => {\r\n            return {\r\n                points: [{ x: p.x, y: p.y }, ...decodeDoodleSegmentPoints(p.x, p.y, p.p)],\r\n            };\r\n        }),\r\n    };\r\n};\r\n\r\n\r\n// const doodleSegmentToSvgPath_bezier = (segment: DoodleSegment) => {\r\n//     const delta1 = {\r\n//         x: segment.points[2].x - segment.points[1].x,\r\n//         y: segment.points[2].y - segment.points[1].y,\r\n//     };\r\n//     const controlPoint = {\r\n//         x: segment.points[1].x - delta1.x * 0.5,\r\n//         y: segment.points[1].y - delta1.y * 0.5,\r\n//     };\r\n//     return `M${segment.points[0].x} ${segment.points[0].y} Q${controlPoint.x} ${controlPoint.y} ${segment.points[1].x} ${segment.points[1].y}T${segment.points.slice(2, -1).map(p => `${p.x} ${p.y}`).join(` `)}`;\r\n// };\r\n\r\n\r\nexport const doodleSegmentToSvgPath_line = (segment: DoodleSegment) => {\r\n    if (segment.points.length <= 0) { return ``; }\r\n    if (segment.points.length === 1) { return `M${segment.points[0].x} ${segment.points[0].y} L${segment.points[0].x} ${segment.points[0].y}`; }\r\n\r\n    let last = segment.points[0];\r\n    return `M${segment.points[0].x} ${segment.points[0].y} l${segment.points.slice(1).map(p => {\r\n        const t = `${p.x - last.x} ${p.y - last.y}`;\r\n        last = p;\r\n        return t;\r\n    }).join(` `)}`;\r\n};\r\n\r\nexport const doodleToSvg = (drawing: DoodleDrawing) => {\r\n    // preserveAspectRatio='none' stroke='#000000' fill='transparent' xmlns='http://www.w3.org/2000/svg'\r\n    return `\r\n<svg viewBox='0 0 ${drawing.width} ${drawing.height}' stroke='#000000' fill='transparent'>\r\n    ${drawing.segments.map((x, i) => (\r\n        `<path d='${doodleSegmentToSvgPath_line(x)}' />`\r\n    )).join(``)}\r\n</svg>\r\n    `.trim();\r\n};\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : (global = global || self, factory(global.ReactStripe = {}, global.React));\n})(this, function (exports, React) {\n  'use strict';\n\n  React = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n      return;\n    }\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  var ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\n  function emptyFunction() {}\n\n  function emptyFunctionWithReset() {}\n\n  emptyFunctionWithReset.resetWarningCache = emptyFunction;\n\n  var factoryWithThrowingShims = function factoryWithThrowingShims() {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret === ReactPropTypesSecret_1) {\n        // It is still safe when called from React.\n        return;\n      }\n\n      var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n      err.name = 'Invariant Violation';\n      throw err;\n    }\n\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    } // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      elementType: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim,\n      exact: getShim,\n      checkPropTypes: emptyFunctionWithReset,\n      resetWarningCache: emptyFunction\n    };\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n\n  var propTypes = createCommonjsModule(function (module) {\n    /**\n     * Copyright (c) 2013-present, Facebook, Inc.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n    {\n      // By explicitly using `prop-types` you are opting into new production behavior.\n      // http://fb.me/prop-types-in-prod\n      module.exports = factoryWithThrowingShims();\n    }\n  });\n\n  var isUnknownObject = function isUnknownObject(raw) {\n    return raw !== null && _typeof(raw) === 'object';\n  };\n\n  var isPromise = function isPromise(raw) {\n    return isUnknownObject(raw) && typeof raw.then === 'function';\n  }; // We are using types to enforce the `stripe` prop in this lib,\n  // but in an untyped integration `stripe` could be anything, so we need\n  // to do some sanity validation to prevent type errors.\n\n\n  var isStripe = function isStripe(raw) {\n    return isUnknownObject(raw) && typeof raw.elements === 'function' && typeof raw.createToken === 'function' && typeof raw.createPaymentMethod === 'function' && typeof raw.confirmCardPayment === 'function';\n  };\n\n  var PLAIN_OBJECT_STR = '[object Object]';\n\n  var isEqual = function isEqual(left, right) {\n    if (!isUnknownObject(left) || !isUnknownObject(right)) {\n      return left === right;\n    }\n\n    var leftArray = Array.isArray(left);\n    var rightArray = Array.isArray(right);\n    if (leftArray !== rightArray) return false;\n    var leftPlainObject = Object.prototype.toString.call(left) === PLAIN_OBJECT_STR;\n    var rightPlainObject = Object.prototype.toString.call(right) === PLAIN_OBJECT_STR;\n    if (leftPlainObject !== rightPlainObject) return false;\n    if (!leftPlainObject && !leftArray) return false;\n    var leftKeys = Object.keys(left);\n    var rightKeys = Object.keys(right);\n    if (leftKeys.length !== rightKeys.length) return false;\n    var keySet = {};\n\n    for (var i = 0; i < leftKeys.length; i += 1) {\n      keySet[leftKeys[i]] = true;\n    }\n\n    for (var _i = 0; _i < rightKeys.length; _i += 1) {\n      keySet[rightKeys[_i]] = true;\n    }\n\n    var allKeys = Object.keys(keySet);\n\n    if (allKeys.length !== leftKeys.length) {\n      return false;\n    }\n\n    var l = left;\n    var r = right;\n\n    var pred = function pred(key) {\n      return isEqual(l[key], r[key]);\n    };\n\n    return allKeys.every(pred);\n  };\n\n  var usePrevious = function usePrevious(value) {\n    var ref = React.useRef(value);\n    React.useEffect(function () {\n      ref.current = value;\n    }, [value]);\n    return ref.current;\n  };\n\n  var INVALID_STRIPE_ERROR = 'Invalid prop `stripe` supplied to `Elements`. We recommend using the `loadStripe` utility from `@stripe/stripe-js`. See https://stripe.com/docs/stripe-js/react#elements-props-stripe for details.'; // We are using types to enforce the `stripe` prop in this lib, but in a real\n  // integration `stripe` could be anything, so we need to do some sanity\n  // validation to prevent type errors.\n\n  var validateStripe = function validateStripe(maybeStripe) {\n    if (maybeStripe === null || isStripe(maybeStripe)) {\n      return maybeStripe;\n    }\n\n    throw new Error(INVALID_STRIPE_ERROR);\n  };\n\n  var parseStripeProp = function parseStripeProp(raw) {\n    if (isPromise(raw)) {\n      return {\n        tag: 'async',\n        stripePromise: Promise.resolve(raw).then(validateStripe)\n      };\n    }\n\n    var stripe = validateStripe(raw);\n\n    if (stripe === null) {\n      return {\n        tag: 'empty'\n      };\n    }\n\n    return {\n      tag: 'sync',\n      stripe: stripe\n    };\n  };\n\n  var ElementsContext = React.createContext(null);\n  ElementsContext.displayName = 'ElementsContext';\n\n  var parseElementsContext = function parseElementsContext(ctx, useCase) {\n    if (!ctx) {\n      throw new Error(\"Could not find Elements context; You need to wrap the part of your app that \".concat(useCase, \" in an <Elements> provider.\"));\n    }\n\n    return ctx;\n  };\n  /**\n   * The `Elements` provider allows you to use [Element components](https://stripe.com/docs/stripe-js/react#element-components) and access the [Stripe object](https://stripe.com/docs/js/initializing) in any nested component.\n   * Render an `Elements` provider at the root of your React app so that it is available everywhere you need it.\n   *\n   * To use the `Elements` provider, call `loadStripe` from `@stripe/stripe-js` with your publishable key.\n   * The `loadStripe` function will asynchronously load the Stripe.js script and initialize a `Stripe` object.\n   * Pass the returned `Promise` to `Elements`.\n   *\n   * @docs https://stripe.com/docs/stripe-js/react#elements-provider\n   */\n\n\n  var Elements = function Elements(_ref) {\n    var rawStripeProp = _ref.stripe,\n        options = _ref.options,\n        children = _ref.children;\n\n    var _final = React.useRef(false);\n\n    var isMounted = React.useRef(true);\n    var parsed = React.useMemo(function () {\n      return parseStripeProp(rawStripeProp);\n    }, [rawStripeProp]);\n\n    var _React$useState = React.useState(function () {\n      return {\n        stripe: null,\n        elements: null\n      };\n    }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        ctx = _React$useState2[0],\n        setContext = _React$useState2[1];\n\n    var prevStripe = usePrevious(rawStripeProp);\n    var prevOptions = usePrevious(options);\n\n    if (prevStripe !== null) {\n      if (prevStripe !== rawStripeProp) {\n        console.warn('Unsupported prop change on Elements: You cannot change the `stripe` prop after setting it.');\n      }\n\n      if (!isEqual(options, prevOptions)) {\n        console.warn('Unsupported prop change on Elements: You cannot change the `options` prop after setting the `stripe` prop.');\n      }\n    }\n\n    if (!_final.current) {\n      if (parsed.tag === 'sync') {\n        _final.current = true;\n        setContext({\n          stripe: parsed.stripe,\n          elements: parsed.stripe.elements(options)\n        });\n      }\n\n      if (parsed.tag === 'async') {\n        _final.current = true;\n        parsed.stripePromise.then(function (stripe) {\n          if (stripe && isMounted.current) {\n            // Only update Elements context if the component is still mounted\n            // and stripe is not null. We allow stripe to be null to make\n            // handling SSR easier.\n            setContext({\n              stripe: stripe,\n              elements: stripe.elements(options)\n            });\n          }\n        });\n      }\n    }\n\n    React.useEffect(function () {\n      return function () {\n        isMounted.current = false;\n      };\n    }, []);\n    React.useEffect(function () {\n      var anyStripe = ctx.stripe;\n\n      if (!anyStripe || !anyStripe._registerWrapper) {\n        return;\n      }\n\n      anyStripe._registerWrapper({\n        name: 'react-stripe-js',\n        version: \"1.1.2\"\n      });\n    }, [ctx.stripe]);\n    return React.createElement(ElementsContext.Provider, {\n      value: ctx\n    }, children);\n  };\n\n  var useElementsContextWithUseCase = function useElementsContextWithUseCase(useCaseMessage) {\n    var ctx = React.useContext(ElementsContext);\n    return parseElementsContext(ctx, useCaseMessage);\n  };\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#useelements-hook\n   */\n\n\n  var useElements = function useElements() {\n    var _useElementsContextWi = useElementsContextWithUseCase('calls useElements()'),\n        elements = _useElementsContextWi.elements;\n\n    return elements;\n  };\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#usestripe-hook\n   */\n\n\n  var useStripe = function useStripe() {\n    var _useElementsContextWi2 = useElementsContextWithUseCase('calls useStripe()'),\n        stripe = _useElementsContextWi2.stripe;\n\n    return stripe;\n  };\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#elements-consumer\n   */\n\n\n  var ElementsConsumer = function ElementsConsumer(_ref2) {\n    var children = _ref2.children;\n    var ctx = useElementsContextWithUseCase('mounts <ElementsConsumer>'); // Assert to satisfy the busted React.FC return type (it should be ReactNode)\n\n    return children(ctx);\n  };\n\n  ElementsConsumer.propTypes = {\n    children: propTypes.func.isRequired\n  };\n\n  var useCallbackReference = function useCallbackReference(cb) {\n    var ref = React.useRef(cb);\n    React.useEffect(function () {\n      ref.current = cb;\n    }, [cb]);\n    return function () {\n      if (ref.current) {\n        ref.current.apply(ref, arguments);\n      }\n    };\n  };\n\n  var extractUpdateableOptions = function extractUpdateableOptions(options) {\n    if (!isUnknownObject(options)) {\n      return {};\n    }\n\n    var _ = options.paymentRequest,\n        rest = _objectWithoutProperties(options, [\"paymentRequest\"]);\n\n    return rest;\n  };\n\n  var noop = function noop() {};\n\n  var capitalized = function capitalized(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  var createElementComponent = function createElementComponent(type, isServer) {\n    var displayName = \"\".concat(capitalized(type), \"Element\");\n\n    var ClientElement = function ClientElement(_ref) {\n      var id = _ref.id,\n          className = _ref.className,\n          _ref$options = _ref.options,\n          options = _ref$options === void 0 ? {} : _ref$options,\n          _ref$onBlur = _ref.onBlur,\n          onBlur = _ref$onBlur === void 0 ? noop : _ref$onBlur,\n          _ref$onFocus = _ref.onFocus,\n          onFocus = _ref$onFocus === void 0 ? noop : _ref$onFocus,\n          _ref$onReady = _ref.onReady,\n          onReady = _ref$onReady === void 0 ? noop : _ref$onReady,\n          _ref$onChange = _ref.onChange,\n          onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n          _ref$onEscape = _ref.onEscape,\n          onEscape = _ref$onEscape === void 0 ? noop : _ref$onEscape,\n          _ref$onClick = _ref.onClick,\n          onClick = _ref$onClick === void 0 ? noop : _ref$onClick;\n\n      var _useElementsContextWi = useElementsContextWithUseCase(\"mounts <\".concat(displayName, \">\")),\n          elements = _useElementsContextWi.elements;\n\n      var elementRef = React.useRef(null);\n      var domNode = React.useRef(null);\n      var callOnReady = useCallbackReference(onReady);\n      var callOnBlur = useCallbackReference(onBlur);\n      var callOnFocus = useCallbackReference(onFocus);\n      var callOnClick = useCallbackReference(onClick);\n      var callOnChange = useCallbackReference(onChange);\n      var callOnEscape = useCallbackReference(onEscape);\n      React.useLayoutEffect(function () {\n        if (elementRef.current == null && elements && domNode.current != null) {\n          var element = elements.create(type, options);\n          elementRef.current = element;\n          element.mount(domNode.current);\n          element.on('ready', function () {\n            return callOnReady(element);\n          });\n          element.on('change', callOnChange);\n          element.on('blur', callOnBlur);\n          element.on('focus', callOnFocus);\n          element.on('escape', callOnEscape); // Users can pass an an onClick prop on any Element component\n          // just as they could listen for the `click` event on any Element,\n          // but only the PaymentRequestButton will actually trigger the event.\n\n          element.on('click', callOnClick);\n        }\n      });\n      var prevOptions = React.useRef(options);\n      React.useEffect(function () {\n        if (prevOptions.current && prevOptions.current.paymentRequest !== options.paymentRequest) {\n          console.warn('Unsupported prop change: options.paymentRequest is not a customizable property.');\n        }\n\n        var updateableOptions = extractUpdateableOptions(options);\n\n        if (Object.keys(updateableOptions).length !== 0 && !isEqual(updateableOptions, extractUpdateableOptions(prevOptions.current))) {\n          if (elementRef.current) {\n            elementRef.current.update(updateableOptions);\n            prevOptions.current = options;\n          }\n        }\n      }, [options]);\n      React.useEffect(function () {\n        return function () {\n          if (elementRef.current) {\n            elementRef.current.destroy();\n          }\n        };\n      }, []);\n      return React.createElement(\"div\", {\n        id: id,\n        className: className,\n        ref: domNode\n      });\n    }; // Only render the Element wrapper in a server environment.\n\n\n    var ServerElement = function ServerElement(props) {\n      // Validate that we are in the right context by calling useElementsContextWithUseCase.\n      useElementsContextWithUseCase(\"mounts <\".concat(displayName, \">\"));\n      var id = props.id,\n          className = props.className;\n      return React.createElement(\"div\", {\n        id: id,\n        className: className\n      });\n    };\n\n    var Element = isServer ? ServerElement : ClientElement;\n    Element.propTypes = {\n      id: propTypes.string,\n      className: propTypes.string,\n      onChange: propTypes.func,\n      onBlur: propTypes.func,\n      onFocus: propTypes.func,\n      onReady: propTypes.func,\n      onClick: propTypes.func,\n      options: propTypes.object\n    };\n    Element.displayName = displayName;\n    Element.__elementType = type;\n    return Element;\n  };\n\n  var isServer = typeof window === 'undefined';\n  /**\n   * Requires beta access:\n   * Contact [Stripe support](https://support.stripe.com/) for more information.\n   *\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var AuBankAccountElement = createElementComponent('auBankAccount', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardElement = createElementComponent('card', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardNumberElement = createElementComponent('cardNumber', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardExpiryElement = createElementComponent('cardExpiry', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardCvcElement = createElementComponent('cardCvc', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var FpxBankElement = createElementComponent('fpxBank', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var IbanElement = createElementComponent('iban', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var IdealBankElement = createElementComponent('idealBank', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var PaymentRequestButtonElement = createElementComponent('paymentRequestButton', isServer);\n  exports.AuBankAccountElement = AuBankAccountElement;\n  exports.CardCvcElement = CardCvcElement;\n  exports.CardElement = CardElement;\n  exports.CardExpiryElement = CardExpiryElement;\n  exports.CardNumberElement = CardNumberElement;\n  exports.Elements = Elements;\n  exports.ElementsConsumer = ElementsConsumer;\n  exports.FpxBankElement = FpxBankElement;\n  exports.IbanElement = IbanElement;\n  exports.IdealBankElement = IdealBankElement;\n  exports.PaymentRequestButtonElement = PaymentRequestButtonElement;\n  exports.useElements = useElements;\n  exports.useStripe = useStripe;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","export type PhoneNumber = string & { __type: 'PhoneNumber', format: '+19785551234' };\r\nexport type PhoneNumberFormatted = string & { __type: 'PhoneNumber', format: '(###) ###-####' };\r\n\r\nexport function formatPhoneNumber_UsaCanada(text: string): PhoneNumberFormatted {\r\n    return phoneNumberMask_UsaCanada(text).corrected as PhoneNumberFormatted;\r\n}\r\n\r\nexport function toStandardPhoneNumber(text: string): PhoneNumber {\r\n    return `+1${phoneNumberMask_UsaCanada(text).digitsNo1}` as PhoneNumber;\r\n}\r\n\r\nexport function toStandardPhoneNumber_optional(text: string | null | undefined): PhoneNumber | undefined {\r\n    if (!text) { return undefined; }\r\n    return `+1${phoneNumberMask_UsaCanada(text).digitsNo1}` as PhoneNumber;\r\n}\r\n\r\nexport function phoneNumberMask_UsaCanada(x: string | null | undefined) {\r\n    const numberMask = `(###) ###-####`;\r\n    const digits = x\r\n        ?.replace(/^(\\+1|1)/, ``)\r\n        .replace(/\\D/g, ``)\r\n        .split(``) ?? [];\r\n    const letters = numberMask.split(``);\r\n    let iDigit = 0;\r\n    let iLast = -1;\r\n    for (let i = 0; i < letters.length; i++) {\r\n        if (letters[i] === `#` && iDigit < digits.length) {\r\n            letters[i] = digits[iDigit];\r\n            iDigit++;\r\n            iLast = i;\r\n        }\r\n    }\r\n    const full = letters.join(``);\r\n    const corrected = letters.slice(0, iLast + 1).join(``);\r\n    return { corrected, full, digitsNo1: digits.join(``) };\r\n}\r\n","function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\n\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.5.0\"\n  });\n};\n\nvar stripePromise = null;\n\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\n\nvar initStripe = function initStripe(maybeStripe, args) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(void 0, _toConsumableArray(args));\n  registerWrapper(stripe);\n  return stripe;\n}; // own script injection.\n\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\n\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args);\n  });\n};\n\nexport { loadStripe };","\r\nexport enum ProcessSteps_CreateSavedPaymentMethod {\r\n    _01_Client_BeginCreateSavedPaymentMethod = 100,\r\n    _02_Server_SetupSavedPaymentMethod = 200,\r\n    _03_Client_CollectPaymentDetails = 300,\r\n    _04_Server_ObtainPaymentMethod = 400,\r\n    _05_Server_SavePaymentMethod = 500,\r\n};\r\n\r\nexport const logProcessStep_CreateSavedPaymentMethod = (step: ProcessSteps_CreateSavedPaymentMethod, status?: 'BEGIN' | 'END' | 'FAIL', data?: unknown) => {\r\n    // TODO: Implement Universal Logger\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log(`CreateSavedPaymentMethod: ${ProcessSteps_CreateSavedPaymentMethod[step]} ${status}`, data);\r\n};\r\n\r\nexport const wrapProcessStep_CreateSavedPaymentMethod = async <TResult>(step: ProcessSteps_CreateSavedPaymentMethod, execute: () => Promise<TResult>): Promise<TResult> => {\r\n    try {\r\n        logProcessStep_CreateSavedPaymentMethod(step, `BEGIN`);\r\n\r\n        const result = await execute();\r\n        logProcessStep_CreateSavedPaymentMethod(step, `END`);\r\n        return result;\r\n    } catch (error) {\r\n        logProcessStep_CreateSavedPaymentMethod(step, `FAIL`, { error });\r\n        throw error;\r\n    }\r\n};\r\n","/** This token is used to identify a specific app user with the user's id in the provider's context (i.e. customer id) */\r\nexport type PaymentProviderUserToken = unknown & { __type: 'PaymentProviderUserToken' };\r\n/** This token is used to identify the client as it negotiates directly with the provider to enter payment method data */\r\nexport type PaymentProviderSavedPaymentMethodClientSetupToken = unknown & { __type: 'PaymentProviderSavedPaymentMethodClientSetupToken' };\r\n/** This token is used to identify the payment method obtained on the client from the provider */\r\nexport type PaymentProviderSavedPaymentMethodClientToken = unknown & { __type: 'PaymentProviderSavedPaymentMethodClientToken' };\r\n/** This token is used to identify the payment method long term after being verified by the provider on the server */\r\nexport type PaymentProviderSavedPaymentMethodStorageToken = unknown & { __type: 'PaymentProviderSavedPaymentMethodStorageToken' };\r\n\r\n/** PaymentProviderName identifies the payment provider and it's implementation (i.e. stripe, paypal, etc.) */\r\nexport type PaymentProviderName = string & { __type: 'PaymentProviderName' };\r\n\r\n/** PaymentMethodStorageKey is the auto generated storage key to uniquely identify a stored payment method */\r\nexport type PaymentMethodStorageKey = string & { __type: 'PaymentMethodStorageKey' };\r\n\r\nexport type PaymentMethodExpiration = {\r\n    year: number;\r\n    month: number;\r\n};\r\nexport type PaymentMethodClientInfo = {\r\n    key: PaymentMethodStorageKey;\r\n    providerName: PaymentProviderName;\r\n    title: string;\r\n    expiration: PaymentMethodExpiration;\r\n};\r\n\r\nexport type PaymentAmount = { currency: 'usd', usdCents: number };\r\n\r\nexport type PaymentTransaction = {\r\n    providerName: PaymentProviderName;\r\n    created: Date;\r\n    amount: PaymentAmount;\r\n    status: 'success' | 'incomplete' | 'terminated';\r\n}\r\n\r\n/** Payment Client to Server Calls\r\n * \r\n * These are the calls made on the client to the server, it supports multiple payment provider types\r\n * \r\n * Note: this is scoped to the user associated with the client\r\n */\r\nexport type PaymentClientApi = {\r\n    // Normal Flow\r\n    setupSavedPaymentMethod: (params: { providerName: PaymentProviderName }) => Promise<PaymentProviderSavedPaymentMethodClientSetupToken>;\r\n    saveSavedPaymentMethod: (params: { providerName: PaymentProviderName, paymentMethodClientToken: PaymentProviderSavedPaymentMethodClientToken }) => Promise<void>;\r\n\r\n    // Management of Payment Methods\r\n    getSavedPaymentMethods: () => Promise<PaymentMethodClientInfo[]>;\r\n    deleteSavedPaymentMethod: (params: { key: PaymentMethodStorageKey }) => Promise<void>;\r\n\r\n    // Management of Payments\r\n    debug_triggerPayment: (params: { amount: PaymentAmount }) => Promise<void>;\r\n    getPayments: () => Promise<PaymentTransaction[]>;\r\n    // getPaymentsRequiringUserAction: () => Promise<PaymentTransaction[]>;\r\n}\r\n\r\n\r\n/** Payment Server to Server Calls\r\n * \r\n * These are the calls intended to be used server-side to process payments\r\n * \r\n */\r\nexport type PaymentServerApi = {\r\n    /** This will use the payment methods in order until one succeeds */\r\n    chargeUsingSavedPaymentMethods: (params: { amount: PaymentAmount }) => Promise<void>;\r\n}\r\n\r\n/** Payment Server to Payment Provider Api Calls\r\n * \r\n * This wraps the provider-specific server code\r\n */\r\nexport type PaymentProviderApi = {\r\n    providerName: PaymentProviderName;\r\n    setupSavedPaymentMethod: (userToken: PaymentProviderUserToken | null) => Promise<{\r\n        newUserToken?: PaymentProviderUserToken;\r\n        setupToken: PaymentProviderSavedPaymentMethodClientSetupToken;\r\n    }>;\r\n    obtainSavedPaymentMethod: (userToken: PaymentProviderUserToken, clientToken: PaymentProviderSavedPaymentMethodClientToken) => Promise<{\r\n        token: PaymentProviderSavedPaymentMethodStorageToken;\r\n        title: string;\r\n        expiration: PaymentMethodExpiration;\r\n    }>;\r\n    chargeSavedPaymentMethod: (userToken: PaymentProviderUserToken, token: PaymentProviderSavedPaymentMethodStorageToken, amount: PaymentAmount) => Promise<void>;\r\n\r\n    getPayments: (userToken: PaymentProviderUserToken) => Promise<PaymentTransaction[]>;\r\n}\r\n\r\n/** Payment Server Dependencies */\r\nexport type PaymentMethodStorageData = {\r\n    /** Key should be auto-generated by storage provider */\r\n    key: PaymentMethodStorageKey;\r\n    title: string;\r\n    expiration: PaymentMethodExpiration;\r\n    providerName: PaymentProviderName;\r\n    paymentMethodStorageToken: PaymentProviderSavedPaymentMethodStorageToken;\r\n};\r\n\r\nexport type PaymentUserTokenData = {\r\n    providerName: PaymentProviderName;\r\n    userToken: PaymentProviderUserToken;\r\n};\r\n\r\nexport type PaymentStorageProviderApi = {\r\n    getUserToken: (params: { providerName: PaymentProviderName }) => Promise<PaymentUserTokenData | null>;\r\n    setUserToken: (params: PaymentUserTokenData) => Promise<void>;\r\n\r\n    savePaymentMethod: (params: Omit<PaymentMethodStorageData, 'key'>) => Promise<void>;\r\n    /** Return all saved payment methods - In the order that they were created */\r\n    getSavedPaymentMethods: () => Promise<PaymentMethodStorageData[]>;\r\n    deleteSavedPaymentMethod: (params: { key: PaymentMethodStorageKey }) => Promise<void>;\r\n}\r\n\r\nexport class PaymentError extends Error {\r\n    constructor(public message: string, public data?: unknown) { super(); }\r\n}\r\n","/* eslint-disable @typescript-eslint/quotes */\r\n/* eslint-disable prefer-template */\r\nimport { ProcessSteps_CreateSavedPaymentMethod } from '../../../common/process-steps';\r\n\r\n// Saved Payments: https://stripe.com/docs/payments/save-and-reuse\r\nexport enum ProcessSteps_CreateSavedPaymentMethod_Stripe {\r\n    _02A_Server_GetOrCreateCustomer = ProcessSteps_CreateSavedPaymentMethod._02_Server_SetupSavedPaymentMethod + 1,\r\n    _02B_Server_CreateSetupIntent = ProcessSteps_CreateSavedPaymentMethod._02_Server_SetupSavedPaymentMethod + 2,\r\n    _03A_Client_CollectPaymentDetails = ProcessSteps_CreateSavedPaymentMethod._03_Client_CollectPaymentDetails + 1,\r\n    _04A_Server_ObtainPaymentMethod = ProcessSteps_CreateSavedPaymentMethod._04_Server_ObtainPaymentMethod + 1,\r\n    _04B_Server_ObtainPaymentMethodDetails = ProcessSteps_CreateSavedPaymentMethod._04_Server_ObtainPaymentMethod + 2,\r\n};\r\n\r\nexport const logProcessStep_CreateSavedPaymentMethod_Stripe = (step: ProcessSteps_CreateSavedPaymentMethod_Stripe, status?: 'BEGIN' | 'END' | 'FAIL', data?: unknown) => {\r\n    // TODO: Implement Universal Logger\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log(`CreateSavedPaymentMethod_Stripe: ${ProcessSteps_CreateSavedPaymentMethod_Stripe[step]} ${status}`, data);\r\n};\r\n\r\nexport const wrapProcessStep_CreateSavedPaymentMethod_Stripe = async <TResult>(step: ProcessSteps_CreateSavedPaymentMethod_Stripe, execute: () => Promise<TResult>): Promise<TResult> => {\r\n    try {\r\n        logProcessStep_CreateSavedPaymentMethod_Stripe(step, `BEGIN`);\r\n\r\n        const result = await execute();\r\n        logProcessStep_CreateSavedPaymentMethod_Stripe(step, `END`);\r\n        return result;\r\n    } catch (error) {\r\n        logProcessStep_CreateSavedPaymentMethod_Stripe(step, `FAIL`, { error });\r\n        throw error;\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { loadStripe, PaymentMethod, PaymentMethodCreateParams } from '@stripe/stripe-js';\r\nimport { PaymentClientComponents } from '../../../common/types-react';\r\nimport { PaymentError } from '../../../common/types';\r\nimport { stripeDecodeClientSetupToken, stripeEncodeClientToken } from './stripe-client-tokens';\r\nimport { wrapProcessStep_CreateSavedPaymentMethod_Stripe, ProcessSteps_CreateSavedPaymentMethod_Stripe } from '../common/stripe-process-steps';\r\n\r\nexport const createPaymentClientComponents_stripe = (params: { stripePublicKey: string }): PaymentClientComponents => {\r\n\r\n    const stripePromise = loadStripe(params.stripePublicKey);\r\n\r\n    const components: PaymentClientComponents = {\r\n        AppWrapperComponent: ({ children }) => (<Elements stripe={stripePromise}>{children}</Elements>),\r\n        PaymentMethodEntryComponent: ({ style, paymentMethodSetupToken, onPaymentMethodReady }) => {\r\n            const stripe = useStripe();\r\n            const elements = useElements();\r\n\r\n            const [stripeError, setStripeError] = useState(null as null | { message: string, error: unknown });\r\n\r\n            const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n                event.preventDefault();\r\n                if (!stripe || !elements) { return; }\r\n\r\n                try {\r\n                    // Completed SetupIntent -> Used to get PaymentMethod\r\n                    const setupIntent = await wrapProcessStep_CreateSavedPaymentMethod_Stripe(\r\n                        ProcessSteps_CreateSavedPaymentMethod_Stripe._03A_Client_CollectPaymentDetails,\r\n                        async () => {\r\n\r\n                            const setupInfo = stripeDecodeClientSetupToken(paymentMethodSetupToken);\r\n\r\n                            const result = await stripe.confirmCardSetup(setupInfo.clientSecret, {\r\n                                payment_method: {\r\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                                    card: elements.getElement(CardElement)!,\r\n                                    billing_details: setupInfo.customerBillingDetails,\r\n                                },\r\n                            });\r\n\r\n                            if (result.error || !result.setupIntent) {\r\n                                throw new PaymentError(`Stripe Payment Error`, result.error);\r\n                            }\r\n\r\n                            return result.setupIntent;\r\n                        });\r\n                    if (!setupIntent) { return; }\r\n\r\n                    onPaymentMethodReady(stripeEncodeClientToken({ setupIntent }));\r\n                } catch (error) {\r\n                    setStripeError({ message: `Stripe Payment Error`, error });\r\n                }\r\n            };\r\n\r\n            const s = style;\r\n            const inputStyle = {\r\n                base: {\r\n                    color: s.textColor,\r\n                    fontSize: s.fontSize ? `${s.fontSize}px` : ``,\r\n                    fontFamily: s.fontFamily,\r\n                    fontSmoothing: `antialiased`,\r\n                    \"::placeholder\": {\r\n                        color: s.textColor,\r\n                        opacity: 0.8,\r\n                    },\r\n                },\r\n                invalid: {\r\n                    color: s.textColor_invalid,\r\n                    iconColor: s.textColor_invalid,\r\n                },\r\n            };\r\n            const inputContainerStyle = {\r\n                marginBottom: s.elementPadding,\r\n                padding: s.textPadding,\r\n                backgroundColor: s.backgroundColor,\r\n                borderWidth: 1, borderStyle: `solid`, borderColor: s.borderColor, borderRadius: s.borderRadius,\r\n            };\r\n            const buttonStyle = {\r\n                color: s.textColor,\r\n                backgroundColor: s.backgroundColor,\r\n                borderWidth: 1, borderStyle: `solid`, borderColor: s.borderColor, borderRadius: s.borderRadius,\r\n\r\n                fontSize: s.fontSize ? `${s.fontSize}px` : ``,\r\n                fontFamily: s.fontFamily,\r\n                fontSmoothing: `antialiased`,\r\n                fontWeight: `bold`,\r\n                padding: s.textPadding,\r\n                marginBottom: s.elementPadding,\r\n            } as const;\r\n            const buttonJustifyContent = s.buttonAlignment === `left` ? `flex-start`\r\n                : (s.buttonAlignment === `right` ? `flex-end`\r\n                    : `center`);\r\n\r\n            const errorContainerStyle = {\r\n                marginBottom: s.elementPadding,\r\n                padding: s.textPadding,\r\n                backgroundColor: s.backgroundColor,\r\n                borderWidth: 1, borderStyle: `solid`, borderColor: s.borderColor, borderRadius: s.borderRadius,\r\n            };\r\n            const errorMessageStyle = {\r\n                color: s.textColor_invalid,\r\n\r\n                fontSize: s.fontSize ? `${s.fontSize}px` : ``,\r\n                fontFamily: s.fontFamily,\r\n                fontSmoothing: `antialiased`,\r\n                fontWeight: `bold`,\r\n                padding: s.textPadding,\r\n                marginBottom: s.elementPadding,\r\n            } as const;\r\n\r\n            return (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div style={inputContainerStyle}>\r\n                        <CardElement options={{ style: inputStyle }} />\r\n                    </div>\r\n                    {stripeError && (\r\n                        <>\r\n                            <div style={errorContainerStyle}>\r\n                                <span style={errorMessageStyle}>{stripeError.message}</span>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    {!stripeError && (\r\n                        <div style={{ display: `flex`, flexDirection: `row`, justifyContent: buttonJustifyContent }}>\r\n                            <button type='submit' disabled={!stripe || !elements} style={buttonStyle}>{s.buttonText ?? `Subscribe`}</button>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            );\r\n        },\r\n    };\r\n\r\n    return components;\r\n};\r\n","import { PaymentMethodCreateParams, SetupIntent } from '@stripe/stripe-js';\r\nimport { PaymentProviderSavedPaymentMethodClientSetupToken, PaymentProviderSavedPaymentMethodClientToken } from '../../../common/types';\r\n\r\nexport type StripeCustomerBillingDetails = PaymentMethodCreateParams.BillingDetails;\r\n\r\nexport type StripePaymentClientSetupToken = {\r\n    clientSecret: string;\r\n    customerBillingDetails: StripeCustomerBillingDetails;\r\n};\r\n\r\nexport const stripeEncodeClientSetupToken = (params: StripePaymentClientSetupToken): PaymentProviderSavedPaymentMethodClientSetupToken => {\r\n    return params as unknown as PaymentProviderSavedPaymentMethodClientSetupToken;\r\n};\r\nexport const stripeDecodeClientSetupToken = (params: PaymentProviderSavedPaymentMethodClientSetupToken): StripePaymentClientSetupToken => {\r\n    return params as unknown as StripePaymentClientSetupToken;\r\n};\r\n\r\nexport type StripePaymentClientToken = {\r\n    setupIntent: SetupIntent;\r\n};\r\n\r\nexport const stripeEncodeClientToken = (params: StripePaymentClientToken): PaymentProviderSavedPaymentMethodClientToken => {\r\n    return params as unknown as PaymentProviderSavedPaymentMethodClientToken;\r\n};\r\nexport const stripeDecodeClientToken = (params: PaymentProviderSavedPaymentMethodClientToken): StripePaymentClientToken => {\r\n    return params as unknown as StripePaymentClientToken;\r\n};\r\n","import { createUploadApiWebClient } from 'upload-api/client/web-client';\r\nimport { uploadApiConfig } from 'upload-api/client/config';\r\nimport { UploadUrl } from 'upload-api/client/types';\r\nimport { createUploader, downloadData } from 'upload-api/client/uploader';\r\nimport { AppError } from 'utils/error';\r\nimport { delay } from 'utils/delay';\r\nimport { error } from 'console';\r\n\r\nconst USER_DATA_SERVICE_STATE_KEY = `_USER_DATA_SERVICE_STATE`;\r\nexport type UserProfileInfo = {\r\n    key: string;\r\n    name: string;\r\n    emoji: string;\r\n    isActive: boolean;\r\n};\r\ntype UserProfileMetadata = {\r\n    name?: string;\r\n    emoji?: string;\r\n};\r\ntype UserProfileData = {\r\n    key: string;\r\n    name: string;\r\n    emoji?: string;\r\n    uploadUrl: UploadUrl;\r\n    lastUploadTimestamp?: number;\r\n};\r\ntype UserServiceState = {\r\n    userProfiles: UserProfileData[];\r\n    activeUserProfileKey: string;\r\n    changeTimestamp: number;\r\n};\r\ntype UserData = {\r\n    data: { [key: string]: null | string };\r\n    metadata?: UserProfileMetadata;\r\n    timestamp: number;\r\n};\r\n\r\nconst createUserDataService = () => {\r\n    const uploadApi = createUploadApiWebClient(uploadApiConfig);\r\n\r\n    const storage = {\r\n        getUserDataServiceState: (): null | UserServiceState => {\r\n            try {\r\n                return JSON.parse(localStorage.getItem(USER_DATA_SERVICE_STATE_KEY) ?? `NULL !{}`);\r\n            } catch{\r\n                return null;\r\n            }\r\n        },\r\n        setUserDataServiceState: (state: UserServiceState) => {\r\n            localStorage.setItem(USER_DATA_SERVICE_STATE_KEY, JSON.stringify(state));\r\n        },\r\n        getUserData: (): UserData => {\r\n            const state = storage.getUserDataServiceState();\r\n            const userState = state && state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n            const data = {\r\n                data: {},\r\n                metadata: { name: userState?.name, emoji: userState?.emoji },\r\n                timestamp: Date.now(),\r\n            } as UserData;\r\n            const keys = Object.keys(localStorage).filter(x => !x.startsWith(`_`));\r\n            for (const k of keys) {\r\n                data.data[k] = localStorage.getItem(k);\r\n            }\r\n            return data;\r\n        },\r\n        clearUserData: () => {\r\n            // Remove all old data\r\n            const keys = Object.keys(localStorage).filter(x => !x.startsWith(`_`));\r\n            for (const k of keys) {\r\n                localStorage.removeItem(k);\r\n            }\r\n\r\n            // Load metadata\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) { return; }\r\n            state.userProfiles.forEach(x => { x.lastUploadTimestamp = undefined; });\r\n            storage.setUserDataServiceState(state);\r\n        },\r\n        setUserData: (userData: UserData) => {\r\n            storage.clearUserData();\r\n\r\n            // Set New data\r\n            for (const k of Object.keys(userData.data)) {\r\n                const val = userData.data[k];\r\n                if (!val) {\r\n                    localStorage.removeItem(k);\r\n                    return;\r\n                }\r\n                localStorage.setItem(k, val);\r\n            }\r\n\r\n            // Load metadata\r\n            const state = storage.getUserDataServiceState();\r\n            const userState = state && state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n            if (!state || !userState) { return; }\r\n            userState.emoji = userData.metadata?.emoji ?? userState.emoji;\r\n            userState.name = userData.metadata?.name ?? userState.name;\r\n            userState.lastUploadTimestamp = userData.timestamp;\r\n            storage.setUserDataServiceState(state);\r\n        },\r\n    };\r\n\r\n    const getUserProfile = (userProfileKey: string) => {\r\n        const state = storage.getUserDataServiceState();\r\n        if (!state) { return null; }\r\n        return state.userProfiles.find(x => x.key === userProfileKey);\r\n    };\r\n    const getActiveUserProfile = () => {\r\n        const state = storage.getUserDataServiceState();\r\n        if (!state?.activeUserProfileKey) { return null; }\r\n        return state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n    };\r\n\r\n    const uploadBackup = async (userState: UserProfileData, userData: UserData) => {\r\n        const uploadUrl = await uploadApi.createUploadUrl({ prefix: `backup/users/${userState.name}/${userState.uploadUrl.relativePath}/${Date.now()}` });\r\n        const uploader = createUploader(uploadUrl.uploadUrl);\r\n        await uploader.uploadData(userData);\r\n    };\r\n\r\n    const uploadWithAutoRenew = async (userProfileKey: string, userData: UserData) => {\r\n        const state = storage.getUserDataServiceState();\r\n        const userState = state && state.userProfiles.find(x => x.key === userProfileKey);\r\n        if (!state || !userState) { return; }\r\n\r\n        // Upload backup\r\n        await uploadBackup(userState, userData);\r\n\r\n        const upload = async () => {\r\n            const uploader = createUploader(userState.uploadUrl);\r\n            await uploader.uploadData(userData);\r\n        };\r\n\r\n        try {\r\n            // Try to upload\r\n            console.log(`uploadWithAutoRenew - Attempt 1`);\r\n            await upload();\r\n            console.log(`uploadWithAutoRenew - UPLOADED`);\r\n        } catch{\r\n            // Rewew and try again\r\n            console.log(`uploadWithAutoRenew - Attempt 2`);\r\n\r\n            const newUploarUrl = await uploadApi.renewUploadUrl({ uploadUrl: userState.uploadUrl });\r\n            userState.uploadUrl = newUploarUrl.uploadUrl;\r\n            storage.setUserDataServiceState(state);\r\n\r\n            await upload();\r\n\r\n            console.log(`uploadWithAutoRenew - UPLOADED AFTER RENEW`);\r\n        }\r\n    };\r\n\r\n    const updateUserProfileFromServer = async (userProfileKey: string) => {\r\n        console.log(`updateUserProfile`, { userProfileKey });\r\n        const state = storage.getUserDataServiceState();\r\n        const userState = state && state.userProfiles.find(x => x.key === userProfileKey);\r\n        if (!state || !userState) {\r\n            console.log(`updateUserProfile - NO USER STATE`, { userProfileKey });\r\n            return;\r\n        }\r\n\r\n        const userData = await downloadData(userState.uploadUrl.getUrl) as UserData;\r\n        if (!userData.timestamp || userData.timestamp <= (userState.lastUploadTimestamp ?? 0)) {\r\n            // Skip if not new\r\n            console.log(`updateUserProfile - NOT NEW`, { name: userState.name });\r\n            return;\r\n        }\r\n\r\n        console.log(`updateUserProfile - UPDATED USER PROFILE`, { name: userState.name });\r\n        userState.emoji = userData.metadata?.emoji ?? userState.emoji;\r\n        userState.name = userData.metadata?.name ?? userState.name;\r\n        userState.lastUploadTimestamp = userData.timestamp;\r\n        storage.setUserDataServiceState(state);\r\n\r\n        if (userState.key === state.activeUserProfileKey) {\r\n            console.log(`updateUserProfile - UPDATED ACTIVE USER DATA`, { name: userState.name });\r\n            storage.setUserData(userData);\r\n        }\r\n    };\r\n    const updateAllProfilesFromServer = async () => {\r\n        const state = storage.getUserDataServiceState();\r\n        if (!state) { return; }\r\n\r\n        for (const userState of state.userProfiles) {\r\n            try {\r\n                // eslint-disable-next-line no-await-in-loop\r\n                await updateUserProfileFromServer(userState.key);\r\n            } catch (error_) {\r\n                console.log(`updateAllProfiles - ERROR Updating user profile`, { error: error_ });\r\n            }\r\n        }\r\n    };\r\n\r\n    let isSetupStarted = false;\r\n    let isSetupDone = false;\r\n\r\n    const service = {\r\n        setup: async () => {\r\n            if (isSetupStarted) {\r\n                while (!isSetupDone) {\r\n                    // eslint-disable-next-line no-await-in-loop\r\n                    await delay(10);\r\n                }\r\n                return;\r\n            }\r\n            isSetupStarted = true;\r\n            const doSetup = async () => {\r\n                console.log(`UserDataService:setup`);\r\n\r\n                const a = getActiveUserProfile();\r\n                if (a) {\r\n                    await updateAllProfilesFromServer();\r\n                    return;\r\n                }\r\n\r\n                const state = storage.getUserDataServiceState();\r\n                if (state && state.userProfiles.length > 0) {\r\n                    state.activeUserProfileKey = state.userProfiles[0].key;\r\n                    storage.setUserDataServiceState(state);\r\n                    await updateAllProfilesFromServer();\r\n                    return;\r\n                }\r\n\r\n                const newUploadUrlResult = await uploadApi.createUploadUrl({ prefix: `users` });\r\n                const newState: UserServiceState = state ?? {\r\n                    userProfiles: [{\r\n                        key: newUploadUrlResult.uploadUrl.relativePath,\r\n                        name: `${`Player 1`}`,\r\n                        uploadUrl: newUploadUrlResult.uploadUrl,\r\n                    }],\r\n                    activeUserProfileKey: newUploadUrlResult.uploadUrl.relativePath,\r\n                    changeTimestamp: 0,\r\n                };\r\n                storage.setUserDataServiceState(newState);\r\n\r\n                // Upload initial data\r\n                await service.uploadUserData();\r\n            };\r\n\r\n            try {\r\n                await doSetup();\r\n                isSetupDone = true;\r\n            } catch (error_) {\r\n                // Setup Failed\r\n                isSetupDone = true;\r\n                throw error_;\r\n            }\r\n        },\r\n        getActiveUser: (): null | UserProfileInfo => {\r\n            const user = getActiveUserProfile();\r\n            if (!user) { return null; }\r\n            return {\r\n                key: user.key,\r\n                name: user.name,\r\n                emoji: user.emoji ?? `👤`,\r\n                isActive: true,\r\n            };\r\n        },\r\n        setActiveUser: async (userProfileKey: string) => {\r\n            console.log(`setActiveUser`, { userProfileKey });\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) { return; }\r\n\r\n            if (!state.userProfiles.find(x => x.key === userProfileKey)) {\r\n                console.log(`setActiveUser - User Profile Not Found`, { userProfileKey });\r\n                throw new AppError(`User Profile not found`);\r\n            }\r\n\r\n            // Don't upload old user data - the chance of this being out of date is high\r\n            // // Upload old user data\r\n            // await service.uploadUserData();\r\n\r\n            if (state.activeUserProfileKey !== userProfileKey) {\r\n                console.log(`setActiveUser - user changed - clearing state`);\r\n\r\n                state.activeUserProfileKey = userProfileKey;\r\n                state.changeTimestamp = 0;\r\n                storage.setUserDataServiceState(state);\r\n                storage.clearUserData();\r\n            }\r\n\r\n            console.log(`setActiveUser - before download`, { stateJson: JSON.stringify(storage.getUserDataServiceState()) });\r\n\r\n            // Download new user data\r\n            await service.downloadUserDataIfNewer();\r\n        },\r\n        getUserProfiles: async (): Promise<UserProfileInfo[]> => {\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state?.activeUserProfileKey) { return []; }\r\n            return state.userProfiles.map(x => ({\r\n                key: x.key,\r\n                name: x.name,\r\n                emoji: x.emoji ?? `👤`,\r\n                isActive: state.activeUserProfileKey === x.key,\r\n            }));\r\n        },\r\n        setUserProfileInfo: async (userProfileKey: string, info: { emoji?: string, name?: string }) => {\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) {\r\n                console.log(`uploadUserData - NO STATE`);\r\n                return;\r\n            }\r\n\r\n            const userState = state.userProfiles.find(x => x.key === userProfileKey);\r\n            if (!userState) {\r\n                console.log(`uploadUserData - NO USER STATE`);\r\n                return;\r\n            }\r\n\r\n            userState.emoji = info.emoji ?? userState.emoji;\r\n            userState.name = info.name ?? userState.name;\r\n            storage.setUserDataServiceState(state);\r\n\r\n            // Save to remote data\r\n            const uploader = createUploader(userState.uploadUrl);\r\n            const uData = await uploader.downloadData() as UserData;\r\n            if (!uData) { return; }\r\n            uData.metadata = {\r\n                name: userState.name,\r\n                emoji: userState.emoji,\r\n            };\r\n            uData.timestamp = Date.now();\r\n            await uploadWithAutoRenew(userProfileKey, uData);\r\n        },\r\n        uploadUserData: async () => {\r\n            console.log(`uploadUserData`);\r\n\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) {\r\n                console.log(`uploadUserData - NO STATE`);\r\n                return;\r\n            }\r\n\r\n            const userState = state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n            if (!userState) {\r\n                console.log(`uploadUserData - NO user State`, { state });\r\n                return;\r\n            }\r\n\r\n            userState.lastUploadTimestamp = Date.now();\r\n            storage.setUserDataServiceState(state);\r\n\r\n            const userData = storage.getUserData();\r\n            await uploadWithAutoRenew(userState.key, userData);\r\n\r\n            console.log(`uploadUserData - UPLOADED`, { userData });\r\n        },\r\n        downloadUserDataIfNewer: async () => {\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) { return; }\r\n\r\n            const userState = state.userProfiles.find(x => x.key === state.activeUserProfileKey);\r\n            if (!userState) { return; }\r\n\r\n            console.log(`downloadUserDataIfNewer`);\r\n\r\n            const uploader = createUploader(userState.uploadUrl);\r\n            const userData = await uploader.downloadData() as UserData;\r\n\r\n            // Don't update if not newer\r\n            if (!userData.timestamp || userData.timestamp <= (userState.lastUploadTimestamp ?? 0)) {\r\n                console.log(`downloadUserDataIfNewer - Local data is up to date`, { state, userData });\r\n                return;\r\n            }\r\n\r\n            console.log(`downloadUserDataIfNewer - UPDATING`, { state, userData });\r\n            storage.clearUserData();\r\n            storage.setUserData(userData);\r\n        },\r\n        createShareCode: async (userProfileKey: string) => {\r\n            await service.setup();\r\n            const user = getUserProfile(userProfileKey);\r\n            if (!user) {\r\n                throw new AppError(`user should not be null`);\r\n            }\r\n\r\n            const shareUrlResult = await uploadApi.createUploadUrl({ shareablePath: true });\r\n\r\n            // Save user uploadUrl to shared path\r\n            const uploader = createUploader(shareUrlResult.uploadUrl);\r\n            await uploader.uploadData(user.uploadUrl);\r\n\r\n            return {\r\n                shareCode: shareUrlResult.uploadUrl.relativePath,\r\n            };\r\n        },\r\n        addUserFromShareCode: async (shareCode: string) => {\r\n            console.log(`addUserFromShareCode`, { shareCode });\r\n\r\n            // Don't have a clean way to get the path, but can generate a new path from the server and use it as a template\r\n            const shareUrlResult = await uploadApi.createUploadUrl({ shareablePath: true });\r\n            const shareGetUrl = shareUrlResult.uploadUrl.getUrl.replace(shareUrlResult.uploadUrl.relativePath, shareCode.toUpperCase());\r\n            const sharedUploadUrl = await downloadData(shareGetUrl) as UploadUrl;\r\n            if (!sharedUploadUrl.putUrl) {\r\n                console.log(`addUserFromShareCode - FAILED TO GET PROFILE`);\r\n                throw new AppError(`Failed to get user profile`);\r\n            }\r\n\r\n            const state = storage.getUserDataServiceState();\r\n            if (!state) {\r\n                console.log(`addUserFromShareCode - NO STATE`);\r\n                throw new AppError(`UserDataService is not setup`);\r\n            }\r\n\r\n            // Already has that user profile\r\n            if (state.userProfiles.find(x => x.key === sharedUploadUrl.relativePath)) {\r\n                console.log(`addUserFromShareCode - ALREADY HAS USER`, { userKey: sharedUploadUrl.relativePath });\r\n                return;\r\n            }\r\n\r\n            state.userProfiles.push({\r\n                key: sharedUploadUrl.relativePath,\r\n                name: `Player ${state.userProfiles.length + 1}`,\r\n                uploadUrl: sharedUploadUrl,\r\n            });\r\n            storage.setUserDataServiceState(state);\r\n\r\n            console.log(`addUserFromShareCode - ADDED`, { userKey: sharedUploadUrl.relativePath });\r\n\r\n            // Reload profile\r\n            await updateUserProfileFromServer(sharedUploadUrl.relativePath);\r\n        },\r\n    };\r\n    return service;\r\n};\r\n\r\nexport type UserDataService = ReturnType<typeof createUserDataService>;\r\nconst serviceState = {\r\n    instance: null as null | UserDataService,\r\n};\r\nexport const UserDataService = {\r\n    get: (): UserDataService => {\r\n        if (!serviceState.instance) {\r\n            serviceState.instance = createUserDataService();\r\n        };\r\n        return serviceState.instance;\r\n    },\r\n};\r\n","import { webRequest } from 'utils/web-request';\r\nimport { UploadApi, UploadApiEndpointName, UploadApiRequestData } from './types';\r\n\r\nexport const createUploadApiWebClient = (config: { uploadApiUrl: string }): UploadApi => {\r\n\r\n    async function apiRequest<T>(endpoint: UploadApiEndpointName, data: unknown): Promise<T> {\r\n        const url = `${config.uploadApiUrl}/${endpoint}`;\r\n\r\n        const requestData: UploadApiRequestData = {\r\n            endpoint,\r\n            data,\r\n        };\r\n\r\n        const resultObj = (await webRequest(url, requestData)) as { data: T };\r\n\r\n        return resultObj.data;\r\n    };\r\n\r\n    const api: UploadApi = {\r\n        createUploadUrl: (data) => apiRequest(`createUploadUrl`, data),\r\n        renewUploadUrl: (data) => apiRequest(`renewUploadUrl`, data),\r\n    };\r\n\r\n    return api;\r\n};\r\n","import { fetchWithTimeout } from 'utils/web-request';\r\nimport { AppError } from 'utils/error';\r\nimport { UploadUrl } from './types';\r\nimport { createUploadApiWebClient } from './web-client';\r\n\r\nexport const downloadData = async (getUrl: string) => {\r\n    const result = await fetchWithTimeout(getUrl, {\r\n        method: `GET`,\r\n        headers: {\r\n            'Accept': `application/json`,\r\n        },\r\n    });\r\n    const json = await result.json() as { data: unknown };\r\n    return json.data;\r\n};\r\n\r\n\r\nexport const createUploader = (uploadUrl: UploadUrl) => {\r\n    return {\r\n        uploadData: async (data: unknown) => {\r\n            const body = JSON.stringify({ data });\r\n            const result = await fetchWithTimeout(uploadUrl.putUrl, {\r\n                method: `PUT`,\r\n                headers: {\r\n                    'Accept': `application/json`,\r\n                    'Content-Type': `application/json`,\r\n                    'Content-Length': `${body.length}`,\r\n                },\r\n                body,\r\n            });\r\n\r\n            if (!result.ok) {\r\n                throw new AppError(`Upload Failed`);\r\n            }\r\n        },\r\n        downloadData: async (): Promise<unknown> => {\r\n            return await downloadData(uploadUrl.getUrl);\r\n        },\r\n    };\r\n};\r\n\r\nexport const createSmartUploader = <T extends {}>(args: { getUploadUrl: () => Promise<null | UploadUrl>, setUploadUrl: (uploadUrl: UploadUrl) => Promise<void>, uploadUrlPrefix: string, uploadApiUrl: string }) => {\r\n    const uploadApiWebClient = createUploadApiWebClient(args);\r\n\r\n    let _uploadUrl = null as null | UploadUrl;\r\n\r\n    const setupUploadUrl = async () => {\r\n        if (_uploadUrl) { return _uploadUrl; }\r\n\r\n        _uploadUrl = await args.getUploadUrl();\r\n        if (_uploadUrl) { return _uploadUrl; }\r\n\r\n        _uploadUrl = (await uploadApiWebClient.createUploadUrl({ prefix: args.uploadUrlPrefix })).uploadUrl;\r\n        await args.setUploadUrl(_uploadUrl);\r\n        return _uploadUrl;\r\n    };\r\n\r\n    return {\r\n        load: async (): Promise<null | T> => {\r\n            const uploadUrl = await setupUploadUrl();\r\n\r\n            try {\r\n                const data = await downloadData(uploadUrl.getUrl);\r\n                return data as T;\r\n            } catch{\r\n                return null;\r\n            }\r\n        },\r\n        save: async (data: T) => {\r\n            let uploadUrl = await setupUploadUrl();\r\n\r\n            try {\r\n                const uploader = createUploader(uploadUrl);\r\n                await uploader.uploadData(data);\r\n            } catch{\r\n                // Try again after renew upload token\r\n                uploadUrl = (await uploadApiWebClient.renewUploadUrl({ uploadUrl })).uploadUrl;\r\n                await args.setUploadUrl(uploadUrl);\r\n                _uploadUrl = uploadUrl;\r\n\r\n                const uploader = createUploader(uploadUrl);\r\n                await uploader.uploadData(data);\r\n            }\r\n\r\n            // Upload backup (temp)\r\n            const backupUrl = (await uploadApiWebClient.createUploadUrl({ prefix: `backup/${uploadUrl.relativePath}` })).uploadUrl;\r\n            const backupUploader = createUploader(backupUrl);\r\n            await backupUploader.uploadData(data);\r\n        },\r\n    };\r\n};\r\n","export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}];","import * as React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"title\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import { Platform } from 'react-native-lite';\r\n\r\nexport const createSpeechService = (): {\r\n    speak: (text: string, languange?: string) => void;\r\n    getVoicesForLanguange: (languange: string) => { voice: SpeechSynthesisVoice, isSelected: boolean }[];\r\n    setVoiceForLanguange: (languange: string, voice: SpeechSynthesisVoice) => void;\r\n} => {\r\n    if (Platform.OS !== `web`) {\r\n        return {\r\n            speak: () => { },\r\n            getVoicesForLanguange: () => [],\r\n            setVoiceForLanguange: () => { },\r\n        };\r\n    }\r\n\r\n    const synth = window.speechSynthesis;\r\n\r\n    const selectedVoices = {} as { [languange: string]: SpeechSynthesisVoice };\r\n\r\n    const speak = (text: string, languange?: string) => {\r\n        const voiceLang = selectedVoices[languange ?? `en`] ?? null;\r\n\r\n        try {\r\n            const u = new SpeechSynthesisUtterance(text);\r\n            u.voice = voiceLang;\r\n            synth.speak(u);\r\n        } catch {\r\n            // Ignore\r\n        }\r\n    };\r\n\r\n    return {\r\n        speak,\r\n        getVoicesForLanguange: (languange) => {\r\n            const voices = synth.getVoices();\r\n            console.log(`voices`, { voices });\r\n            const v = voices.filter(x => x.lang.startsWith(languange)).map(x => ({\r\n                voice: x,\r\n                isSelected: selectedVoices[languange] === x,\r\n            }));\r\n            return v;\r\n        },\r\n        setVoiceForLanguange: (language, voice) => {\r\n            selectedVoices[language] = voice;\r\n        },\r\n    };\r\n};\r\n\r\nexport type SpeechService = ReturnType<typeof createSpeechService>;\r\n","export type JsonTyped<T> = string & { __json: T };\r\n\r\nexport const jsonParse = <T>(json: JsonTyped<T>): T => {\r\n    return JSON.parse(json) as T;\r\n};\r\nexport const jsonParse_smart = <T>(json: T | JsonTyped<T>): T => {\r\n    if (typeof json === `string`) {\r\n        return JSON.parse(json) as T;\r\n    }\r\n    return json as T;\r\n};\r\nexport const jsonStringify = <T>(obj: T) => JSON.stringify(obj) as JsonTyped<T>;\r\n\r\nexport const jsonStringify_safe = (obj: unknown, shouldFormat?: boolean): string => {\r\n    const visited = [] as unknown[];\r\n\r\n    return JSON.stringify(obj, (_, val: unknown) => {\r\n        if (val != null && typeof val == `object`) {\r\n            if (visited.includes(val)) {\r\n                return `[OBJ-DUPLICATED]`;\r\n            }\r\n            visited.push(val);\r\n        }\r\n        return val;\r\n    }, shouldFormat ? 2 : 0);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Clipboard } from 'react-native-lite';\r\nimport { theme } from 'themes/theme';\r\nimport { ErrorState } from 'utils/error';\r\nimport { jsonStringify_safe } from 'utils/json';\r\nimport { Icon } from './icon';\r\nimport { IconKind } from './icon-kind';\r\n\r\nconst DEBUG = true;\r\n\r\nconst errorBoxStyle = {\r\n    view: theme.view_error,\r\n    text: theme.text_error,\r\n    text_errorMessage: theme.text_errorMessage,\r\n    icon: theme.icon,\r\n    icon_errorMessage: theme.icon_errorMessage,\r\n    button: { outlineColor: theme.colors.outline },\r\n};\r\n\r\nexport const ErrorBox = ({ error }: { error: ErrorState | null | undefined }) => {\r\n    if (!error) { return (<></>); }\r\n    return (<ErrorBox_Inner error={error} />);\r\n};\r\n\r\nconst ErrorBox_Inner = (props: { error: ErrorState }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    // console.log(`ErrorBox`, { error: props.error, expanded });\r\n\r\n    const errorAsString = typeof props.error === `string` ? `${props.error}` : null;\r\n    const errorMessage = props.error.message ?? errorAsString ?? `Unknown Error`;\r\n    const errorDetails = props.error.data && jsonStringify_safe(props.error.data, true) || undefined;\r\n    const errorObjText = DEBUG && props.error && jsonStringify_safe(props.error, true) || undefined;\r\n    const canExpand = !!errorDetails || !!errorObjText;\r\n\r\n    return (\r\n        <View style={errorBoxStyle.view}>\r\n            <View style={{ flexDirection: `row` }}>\r\n                <TouchableOpacity style={{ flex: 1, flexDirection: `row`, alignItems: `center`, ...errorBoxStyle.button }} onPress={() => setExpanded(!expanded)}>\r\n                    {canExpand && (expanded ? <Icon style={errorBoxStyle.icon} kind={IconKind.expanded} /> : <Icon style={errorBoxStyle.icon} kind={IconKind.collapsed} />)}\r\n                    <View style={{ paddingRight: 8 }}>\r\n                        <Icon style={errorBoxStyle.icon} kind={IconKind.error} />\r\n                    </View>\r\n                    <View style={{ flex: 1, overflow: `hidden` }}>\r\n                        <Text style={errorBoxStyle.text} numberOfLines={!expanded ? 1 : undefined}>{errorMessage}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n                {DEBUG && (\r\n                    <TouchableOpacity style={{ flexDirection: `row`, alignItems: `center`, paddingLeft: 8, ...errorBoxStyle.button }} onPress={() => Clipboard.setString(jsonStringify_safe({ errorMessage, errorDetails, errorObjText }, true))}>\r\n                        <Icon style={errorBoxStyle.icon} kind={IconKind.copy} />\r\n                    </TouchableOpacity>\r\n                )}\r\n                {props.error.retryCallback && (\r\n                    <TouchableOpacity style={{ flexDirection: `row`, alignItems: `center`, paddingLeft: 8, ...errorBoxStyle.button }} onPress={props.error.retryCallback}>\r\n                        <Icon style={errorBoxStyle.icon} kind={IconKind.retry} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n            {canExpand && expanded && !!errorDetails && (<Text style={{ ...errorBoxStyle.text }}>{errorDetails}</Text>)}\r\n            {canExpand && expanded && !!errorObjText && (<Text style={{ ...errorBoxStyle.text }}>{errorObjText}</Text>)}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nexport const ErrorMessage = (props: { children: string }) => {\r\n    return (\r\n        <View style={{ flexDirection: `row`, alignItems: `center` }}>\r\n            <View style={{ paddingLeft: 8, paddingRight: 8 }}>\r\n                <Icon style={errorBoxStyle.icon_errorMessage} kind={IconKind.error} />\r\n            </View>\r\n            <View style={{ overflow: `hidden` }}>\r\n                <Text style={errorBoxStyle.text_errorMessage} numberOfLines={1}>{props.children}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n","import React, { } from 'react';\r\nimport { Text, TouchableOpacity } from 'react-native-lite';\r\nimport { theme, ThemeTextStyle, ThemeViewStyle, extractViewStyle, extractTextStyle } from 'themes/theme';\r\n\r\nexport const Button = (props: { style?: ThemeTextStyle & ThemeViewStyle, styleAlt?: boolean, children: string, onPress: () => void }) => {\r\n    const s = props.style ?? (props.styleAlt ? theme.button_formAction_alt : theme.button_formAction);\r\n    return (\r\n        <TouchableOpacity style={extractViewStyle(s)} onPress={props.onPress}>\r\n            <Text style={extractTextStyle(s)}>{props.children}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n","import React, { } from 'react';\r\nimport { View, Text } from 'react-native-lite';\r\nimport { theme } from 'themes/theme';\r\nimport { Loading, LoadingInline } from './loading';\r\nimport { ErrorBox, ErrorMessage } from './error-box';\r\nimport { Input_Text, Input_Username, Input_Password, Input_Phone, Input_Email, Input_Currency } from './inputs';\r\nimport { Button } from './button';\r\n\r\ntype PropsOf<T> = T extends (props: infer P) => JSX.Element ? P : never;\r\n\r\nexport const C = {\r\n    Loading,\r\n    LoadingInline,\r\n    ErrorBox,\r\n    ErrorMessage,\r\n    View_Panel: (props: PropsOf<typeof View>) => (<View style={theme.view_panel} {...props} />),\r\n    View_Form: (props: PropsOf<typeof View>) => (<View style={theme.view_form} {...props} />),\r\n    View_FormFields: (props: PropsOf<typeof View>) => (<View style={theme.view_formFields} {...props} />),\r\n    View_FieldRow: (props: PropsOf<typeof View>) => (<View style={theme.view_fieldRow} {...props} />),\r\n    View_FormActionRow: (props: PropsOf<typeof View>) => (<View style={theme.view_formActionRow} {...props} />),\r\n    Text_FormTitle: (props: PropsOf<typeof Text>) => (<Text style={theme.text_formTitle} {...props} />),\r\n    Text_FieldLabel: (props: PropsOf<typeof Text>) => (<Text style={theme.text_fieldLabel} numberOfLines={1} {...props} />),\r\n    Button_FieldInline: (props: PropsOf<typeof Button>) => (<Button style={props.styleAlt ? theme.button_fieldInline_alt : theme.button_fieldInline} {...props} />),\r\n    Button_FormAction: (props: PropsOf<typeof Button>) => (<Button style={props.styleAlt ? theme.button_formAction_alt : theme.button_formAction} {...props} />),\r\n    Input_Text,\r\n    Input_Username,\r\n    Input_Password,\r\n    Input_Phone,\r\n    Input_Email,\r\n    Input_Currency,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ActivityIndicator, View } from 'react-native-lite';\r\nimport { theme } from 'themes/theme';\r\n\r\nexport const Loading = ({ loading }: { loading?: boolean }) => {\r\n\r\n    const visible = loading;\r\n\r\n    // // Show loading for a min time\r\n    // const [visible, setVisible] = useState(loading);\r\n    // const MIN_TIME_MS = 500;\r\n    // useEffect(() => {\r\n    //     if (loading) { setVisible(true); return () => { }; }\r\n    //     const timeoutId = setTimeout(() => {\r\n    //         setVisible(false);\r\n    //     }, MIN_TIME_MS);\r\n    //     return () => {\r\n    //         clearTimeout(timeoutId);\r\n    //     };\r\n    // }, [loading]);\r\n\r\n    if (!visible) { return <></>; }\r\n\r\n    return (\r\n        <View>\r\n            <ActivityIndicator size='large' color={theme.colors.loader} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const LoadingInline = ({ loading }: { loading?: boolean }) => {\r\n\r\n    const visible = loading;\r\n\r\n    // // Show loading for a min time\r\n    // const [visible, setVisible] = useState(loading);\r\n    // const MIN_TIME_MS = 500;\r\n    // useEffect(() => {\r\n    //     if (loading) { setVisible(true); return () => { }; }\r\n    //     const timeoutId = setTimeout(() => {\r\n    //         setVisible(false);\r\n    //     }, MIN_TIME_MS);\r\n    //     return () => {\r\n    //         clearTimeout(timeoutId);\r\n    //     };\r\n    // }, [loading]);\r\n\r\n    if (!visible) { return <></>; }\r\n\r\n    return (\r\n        <>\r\n            <ActivityIndicator size='small' color={theme.colors.loader} />\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { TextInput, View, TouchableOpacity } from 'react-native-lite';\r\nimport { theme, ThemeTextStyle } from 'themes/theme';\r\nimport { PhoneNumber, toStandardPhoneNumber, formatPhoneNumber_UsaCanada } from 'utils/phone-number';\r\nimport { EmailAddress, toEmailAddress } from 'utils/email-address';\r\nimport { Icon } from './icon';\r\nimport { IconKind } from './icon-kind';\r\n\r\nexport const Input_Text = (props: { style?: ThemeTextStyle, value: string, onChange: (value: string) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean, onFocus?: () => void, onBlur?: () => void }) => {\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='default'\r\n            autoCompleteType='off'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={`${props.value}`}\r\n            onChange={(x) => props.onChange(x)}\r\n            onSubmitEditing={props.onSubmit}\r\n            onFocus={props.onFocus}\r\n            onBlur={props.onBlur}\r\n        />\r\n    );\r\n};\r\n\r\nexport const Input_Username = (props: { style?: ThemeTextStyle, value: string, onChange: (value: string) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean }) => {\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='default'\r\n            autoCompleteType='username'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={`${props.value}`}\r\n            onChange={(x) => props.onChange(x)}\r\n            onSubmitEditing={props.onSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport const Input_Password = (props: { style?: ThemeTextStyle, value: string, onChange: (value: string) => void, onSubmit?: () => void, onBlur?: () => void, placeholder?: string, editable?: boolean }) => {\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const inputStyle = props.style ?? theme.input_fieldEntry;\r\n    const { marginRight } = inputStyle;\r\n    return (\r\n        <View style={{ flexDirection: `row`, alignItems: `center` }}>\r\n            <TextInput style={{ ...inputStyle, marginRight: 0 }}\r\n                keyboardType='default'\r\n                autoCompleteType='password'\r\n                secureTextEntry={!showPassword}\r\n                placeholder={props.placeholder}\r\n                editable={props.editable}\r\n                value={`${props.value}`}\r\n                onChange={(x) => props.onChange(x)}\r\n                onSubmitEditing={props.onSubmit}\r\n                onBlur={props.onBlur}\r\n            />\r\n            <TouchableOpacity onPress={() => setShowPassword(s => !s)} style={{ outlineColor: theme.icon.outlineColor }}>\r\n                <View style={{ paddingLeft: 4, paddingRight: 4, marginRight }}>\r\n                    <Icon style={theme.icon} kind={showPassword ? IconKind.eye : IconKind.eyeSlash} />\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport type Currency = number;// & { __type: 'currency' };\r\nexport const Input_Currency = (props: { style?: ThemeTextStyle, value: Currency, onChange: (value: Currency) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean }) => {\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='numeric'\r\n            autoCompleteType='off'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={`${props.value}`}\r\n            onChange={(x) => props.onChange(Number.parseFloat(x) || 0)}\r\n            onSubmitEditing={props.onSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport const Input_Phone = (props: { style?: ThemeTextStyle, value: PhoneNumber, onChange: (value: PhoneNumber) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean }) => {\r\n\r\n    const [valueActual, setValueActual] = useState(formatPhoneNumber_UsaCanada(props.value));\r\n    const changeValueActual = (v: string) => {\r\n        setValueActual(formatPhoneNumber_UsaCanada(v));\r\n        props.onChange(toStandardPhoneNumber(v));\r\n    };\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='phone-pad'\r\n            autoCompleteType='tel'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={valueActual}\r\n            onChange={changeValueActual}\r\n            onSubmitEditing={props.onSubmit}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport const Input_Email = (props: { style?: ThemeTextStyle, value: EmailAddress, onChange: (value: EmailAddress) => void, onSubmit?: () => void, placeholder?: string, editable?: boolean }) => {\r\n\r\n    const [valueActual, setValueActual] = useState(toEmailAddress(props.value));\r\n    const changeValueActual = (v: string) => {\r\n        setValueActual(toEmailAddress(v));\r\n        props.onChange(toEmailAddress(v));\r\n    };\r\n    return (\r\n        <TextInput style={props.style ?? theme.input_fieldEntry}\r\n            keyboardType='email-address'\r\n            autoCompleteType='email'\r\n            placeholder={props.placeholder}\r\n            editable={props.editable}\r\n            value={valueActual}\r\n            onChange={changeValueActual}\r\n            onSubmitEditing={props.onSubmit}\r\n        />\r\n    );\r\n};\r\n","export async function delay(timeout: number): Promise<void> {\r\n    return await new Promise((resolve) => {\r\n        setTimeout(resolve, timeout);\r\n    });\r\n}\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import React from 'react';\r\nimport { ThemeIconStyle, theme } from 'themes/theme';\r\nimport { MdMenu, MdArrowBack, MdCheckBoxOutlineBlank, MdErrorOutline, MdContentCopy, MdDashboard } from 'react-icons/md';\r\nimport { FiChevronRight, FiChevronDown } from 'react-icons/fi';\r\nimport { FaRedo, FaPlus, FaMinus, FaEye, FaEyeSlash, FaCheck, FaCheckSquare, FaSquare } from 'react-icons/fa';\r\nimport { View } from 'react-native-lite';\r\nimport { IconKind } from './icon-kind';\r\n\r\nfunction getIcon(kind: IconKind) {\r\n    switch (kind) {\r\n        case IconKind.menu: return { name: `menu`, component: MdMenu };\r\n        case IconKind.back: return { name: `arrow-back`, component: MdArrowBack };\r\n        case IconKind.error: return { name: `error-outline`, component: MdErrorOutline };\r\n        case IconKind.expanded: return { name: `chevron-down`, component: FiChevronDown };\r\n        case IconKind.collapsed: return { name: `chevron-right`, component: FiChevronRight };\r\n        case IconKind.copy: return { name: `content-copy`, component: MdContentCopy };\r\n        case IconKind.retry: return { name: `reload`, component: FaRedo };\r\n        case IconKind.dashboard: return { name: `dashboard`, component: MdDashboard };\r\n        case IconKind.add: return { name: `plus`, component: FaPlus };\r\n        case IconKind.remove: return { name: `minus`, component: FaMinus };\r\n        case IconKind.eye: return { name: `eye`, component: FaEye };\r\n        case IconKind.eyeSlash: return { name: `eye-slash`, component: FaEyeSlash };\r\n        case IconKind.checkChecked: return { name: `checked`, component: FaCheckSquare };\r\n        case IconKind.checkUnchecked: return { name: `unchecked`, component: FaSquare };\r\n\r\n        // case IconKind.Account: return { name: `account-circle`, component: MaterialIcons };\r\n        // case IconKind.Message: return { name: `message`, component: MaterialIcons };\r\n        // case IconKind.Subscription: return { name: `ticket-account`, component: MaterialCommunityIcons };\r\n        // case IconKind.Campaigns: return { name: `calendar-multiselect`, component: MaterialCommunityIcons };\r\n        // case IconKind.Contacts: return { name: `contacts`, component: MaterialIcons };\r\n        // case IconKind.Keywords: return { name: `key-variant`, component: MaterialCommunityIcons };\r\n        // case IconKind.Resources: return { name: `collections-bookmark`, component: MaterialIcons };\r\n        // case IconKind.Admin: return { name: `settings`, component: MaterialIcons };\r\n        // case IconKind.Solutions: return { name: '', component: FontAwesome };\r\n        // case IconKind.Texting: return { name: '', component: FontAwesome };\r\n        // case IconKind.Pricing: return { name: '', component: FontAwesome };\r\n        // case IconKind.Download: return { name: '', component: FontAwesome };\r\n\r\n        default:\r\n            return { name: `unknown`, component: MdCheckBoxOutlineBlank };\r\n    }\r\n}\r\n\r\nexport const Icon = (props: { kind: IconKind, style?: ThemeIconStyle }) => {\r\n    const icon = getIcon(props.kind);\r\n    const IconComponent = icon.component;\r\n    const size = props.style?.size ?? theme.icon.size ?? theme.sizes.fontSize;\r\n    return (\r\n        <View style={{ width: size, height: size }}>\r\n            <IconComponent name={icon.name} size={size} color={props.style?.color ?? theme.icon.color} />\r\n        </View>\r\n    );\r\n};\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nexport type ThemeViewStyle = {\r\n    display?: 'flex';\r\n    flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\r\n    flexWrap?: 'wrap' | 'nowrap';\r\n    flex?: number;\r\n    justifyContent?: 'flex-start' | 'center' | 'flex-end' | 'space-around' | 'space-between';\r\n    alignItems?: 'flex-start' | 'center' | 'flex-end';\r\n    alignSelf?: 'center' | 'stretch' | 'flex-start' | 'flex-end';\r\n    overflow?: 'visible' | 'hidden';\r\n\r\n    background?: string;\r\n\r\n    margin?: number;\r\n    marginLeft?: number;\r\n    marginRight?: number;\r\n    marginTop?: number;\r\n    marginBottom?: number;\r\n    padding?: number;\r\n    paddingRight?: number;\r\n    paddingLeft?: number;\r\n    paddingTop?: number;\r\n    paddingBottom?: number;\r\n\r\n    width?: number;\r\n    minWidth?: number;\r\n    maxWidth?: number;\r\n    height?: number;\r\n\r\n    borderWidth?: number;\r\n    borderLeftWidth?: number;\r\n    borderRightWidth?: number;\r\n    borderTopWidth?: number;\r\n    borderBottomWidth?: number;\r\n\r\n    borderColor?: string;\r\n    borderLeftColor?: string;\r\n    borderRightColor?: string;\r\n    borderTopColor?: string;\r\n    borderBottomColor?: string;\r\n\r\n\r\n    borderRadius?: number;\r\n    borderStyle?: 'solid';\r\n    outlineColor?: string;\r\n    outline?: `none`;\r\n\r\n    transform?: string;\r\n\r\n    opacity?: number;\r\n\r\n    position?: 'absolute' | 'relative' | 'fixed';\r\n    top?: number;\r\n    bottom?: number;\r\n    left?: number;\r\n    right?: number;\r\n    zIndex?: number;\r\n};\r\nexport type ThemeTextStyle = {\r\n    margin?: number;\r\n    marginLeft?: number;\r\n    marginRight?: number;\r\n    marginTop?: number;\r\n    marginBottom?: number;\r\n    padding?: number;\r\n    paddingRight?: number;\r\n    paddingLeft?: number;\r\n    paddingTop?: number;\r\n    paddingBottom?: number;\r\n\r\n    color?: string;\r\n\r\n    fontFamily?: string;\r\n    fontSize?: number;\r\n    fontWeight?: 'normal' | 'bold' | 'lighter';\r\n    lineHeight?: string;\r\n    whiteSpace?: 'normal' | 'nowrap' | 'pre' | 'pre-wrap';\r\n    minWidth?: number;\r\n\r\n    outlineColor?: string;\r\n    userSelect?: `none`;\r\n};\r\nexport type ThemeIconStyle = {\r\n    color?: string;\r\n    size?: number;\r\n    outlineColor?: string;\r\n};\r\n\r\nexport const extractViewStyle = (style: ThemeViewStyle & ThemeTextStyle): ThemeViewStyle => {\r\n    return {\r\n        display: style.display,\r\n        flexDirection: style.flexDirection,\r\n        flex: style.flex,\r\n        justifyContent: style.justifyContent,\r\n        alignItems: style.alignItems,\r\n        overflow: style.overflow,\r\n\r\n        background: style.background,\r\n\r\n        margin: style.margin,\r\n        marginLeft: style.margin ?? style.marginLeft,\r\n        marginRight: style.margin ?? style.marginRight,\r\n        marginTop: style.margin ?? style.marginTop,\r\n        marginBottom: style.margin ?? style.marginBottom,\r\n        padding: style.padding,\r\n        paddingRight: style.padding ?? style.paddingRight,\r\n        paddingLeft: style.padding ?? style.paddingLeft,\r\n        paddingTop: style.padding ?? style.paddingTop,\r\n        paddingBottom: style.padding ?? style.paddingBottom,\r\n\r\n        width: style.width,\r\n        minWidth: style.minWidth,\r\n        maxWidth: style.maxWidth,\r\n        height: style.height,\r\n\r\n        borderWidth: style.borderWidth,\r\n        borderRadius: style.borderRadius,\r\n        borderColor: style.borderColor,\r\n        borderStyle: style.borderStyle,\r\n\r\n        outlineColor: style.outlineColor,\r\n    };\r\n};\r\nexport const extractTextStyle = (style: ThemeViewStyle & ThemeTextStyle): ThemeTextStyle => {\r\n    return {\r\n        // padding: style.padding,\r\n        color: style.color,\r\n\r\n        fontFamily: style.fontFamily,\r\n        fontSize: style.fontSize,\r\n        fontWeight: style.fontWeight,\r\n        lineHeight: style.lineHeight,\r\n        // whiteSpace: style.whiteSpace,\r\n\r\n        outlineColor: style.outlineColor,\r\n    };\r\n};\r\n\r\nexport const basicThemeColors = {\r\n    text: `#333333`,\r\n    text_header: `#333333`,\r\n    text_button: `#333333`,\r\n    text_error: `#333333`,\r\n    text_errorMessage: `#ff3333`,\r\n    border: `#cccccc`,\r\n    border_minor: `#cccccc`,\r\n    border_input: `#cccccc`,\r\n    outline: `#888888`,\r\n    background: `#ffffff`,\r\n    background_field: `#dddddd`,\r\n    background_button: `#eeeeee`,\r\n    background_error: `#ffcccc`,\r\n    loader: `#3333ff`,\r\n    icon: `#3333ff`,\r\n};\r\nexport type RectSize = { all?: number, left?: number, right?: number, top?: number, bottom?: number };\r\nconst getBorderSizes = (size: RectSize) => {\r\n    return {\r\n        borderWidth: size.all,\r\n        borderLeftWidth: size.left ?? size.all,\r\n        borderRightWidth: size.right ?? size.all,\r\n        borderTopWidth: size.top ?? size.all,\r\n        borderBottomWidth: size.bottom ?? size.all,\r\n    };\r\n};\r\n\r\nexport const basicThemeSizes = {\r\n    textPadding: 4,\r\n    borderWidth: { all: 1 } as RectSize,\r\n    borderWidth_minor: { all: 1 } as RectSize,\r\n    borderWidth_input: { all: 1 } as RectSize,\r\n    borderRadius: 4,\r\n    sectionGap: 16,\r\n    elementGap: 8,\r\n    rowGap: 4,\r\n    rowPadding: 4,\r\n\r\n    fontSize: 14,\r\n    fontSize_input: 16,\r\n    fontSize_button: 14,\r\n    fontSize_header: 16,\r\n\r\n    lineHeight: `18px`,\r\n\r\n    minWidth_label: 120,\r\n    minWidth_input: 120,\r\n    minWidth_button: 120,\r\n\r\n    icon: 14,\r\n};\r\n\r\nexport const basicFont = {\r\n    fontFamily: `\"Trebuchet MS\", Helvetica, Roboto, sans-serif`,\r\n    fontWeight_normal: `normal` as 'normal' | 'bold',\r\n    fontWeight_button: `bold` as 'normal' | 'bold',\r\n    fontWeight_header: `bold` as 'normal' | 'bold',\r\n};\r\n\r\nexport type ThemeColors = typeof basicThemeColors;\r\nexport type ThemeSizes = typeof basicThemeSizes;\r\nexport type ThemeFont = typeof basicFont;\r\n\r\nconst createTheme = (colors: ThemeColors, sizes: ThemeSizes, font: ThemeFont) => {\r\n\r\n    const borderProps = {\r\n        ...getBorderSizes(sizes.borderWidth),\r\n\r\n        borderRadius: sizes.borderRadius,\r\n        borderColor: colors.border,\r\n        borderStyle: `solid`,\r\n        outlineColor: colors.outline,\r\n    } as const;\r\n\r\n    const borderProps_minor = {\r\n        ...getBorderSizes(sizes.borderWidth_minor),\r\n\r\n        borderRadius: sizes.borderRadius,\r\n        borderColor: colors.border_minor,\r\n        borderStyle: `solid`,\r\n        outlineColor: colors.outline,\r\n    } as const;\r\n\r\n    const borderProps_input = {\r\n        ...getBorderSizes(sizes.borderWidth_input),\r\n\r\n        borderRadius: sizes.borderRadius,\r\n        borderColor: colors.border_input,\r\n        borderStyle: `solid`,\r\n        outlineColor: colors.outline,\r\n    } as const;\r\n\r\n    let sView: ThemeViewStyle = {};\r\n    let sText: ThemeTextStyle = {};\r\n    let sIcon: ThemeIconStyle = {};\r\n    let sTextView: ThemeTextStyle & ThemeViewStyle = {};\r\n\r\n    const theme = {\r\n        colors,\r\n        sizes,\r\n        font,\r\n\r\n        view_panel: sView = {\r\n            background: colors.background,\r\n            padding: sizes.elementGap,\r\n        },\r\n        view_form: sView = {\r\n            ...borderProps,\r\n            marginBottom: sizes.sectionGap,\r\n            padding: sizes.elementGap,\r\n            // background: colors.background_field,\r\n        },\r\n        text_formTitle: sText = {\r\n            padding: sizes.textPadding,\r\n            color: colors.text_header,\r\n            fontSize: sizes.fontSize_header,\r\n            fontFamily: font.fontFamily,\r\n            fontWeight: font.fontWeight_header,\r\n        },\r\n        view_formFields: sView = {\r\n            // ...borderProps,\r\n            ...borderProps_minor,\r\n            // padding: sizes.elementGap,\r\n            marginBottom: sizes.rowGap,\r\n            background: colors.background_field,\r\n            // alignItems: `center`,\r\n        },\r\n        view_fieldRow: sView = {\r\n            // ...borderProps,\r\n            // ...borderProps_minor,\r\n            // marginBottom: sizes.rowGap,\r\n            // padding: sizes.rowPadding,\r\n            marginLeft: sizes.rowPadding,\r\n            // background: colors.background_field,\r\n            display: `flex`,\r\n            flexDirection: `row`,\r\n\r\n            alignItems: `center`,\r\n            flexWrap: `wrap`,\r\n        },\r\n        text_fieldLabel: sText = {\r\n            padding: sizes.textPadding,\r\n            color: colors.text,\r\n            fontSize: sizes.fontSize,\r\n            fontWeight: font.fontWeight_normal,\r\n            minWidth: sizes.minWidth_label,\r\n            //  whiteSpace: `nowrap`,\r\n        },\r\n        input_fieldEntry: sText = {\r\n            ...borderProps_input,\r\n            marginBottom: sizes.rowGap,\r\n            marginRight: sizes.rowGap,\r\n            padding: sizes.textPadding,\r\n            color: colors.text,\r\n            fontSize: sizes.fontSize_input,\r\n            fontWeight: font.fontWeight_normal,\r\n            lineHeight: sizes.lineHeight,\r\n            minWidth: sizes.minWidth_input,\r\n        },\r\n        button_fieldInline: sTextView = {\r\n            ...borderProps,\r\n            // marginLeft: sizes.elementGap,\r\n            marginBottom: sizes.rowGap,\r\n            marginRight: sizes.rowGap,\r\n            padding: sizes.textPadding,\r\n            background: colors.background_button,\r\n            color: colors.text_button,\r\n            fontSize: sizes.fontSize_button,\r\n            fontWeight: font.fontWeight_button,\r\n            lineHeight: sizes.lineHeight,\r\n            display: `flex`,\r\n            minWidth: sizes.minWidth_button,\r\n        },\r\n        button_fieldInline_alt: sTextView = {\r\n            ...sTextView,\r\n            background: colors.text_button,\r\n            color: colors.background_button,\r\n            borderColor: colors.background_button,\r\n        },\r\n        view_formActionRow: sView = {\r\n            display: `flex`,\r\n            flexDirection: `row`,\r\n            justifyContent: `flex-end`,\r\n            marginBottom: sizes.elementGap,\r\n        },\r\n        button_formAction: sTextView = {\r\n            ...borderProps,\r\n            marginLeft: sizes.elementGap,\r\n            padding: sizes.textPadding,\r\n            background: colors.background_button,\r\n            color: colors.text_button,\r\n            fontSize: sizes.fontSize_button,\r\n            fontWeight: font.fontWeight_button,\r\n            lineHeight: sizes.lineHeight,\r\n            minWidth: sizes.minWidth_button,\r\n        },\r\n        button_formAction_alt: sTextView = {\r\n            ...sTextView,\r\n            background: colors.text_button,\r\n            color: colors.background_button,\r\n            borderColor: colors.background_button,\r\n        },\r\n\r\n        view_error: sView = {\r\n            ...borderProps,\r\n            marginBottom: sizes.sectionGap,\r\n            padding: sizes.rowPadding,\r\n            background: colors.background_error,\r\n        },\r\n        text_error: sText = {\r\n            padding: sizes.textPadding,\r\n            color: colors.text_error,\r\n            fontSize: sizes.fontSize,\r\n            fontFamily: font.fontFamily,\r\n            fontWeight: font.fontWeight_button,\r\n        },\r\n        text_errorMessage: sText = {\r\n            padding: sizes.textPadding,\r\n            color: colors.text_errorMessage,\r\n            fontSize: sizes.fontSize,\r\n            fontFamily: font.fontFamily,\r\n            fontWeight: font.fontWeight_button,\r\n        },\r\n\r\n        icon: sIcon = {\r\n            size: sizes.icon,\r\n            color: colors.icon,\r\n            outlineColor: colors.outline,\r\n        },\r\n        icon_errorMessage: sIcon = {\r\n            size: sizes.icon,\r\n            color: colors.text_errorMessage,\r\n            outlineColor: colors.outline,\r\n        },\r\n    } as const;\r\n\r\n    return theme;\r\n};\r\n\r\nexport const purpleColors = {\r\n    purple: `#863d8f`,\r\n    purpleLite: `#a75da7`,\r\n    purpleBackgroundLite: `#ddbfdd`,\r\n    blue: `#3baccf`,\r\n    gray: `#656364`,\r\n    lightGray: `#f8f6f7`,\r\n    lightBackgroundGray: `#e8e6e7`,\r\n    borderGray: `#d7c7d7`,\r\n    headerWhite: `#ffffff`,\r\n    headerGray: `#cecece`,\r\n    menuWhite: `#ffffff`,\r\n    bodyWhite: `#ffffff`,\r\n    buttonGray: `#a0a1a5`,\r\n    buttonWhite: `#e2e3e9`,\r\n    headingGray: `#f8f6f7`,\r\n    cardLightGray: `#f8f8f8`,\r\n    textWhite: `#ffffff`,\r\n    textBlack: `#2b2b2b`,\r\n    textGray: `#696768`,\r\n\r\n    // New Colors\r\n    warnRed: `#C56364`,\r\n    errorRed: `#C56364`,\r\n    deleteRed: `#C56364`,\r\n    changedYellow: `#F5F5C5`,\r\n};\r\n\r\nexport const purpleThemeColors: typeof basicThemeColors = {\r\n    ...basicThemeColors,\r\n    text: `#2b2b2b`,\r\n    text_header: `#863d8f`,\r\n    text_button: `#ffffff`,\r\n    // text_error: `#ffffff`,\r\n    border: `#863d8f`,\r\n    border_minor: `#863d8f`,\r\n    // border_minor: `#aaaaaa`,\r\n    border_input: `#aaaaaa`,\r\n    background: `#ffffff`,\r\n    background_field: `#dddddd`,\r\n    background_button: `#863d8f`,\r\n    // background_error: `#C56364`,\r\n    loader: `#863d8f`,\r\n    icon: `#863d8f`,\r\n};\r\n\r\nexport const purpleSizes: typeof basicThemeSizes = {\r\n    ...basicThemeSizes,\r\n    borderWidth: { all: 1, bottom: 4 },\r\n    borderWidth_minor: { all: 0, bottom: 1 },\r\n};\r\n\r\nexport const vscodeThemeColors = {\r\n    colors: {\r\n        text: `#569CD6`,\r\n        border: `#6796E6`,\r\n        background: `#1e1e1e`,\r\n        background_field: `#2e2e2e`,\r\n    },\r\n};\r\n\r\n// eslint-disable-next-line import/no-mutable-exports\r\nexport let theme = createTheme(basicThemeColors, basicThemeSizes, basicFont);\r\n// eslint-disable-next-line import/no-mutable-exports\r\n// export let theme = createTheme(purpleThemeColors, purpleSizes, basicFont);\r\n\r\nexport const setTheme = (colors: ThemeColors, sizes: ThemeSizes, font: ThemeFont) => {\r\n    theme = createTheme(purpleThemeColors, basicThemeSizes, basicFont);\r\n};\r\n","import { createSubscribable } from 'utils/subscribable';\r\nimport { AppError } from 'utils/error';\r\nimport { WebsocketApi, WebsocketConnectionEvent, WebsocketConnectionData } from './types';\r\n\r\nexport const createWebsocketClient = (config: { websocketsApiUrl: string }): WebsocketApi => {\r\n\r\n    const api: WebsocketApi = {\r\n        connect: <T>({ key }: WebsocketConnectionData) => {\r\n            // With this implementation, the server simply echos all messages to all clients\r\n            // The client will filter those messages client-side with the key\r\n            // NOTE: When the server filters via keys (providing privacy), this will continue to work without changes\r\n\r\n            type MessageContainer = {\r\n                message: T | null;\r\n                key: string;\r\n            };\r\n\r\n            const subscribable = createSubscribable<T>();\r\n            const subscribableEvents = createSubscribable<WebsocketConnectionEvent>();\r\n\r\n            // Connect to websocket (and reconnect, etc.)\r\n            const createSocket = () => {\r\n                const socket = new WebSocket(`${config.websocketsApiUrl}`);\r\n\r\n                // Connection opened\r\n                socket.addEventListener(`open`, (event) => {\r\n                    if (socket !== activeSocket) {\r\n                        socket.close();\r\n                        return;\r\n                    }\r\n\r\n                    subscribableEvents.onStateChange({ connectionStatus: `opened` });\r\n\r\n                    // Send a key message\r\n                    const messageContainer: MessageContainer = {\r\n                        message: null,\r\n                        key,\r\n                    };\r\n                    socket.send(JSON.stringify(messageContainer));\r\n\r\n                });\r\n                socket.addEventListener(`close`, (event) => {\r\n                    if (socket !== activeSocket) {\r\n                        socket.close();\r\n                        return;\r\n                    }\r\n\r\n                    subscribableEvents.onStateChange({ connectionStatus: `closed` });\r\n                    reconnect();\r\n                });\r\n                socket.addEventListener(`error`, (event) => {\r\n                    if (socket !== activeSocket) {\r\n                        socket.close();\r\n                        return;\r\n                    }\r\n\r\n                    subscribableEvents.onStateChange({ connectionStatus: `error`, error: { message: `Websocket Error`, error: event } });\r\n                    reconnect();\r\n                });\r\n\r\n                // Listen for messages\r\n                socket.addEventListener(`message`, (event) => {\r\n                    // console.log(`socket message`, { event });\r\n                    if (socket !== activeSocket) {\r\n                        socket.close();\r\n                        return;\r\n                    }\r\n\r\n                    const m = JSON.parse(event.data) as MessageContainer;\r\n                    if (m.key !== key || !m.message) { return; }\r\n                    subscribable.onStateChange(m.message);\r\n                });\r\n\r\n                return socket;\r\n            };\r\n\r\n            let activeSocket: WebSocket = createSocket();\r\n            const reconnect = () => {\r\n                setTimeout(() => {\r\n                    activeSocket = createSocket();\r\n                }, 50);\r\n            };\r\n\r\n            // Send Messages\r\n            const send = (message: T) => {\r\n                if (activeSocket.readyState !== WebSocket.OPEN) {\r\n                    throw new AppError(`Websocket is not open`);\r\n                }\r\n                const messageContainer: MessageContainer = {\r\n                    message,\r\n                    key,\r\n                };\r\n                activeSocket.send(JSON.stringify(messageContainer));\r\n            };\r\n\r\n            return {\r\n                send,\r\n                isConnected: () => activeSocket.readyState === WebSocket.OPEN,\r\n                subscribeMessages: subscribable.subscribe,\r\n                subscribeConnectionEvents: subscribableEvents.subscribe,\r\n            };\r\n        },\r\n    };\r\n\r\n    return api;\r\n};\r\n","import { getValuesAsItems } from './objects';\r\n\r\nexport const moveItem = <T>(obj: T, from: T[], to: T[]) => {\r\n    const i = from.indexOf(obj);\r\n    if (i < 0) { throw new Error(`moveItem Failed to find an item in the from array: ${JSON.stringify({ obj, from, to })}`); }\r\n    from.splice(i, 1);\r\n    to.push(obj);\r\n};\r\n\r\nexport const distinct = <T>(items: T[]): T[] => {\r\n    const set = new Set(items);\r\n    return [...set];\r\n};\r\n\r\nexport const shuffle = <T>(items: T[]): T[] => {\r\n    return items.map(x => ({ x, value: Math.random() })).sort((a, b) => a.value - b.value).map(x => x.x);\r\n};\r\n\r\nexport const distinct_key = <T>(items: T[], getKey: (item: T) => string): T[] => {\r\n    const set = {} as { [key: string]: T };\r\n    items.forEach(x => { set[getKey(x)] = x; });\r\n    return getValuesAsItems(set);\r\n};\r\n\r\nexport const groupItems = <T>(items: T[], getKey: (item: T) => string): { [key: string]: T[] } => {\r\n    const groups = {} as { [key: string]: T[] };\r\n    for (const x of items) {\r\n        const g = groups[getKey(x)] ?? (groups[getKey(x)] = []);\r\n        g.push(x);\r\n    }\r\n    return groups;\r\n};\r\n\r\nexport const mergeItems = <T>(items: T[], getKey: (item: T) => string, getMerged: (item: T[], key: string) => T): T[] => {\r\n    const groups = groupItems(items, getKey);\r\n    const merged = getValuesAsItems(groups).map(g => getMerged(g, getKey(g[0])));\r\n    return merged;\r\n};\r\n\r\nexport function sameArrayContents<T>(a: undefined | null | T[], b?: undefined | null | T[]) {\r\n    if (a === b) { return true; }\r\n    if (a == null && b == null) { return true; }\r\n    if (a == null || b == null) { return false; }\r\n    if (a.length !== b.length) { return false; }\r\n    for (const i in a) {\r\n        if (a[i] !== b[i]) { return false; }\r\n    }\r\n    return true;\r\n}\r\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flatMap');\n","export const userProfileChracters = `\r\n🐵 🐶 🐺 🐱 🦁 🐯 🦒 🦊 🦝 🐮 🐷 🐗 🐭 🐹 🐰 🐻 🐨 🐼 🐸 🦓 🐴 🦄 🐔 🐲\r\n`.split(` `).map(x => x.trim()).filter(x => x);\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native-lite';\r\nimport { useAutoLoadingError } from 'utils-react/hooks';\r\nimport { C } from 'controls-react';\r\nimport { Icon } from 'controls-react/icon';\r\nimport { IconKind } from 'controls-react/icon-kind';\r\nimport { UserDataService, UserProfileInfo } from './user-data-service';\r\nimport { userProfileChracters } from './user-profile-emojis';\r\n\r\n\r\nexport const UserProfileManagerView = (props: { onClose?: () => void }) => {\r\n\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [userProfiles, setUserProfiles] = useState(null as null | UserProfileInfo[]);\r\n\r\n    const reload = () => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setup();\r\n        stopIfObsolete();\r\n\r\n        const profiles = await UserDataService.get().getUserProfiles();\r\n        setUserProfiles(profiles);\r\n    });\r\n\r\n    useEffect(() => {\r\n        reload();\r\n    }, []);\r\n\r\n    return (\r\n        <C.View_Panel>\r\n            <C.Text_FormTitle >Users</C.Text_FormTitle>\r\n            <C.LoadingInline loading={loading} />\r\n            <C.ErrorBox error={error} />\r\n            {userProfiles?.map(x => (\r\n                <UserProfileView key={x.key} userProfile={x} onActiveUserChange={reload} onUserProfileChange={reload} />\r\n            ))}\r\n            <C.Text_FormTitle >Add User</C.Text_FormTitle>\r\n            <AddUserProfileView onUserAdded={reload} />\r\n            {!!props.onClose && (\r\n                <C.View_FormActionRow>\r\n                    <C.Button_FormAction onPress={() => props.onClose?.()}>Done</C.Button_FormAction>\r\n                </C.View_FormActionRow>\r\n            )}\r\n        </C.View_Panel>\r\n    );\r\n};\r\n\r\nconst AddUserProfileView = (props: { onUserAdded: () => void }) => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [shareCode, setShareCode] = useState(null as null | string);\r\n    const addShareCode = () => {\r\n        if (!shareCode) { return; }\r\n\r\n        doWork(async (stopIfObsolete) => {\r\n            await UserDataService.get().addUserFromShareCode(shareCode);\r\n            stopIfObsolete();\r\n            props.onUserAdded();\r\n            setShareCode(null);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <C.View_Form>\r\n                <C.View_FieldRow>\r\n                    <C.LoadingInline loading={loading} />\r\n                    <C.Input_Text value={shareCode ?? ``} onChange={setShareCode} placeholder='Enter Share Code' />\r\n                    <C.Button_FieldInline onPress={addShareCode}>Add User</C.Button_FieldInline>\r\n                </C.View_FieldRow>\r\n                <C.ErrorBox error={error} />\r\n            </C.View_Form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst UserProfileView = ({ userProfile, onActiveUserChange, onUserProfileChange }: { userProfile: UserProfileInfo, onActiveUserChange: () => void, onUserProfileChange: () => void }) => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [shareCode, setShareCode] = useState(null as null | string);\r\n    const [characters, setCharacters] = useState(null as null | string[]);\r\n\r\n    const createShareCode = () => doWork(async (stopIfObsolete) => {\r\n        const result = await UserDataService.get().createShareCode(userProfile.key);\r\n        stopIfObsolete();\r\n        setShareCode(result.shareCode);\r\n    });\r\n    const makeActive = () => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setActiveUser(userProfile.key);\r\n        stopIfObsolete();\r\n        onActiveUserChange();\r\n    });\r\n\r\n    const showCharacterSelection = () => {\r\n        setCharacters(userProfileChracters);\r\n    };\r\n    const selectCharacter = (character: string) => doWork(async (stopIfObsolete) => {\r\n        await UserDataService.get().setUserProfileInfo(userProfile.key, { emoji: character });\r\n\r\n        setCharacters(null);\r\n        onUserProfileChange();\r\n    });\r\n\r\n    if (characters) {\r\n        return (\r\n            <>\r\n                <C.View_Form>\r\n                    <View style={{ flexDirection: `row`, flexWrap: `wrap` }}>\r\n                        {characters.map(x => (\r\n                            <TouchableOpacity key={x} onPress={() => selectCharacter(x)} >\r\n                                <View>\r\n                                    <Text style={{ fontSize: 32 }} >{x}</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        ))}\r\n                    </View>\r\n                </C.View_Form>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <C.View_Form>\r\n                <C.View_FieldRow>\r\n                    <C.LoadingInline loading={loading} />\r\n                    <TouchableOpacity onPress={makeActive}>\r\n                        <Icon style={{ size: 32 }} kind={userProfile.isActive ? IconKind.checkChecked : IconKind.checkUnchecked} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={showCharacterSelection} >\r\n                        <View>\r\n                            <Text style={{ fontSize: 32 }} >{userProfile.emoji}</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    <UserProfileName userProfile={userProfile} onNameChange={onUserProfileChange} />\r\n                    {!!shareCode && (\r\n                        <C.Text_FieldLabel>{shareCode}</C.Text_FieldLabel>\r\n                    )}\r\n                    {!shareCode && (\r\n                        <C.Button_FieldInline onPress={createShareCode}>Create Share Code</C.Button_FieldInline>\r\n                    )}\r\n                </C.View_FieldRow>\r\n                <C.ErrorBox error={error} />\r\n            </C.View_Form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport const UserProfileName = ({ userProfile, onNameChange }: { userProfile: UserProfileInfo, onNameChange: () => void }) => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [name, setName] = useState(userProfile.name);\r\n    const [isEditingName, setIsEditingName] = useState(false);\r\n\r\n    const changeName = () => doWork(async (stopIfObsolete) => {\r\n        console.log(`UserProfileName changeName`, { name });\r\n\r\n        await UserDataService.get().setUserProfileInfo(userProfile.key, { name });\r\n\r\n        setIsEditingName(false);\r\n        onNameChange();\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {!isEditingName && (\r\n                <TouchableOpacity onPress={() => setIsEditingName(true)} >\r\n                    <C.Text_FieldLabel>{userProfile.name}</C.Text_FieldLabel>\r\n                </TouchableOpacity>\r\n            )}\r\n            {isEditingName && (\r\n                <>\r\n                    <C.Input_Text value={name} onChange={setName} onSubmit={changeName} />\r\n                    <C.Button_FieldInline onPress={changeName}>Change</C.Button_FieldInline>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState, useRef } from 'react';\r\nimport { sameArrayContents } from 'utils/arrays';\r\nimport { ErrorState } from 'utils/error';\r\n\r\ntype TDoWork = (\r\n    doWorkInner: (stopIfObsolete: (() => void)) => Promise<void>,\r\n    getContext?: () => unknown[]) => void;\r\n\r\n\r\nexport function useMounted() {\r\n    const mounted = useRef(true);\r\n    useEffect(() => {\r\n        // Unmount on unsub\r\n        return () => {\r\n            mounted.current = false;\r\n        };\r\n    }, [/* Init Only */]);\r\n    return { mounted };\r\n}\r\n\r\n/** Automatically handle loading and error objects with asyncronous calls\r\n * @return The { loading, error, doWork } values\r\n * @example\r\n *\r\n *      const { loading, error, doWork } = ChatHooks.useAutoLoadingError();\r\n *      ...\r\n *          doWork(async (stopIfObsolete) => {\r\n *              ...\r\n *              const result = async DoAsyncWork());\r\n *              stopIfObsolete(); // Stop work if component has been unmounted, or if contextValues have changed since beginning of doWork\r\n *              ...\r\n *              setResult(result);\r\n *          }, () => [ contextValueA, contextValueB ]); // Optional context values to stop work if changed\r\n *    \r\n */\r\nexport function useAutoLoadingError() {\r\n    const { mounted } = useMounted();\r\n    const [loadingError, setLoadingError] = useState({ loading: false, error: null as null | ErrorState });\r\n\r\n    const UNMOUNTED = `unmounted`;\r\n    const CHANGED_CONTEXT = `changedContext`;\r\n\r\n    const doWork: TDoWork = (\r\n        doWorkInner: (stopIfObsolete: (() => void)) => Promise<void>,\r\n        getContext?: () => unknown[]) => {\r\n\r\n        let contextInit = undefined as undefined | unknown[];\r\n\r\n        const stopIfObsolete = () => {\r\n            if (!mounted.current) {\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw UNMOUNTED;\r\n            }\r\n            const c = getContext?.();\r\n\r\n            if (!sameArrayContents(contextInit, c)) {\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw CHANGED_CONTEXT;\r\n            }\r\n        };\r\n\r\n        const doCall = async () => {\r\n            contextInit = getContext?.();\r\n            setLoadingError({ loading: true, error: null });\r\n\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            let hadError = false;\r\n\r\n            try {\r\n                try {\r\n                    await doWorkInner(stopIfObsolete);\r\n                    stopIfObsolete();\r\n                    setLoadingError({ loading: false, error: null });\r\n                }\r\n                catch (error) {\r\n                    // Ignore unmounted or changed context\r\n                    if (error !== UNMOUNTED && error !== CHANGED_CONTEXT) {\r\n                        throw error;\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                // console.log(`doWork catch`, { err: error });\r\n                hadError = true;\r\n\r\n                if (!mounted.current) {\r\n                    // console.warn(`doWork Error when not Mounted`, { err: error });\r\n                    return;\r\n                }\r\n\r\n                setLoadingError({ loading: false, error: { message: error.message ?? `Unknown Error in doWork`, error, retryCallback: doCall } });\r\n            }\r\n        };\r\n\r\n        // Start Async\r\n        (async () => await doCall())();\r\n    };\r\n\r\n    return { loading: loadingError.loading, error: loadingError.error, doWork };\r\n}\r\n\r\nexport function useLoadData<T>(doWork: TDoWork, getData: () => Promise<T>, getDataDeps?: () => unknown[]) {\r\n    const [data, setData] = useState(null as null | T);\r\n    useEffect(() => {\r\n        // console.log(`useLoadData.useEffect`);\r\n        doWork(async (stopIfObsolete) => {\r\n            // console.log(`useLoadData.useEffect.doWork`);\r\n            const d = await getData();\r\n            stopIfObsolete();\r\n            setData(d);\r\n        }, getDataDeps);\r\n    }, getDataDeps?.() ?? []);\r\n    return { data };\r\n}\r\n","import { distinct, shuffle } from 'utils/arrays';\r\nimport { SpeechService } from '../../utils/speech';\r\nimport { ProblemService, ProblemAnswer } from '../problems-service';\r\nimport { getSpellingEntries } from './spelling-entries';\r\n\r\nexport const createSpellingProblemService = ({ speechService, maxAnswers = 4, sectionSize = 25 }: { speechService: SpeechService, maxAnswers?: number, sectionSize?: number }): ProblemService => {\r\n    const speech = speechService;\r\n    const spellingEntries = getSpellingEntries();\r\n    const sectionCount = Math.ceil(spellingEntries.length / sectionSize);\r\n\r\n    let state = {\r\n        nextIndex: 0,\r\n        completedSectionKeys: [] as string[],\r\n    };\r\n\r\n    const getSectionKey = (sectionIndex: number) => {\r\n        return `${sectionIndex}`;\r\n    };\r\n    const getSectionName = (sectionIndex: number) => {\r\n        return `Spelling ${sectionIndex + 1}`;\r\n    };\r\n\r\n    const service: ProblemService = {\r\n        load: async (storage) => {\r\n            const loaded = await storage.load<typeof state>();\r\n            if (loaded) {\r\n                state = loaded;\r\n            }\r\n        },\r\n        save: async (storage) => {\r\n            await storage.save(state);\r\n        },\r\n        getSections: () => [...new Array(sectionCount)].map((x, i) => ({\r\n            key: getSectionKey(i),\r\n            name: getSectionName(i),\r\n            isComplete: state.completedSectionKeys.includes(getSectionKey(i)),\r\n        })),\r\n        gotoSection: ({ key }) => {\r\n            const a = Number.parseInt(key, 10);\r\n            state.nextIndex = a * sectionSize;\r\n            console.log(`createSpellingProblemService gotoSection`, { key, a, state });\r\n        },\r\n        getNextProblem: () => {\r\n            if (state.nextIndex >= spellingEntries.length) {\r\n                state.nextIndex = 0;\r\n            }\r\n\r\n            const i = state.nextIndex;\r\n            state.nextIndex++;\r\n\r\n            const p = spellingEntries[i];\r\n            const correctValue = p.word;\r\n            const wrongAnswerCount = maxAnswers - 1;\r\n            const wrongValues =\r\n                shuffle(distinct(p.mispellings)).slice(0, wrongAnswerCount);\r\n\r\n            const answers: ProblemAnswer[] = shuffle([...wrongValues.map(x => ({ value: `${x}`, isCorrect: false })), { value: `${correctValue}`, isCorrect: true }]).map(x => ({ ...x, key: x.value }));\r\n\r\n            const isLastOfSection = (i + 1) % sectionSize === 0;\r\n            const isLastOfSubject = i === spellingEntries.length - 1;\r\n            return {\r\n                key: `${i + 1}`,\r\n                question: `Word ${i + 1}`,\r\n                onQuestion: () => { speech.speak(correctValue); },\r\n                answers,\r\n                sectionKey: getSectionKey(Math.floor(i / sectionSize)),\r\n                isLastOfSection,\r\n                isLastOfSubject,\r\n            };\r\n        },\r\n        recordAnswer: (problem, answer) => {\r\n            if (answer.isCorrect && problem.isLastOfSection) {\r\n                state.completedSectionKeys.push(problem.sectionKey);\r\n            }\r\n        },\r\n    };\r\n\r\n    return service;\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, ActivityIndicator, TouchableOpacity } from 'react-native-lite';\r\nimport { groupItems } from 'utils/arrays';\r\nimport { toKeyValueArray } from 'utils/objects';\r\nimport { useAutoLoadingError } from 'utils-react/hooks';\r\nimport { defaultDoodleDrawing, DoodleSegment, DoodleDrawing, doodleSegmentToSvgPath_line, DoodleDataWithScore } from './doodle';\r\nimport { createDoodleDrawingStorageService } from './doodle-storage';\r\n\r\nexport const styles = {\r\n    drawing: {\r\n        width: 312,\r\n        height: 312,\r\n        color: `#FFFFFF`,\r\n        backgroundColor: `#000000`,\r\n    },\r\n};\r\n\r\nexport const DoodleTestView = (props: {}) => {\r\n    const [doodle, setDoodle] = useState(defaultDoodleDrawing());\r\n\r\n    return (\r\n        <>\r\n            <DoodleDrawerView style={styles.drawing} drawing={doodle} onChange={setDoodle} />\r\n            <DoodleDisplayView style={styles.drawing} drawing={doodle} />\r\n        </>\r\n    );\r\n};\r\n\r\n// export const DoodleDrawingView = (props: { drawing?: DoodleDrawing, onDrawingChanged: (drawing: DoodleDrawing) => void }) => {\r\n\r\n//     const [doodle, setDoodle] = useState(props.drawing ?? defaultDoodleDrawing());\r\n//     const changeDoodle = (value: DoodleDrawing) => {\r\n//         setDoodle(value);\r\n//         props.onDrawingChanged(value);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <DoodleDrawer style={styles.drawing} drawing={doodle} onChange={changeDoodle} />\r\n//             {/* <div>\r\n//                 {JSON.stringify(doodle)}\r\n//             </div> */}\r\n//             {/* <div>\r\n//                 {JSON.stringify(decodeDoodleDrawing(encodeDoodleDrawing(doodle)))}\r\n//             </div> */}\r\n\r\n//             {/* <div>\r\n//                 {encodeDoodleDrawing(doodle).doodleText}\r\n//             </div> */}\r\n//             {/* <div>\r\n//                 {encodeDoodleDrawing(decodeDoodleDrawing(encodeDoodleDrawing(doodle))).doodleText}\r\n//             </div>  */}\r\n//         </>\r\n//     );\r\n// };\r\n\r\n\r\nexport const DoodleDrawerView = (props: { style: { width: number, height: number, color: string, backgroundColor: string }, drawing: DoodleDrawing, onChange: (drawing: DoodleDrawing) => void }) => {\r\n    const { style, drawing, onChange } = props;\r\n    const scale = style.width / drawing.width;\r\n\r\n    const [segment, setSegment] = useState(null as null | DoodleSegment);\r\n    const segmentClientStart = useRef(null as null | { clientX: number, clientY: number, x: number, y: number });\r\n    const divHost = useRef(null as null | HTMLDivElement);\r\n\r\n    type Ev = React.SyntheticEvent;\r\n\r\n    const onIgnore = (e: Ev) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        e.nativeEvent.cancelBubble = true;\r\n        e.nativeEvent.returnValue = false;\r\n        return false;\r\n    };\r\n\r\n    const onPressIn = (event: (Ev) & { clientX?: number, clientY?: number }, pos?: { clientX: number, clientY: number }) => {\r\n        // console.log(`onPressIn`, { event, pos });\r\n        const div = divHost.current;\r\n        if (!div) { return onIgnore(event); }\r\n\r\n        const rect = div.getBoundingClientRect();\r\n\r\n\r\n        const p = {\r\n            clientX: pos?.clientX ?? event.clientX ?? 0,\r\n            clientY: pos?.clientY ?? event.clientY ?? 0,\r\n        };\r\n\r\n        segmentClientStart.current = {\r\n            clientX: p.clientX,\r\n            clientY: p.clientY,\r\n            x: Math.floor((p.clientX - rect.x) / scale),\r\n            y: Math.floor((p.clientY - rect.y) / scale),\r\n        };\r\n\r\n        setSegment({\r\n            points: [{\r\n                x: segmentClientStart.current.x,\r\n                y: segmentClientStart.current.y,\r\n            }],\r\n        });\r\n\r\n        return onIgnore(event);\r\n    };\r\n    const onPressOut = (event: Ev) => {\r\n        // console.log(`onPressOut`, { event });\r\n        const s = segment;\r\n        if (!s) { return onIgnore(event); }\r\n\r\n        onChange({\r\n            ...drawing,\r\n            segments: [...drawing.segments, s],\r\n        });\r\n        setSegment(null);\r\n        segmentClientStart.current = null;\r\n\r\n        return onIgnore(event);\r\n    };\r\n    const onMove = (pos: { x: number, y: number }) => {\r\n        setSegment(s => {\r\n            if (!s) { return null; }\r\n            const lastPos = s.points[s.points.length - 1];\r\n            if (Math.abs(lastPos.x - pos.x) + Math.abs(lastPos.y - pos.y) <= 2) {\r\n                return s;\r\n            }\r\n            return { points: [...s.points, pos] };\r\n        });\r\n    };\r\n    const onClientMove = (event: (Ev) & { clientX?: number, clientY?: number }, pos?: { clientX: number, clientY: number }) => {\r\n        if (!segmentClientStart.current) {\r\n            return onIgnore(event);\r\n        }\r\n\r\n        // console.log(`onClientMove`, { event, pos });\r\n        const p = {\r\n            clientX: pos?.clientX ?? event.clientX ?? 0,\r\n            clientY: pos?.clientY ?? event.clientY ?? 0,\r\n        };\r\n        const dPos = {\r\n            x: Math.floor((p.clientX - segmentClientStart.current.clientX) / scale) + segmentClientStart.current.x,\r\n            y: Math.floor((p.clientY - segmentClientStart.current.clientY) / scale) + segmentClientStart.current.y,\r\n        };\r\n\r\n        onMove(dPos);\r\n        return onIgnore(event);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     console.log(`divHost`, { divHost });\r\n    //     const div = divHost.current;\r\n    //     if (!div) { return () => { }; }\r\n\r\n    //     const onTouchStart = (x: Event) => onPressIn(x, (x as TouchEvent).touches[0]);\r\n    //     const onTouchMove = (x: Event) => onClientMove(x, (x as TouchEvent).touches[0]);\r\n\r\n    //     div.addEventListener(`mouseDown`, onPressIn, { passive: false });\r\n    //     div.addEventListener(`onTouchStart`, onTouchStart, { passive: false });\r\n    //     div.addEventListener(`onMouseUp`, onPressOut, { passive: false });\r\n    //     div.addEventListener(`onTouchEnd`, onPressOut, { passive: false });\r\n    //     div.addEventListener(`onMouseLeave`, onPressOut, { passive: false });\r\n    //     div.addEventListener(`onTouchEndCapture`, onPressOut, { passive: false });\r\n    //     div.addEventListener(`onMouseMove`, onClientMove, { passive: false });\r\n    //     div.addEventListener(`onTouchMove`, onTouchMove, { passive: false });\r\n\r\n    //     return () => {\r\n    //         div.removeEventListener(`mouseDown`, onPressIn);\r\n    //         div.removeEventListener(`onTouchStart`, onTouchStart);\r\n    //         div.removeEventListener(`onMouseUp`, onPressOut);\r\n    //         div.removeEventListener(`onTouchEnd`, onPressOut);\r\n    //         div.removeEventListener(`onMouseLeave`, onPressOut);\r\n    //         div.removeEventListener(`onTouchEndCapture`, onPressOut);\r\n    //         div.removeEventListener(`onMouseMove`, onClientMove);\r\n    //         div.removeEventListener(`onTouchMove`, onTouchMove);\r\n    //     };\r\n    // }, [divHost.current]);\r\n\r\n    useEffect(() => {\r\n        // console.log(`Disable scroll on touch`);\r\n        // Disable document scroll\r\n        const onIgnoreNative = (e: Event) => {\r\n            // If not drawing, don't ignore\r\n            if (!segmentClientStart.current) { return true; }\r\n\r\n            // console.log(`Prevent scroll on touch`);\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            e.cancelBubble = true;\r\n            e.returnValue = false;\r\n            return false;\r\n        };\r\n        document.addEventListener(`touchmove`, onIgnoreNative, { passive: false });\r\n        return () => {\r\n            document.removeEventListener(`touchmove`, onIgnoreNative);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ position: `relative`, width: style.width, height: style.height, backgroundColor: style.backgroundColor }}>\r\n                <svg style={{ width: style.width, height: style.height }} viewBox={`0 0 ${drawing.width} ${drawing.height}`} preserveAspectRatio='none' xmlns='http://www.w3.org/2000/svg'>\r\n                    {drawing.segments.map((x, i) => (\r\n                        <path key={i} d={doodleSegmentToSvgPath_line(x)} stroke={style.color} fill='transparent' />\r\n                    ))}\r\n                    {segment && (\r\n                        <path d={doodleSegmentToSvgPath_line(segment)} stroke={style.color} fill='transparent' />\r\n                    )}\r\n                </svg>\r\n                <div ref={divHost} style={{ position: `absolute`, left: 0, right: 0, top: 0, bottom: 0, zIndex: 10 }}\r\n                    onMouseDown={onPressIn}\r\n                    onMouseUp={onPressOut}\r\n                    onMouseMove={onClientMove}\r\n                    onMouseLeave={onPressOut}\r\n                    onTouchStart={x => onPressIn(x, x.touches[0])}\r\n                    onTouchEnd={onPressOut}\r\n                    onTouchCancel={onPressOut}\r\n                    onTouchMove={x => onClientMove(x, x.touches[0])}\r\n                    onTouchEndCapture={onPressOut}\r\n                />\r\n            </div>\r\n            {/* <div>{doodleToSvg(drawing)}</div>\r\n            <div>{encodeDoodleDrawing(drawing).doodleText}</div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport const DoodleDisplayView = (props: {\r\n    style: { width: number, height: number, color: string, backgroundColor: string };\r\n    drawing: DoodleDrawing;\r\n    shouldAnimate?: boolean;\r\n    animatePointsPerSecond?: number;\r\n    enableRedraw?: boolean;\r\n}) => {\r\n\r\n    const [redrawId, setRedrawId] = useState(0);\r\n\r\n    const redraw = () => {\r\n        if (!props.enableRedraw) { return; }\r\n        setRedrawId(s => s + 1);\r\n    };\r\n\r\n    if (props.enableRedraw) {\r\n        return (\r\n            <TouchableOpacity onPress={redraw}>\r\n                <DoodleDisplayView_Inner key={redrawId} {...props} shouldAnimate={redrawId > 0 ? true : (props.shouldAnimate ?? true)} />\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n    return (\r\n        <DoodleDisplayView_Inner {...props} />\r\n    );\r\n};\r\nconst DoodleDisplayView_Inner = ({\r\n    style,\r\n    drawing,\r\n    shouldAnimate = true,\r\n    animatePointsPerSecond = 20,\r\n}: {\r\n    style: { width: number, height: number, color: string, backgroundColor: string };\r\n    drawing: DoodleDrawing;\r\n    shouldAnimate?: boolean;\r\n    animatePointsPerSecond?: number;\r\n}) => {\r\n    const [tick, setTick] = useState(0);\r\n    const totalPoints = drawing.segments.flatMap(x => x.points).length;\r\n\r\n    useEffect(() => {\r\n        if (!shouldAnimate) { return () => { }; }\r\n\r\n        // console.log(`DoodleDisplayView_Inner.useEffect`);\r\n        const id = setInterval(() => {\r\n            // console.log(`DoodleDisplayView_Inner.useEffect.setInterval`);\r\n            setTick(s => {\r\n                if (s > totalPoints) { clearInterval(id); }\r\n                return s + Math.ceil(animatePointsPerSecond / 10);\r\n            });\r\n        }, 10);\r\n\r\n        return () => {\r\n            clearInterval(id);\r\n        };\r\n    }, [drawing]);\r\n\r\n    let remainingPoints = shouldAnimate ? tick : Number.MAX_SAFE_INTEGER;\r\n    return (\r\n        <div style={{ width: style.width, height: style.height, backgroundColor: style.backgroundColor }}>\r\n            <svg style={{ width: style.width, height: style.height }} viewBox={`0 0 ${drawing.width} ${drawing.height}`} preserveAspectRatio='none' xmlns='http://www.w3.org/2000/svg'>\r\n                {drawing.segments.map((x, i) => {\r\n                    const maxPoints = remainingPoints;\r\n                    remainingPoints = Math.max(0, remainingPoints - x.points.length);\r\n                    return (\r\n                        <path key={i} d={doodleSegmentToSvgPath_line({ points: [...x.points.slice(0, maxPoints)] })} stroke={style.color} fill='transparent' />\r\n                    );\r\n                })}\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DoodleBrowser = () => {\r\n    const { loading, error, doWork } = useAutoLoadingError();\r\n    const [doodles, setDoodles] = useState([] as DoodleDataWithScore[]);\r\n    useEffect(() => {\r\n        doWork(async () => {\r\n            const service = await createDoodleDrawingStorageService();\r\n            const result = await service.getAllDrawings();\r\n            setDoodles(result.doodles);\r\n        });\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <ActivityIndicator size='large' color='#FFFF00' />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <DoodleBrowseView doodles={doodles} />\r\n    );\r\n};\r\nexport const DoodleBrowseView = ({ doodles }: { doodles: DoodleDataWithScore[] }) => {\r\n\r\n    const grouped = toKeyValueArray(groupItems(doodles, x => x.prompt));\r\n\r\n    return (\r\n        <>\r\n            {grouped.map(g => (\r\n                <View key={g.key} style={{ padding: 4 }}>\r\n                    <Text style={{ fontSize: 12 }} >{g.key}</Text>\r\n                    <View style={{ padding: 4, flexDirection: `row`, flexWrap: `wrap` }}>\r\n                        {g.value.map(x => (\r\n                            <View key={x.key} style={{ padding: 4, alignItems: `center` }}>\r\n                                <DoodleDisplayView style={{ width: 104, height: 104, color: `#FFFFFF`, backgroundColor: `#000000` }} drawing={x.drawing} shouldAnimate={false} enableRedraw />\r\n                                <Text >{`${x.score}`}</Text>\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n                </View>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, Pressable, Platform } from 'react-native-lite';\r\n\r\nexport type GamepadPressState = { moveDirection: { x: number, y: number }, buttons: { key: string, text: string, isDown: boolean }[] };\r\nexport const GamepadAnalogStateful = (props: {\r\n    style: { backgroundColor: string, borderColor: string };\r\n    onPressStateChange: (value: GamepadPressState) => void;\r\n    buttons: { text: string, key: string }[];\r\n}) => {\r\n\r\n    const state = useRef({\r\n        moveDirection: { x: 0, y: 0 },\r\n        buttons: props.buttons.map((x, i) => ({\r\n            isDown: false,\r\n            key: x.key,\r\n            text: x.text,\r\n            onPressIn: () => {\r\n                state.current.buttons[i].isDown = true;\r\n                props.onPressStateChange(state.current);\r\n            },\r\n            onPressOut: () => {\r\n                state.current.buttons[i].isDown = false;\r\n                props.onPressStateChange(state.current);\r\n            },\r\n        })),\r\n    });\r\n\r\n    const onMovePressIn = (dir: { x: number, y: number }) => {\r\n        const s = state.current;\r\n\r\n        state.current.moveDirection = {\r\n            x: dir.x ? dir.x : s.moveDirection.x,\r\n            y: dir.y ? dir.y : s.moveDirection.y,\r\n        };\r\n\r\n        console.log(`onMovePressIn`, { dir, s, moveDirection: state.current.moveDirection });\r\n\r\n        props.onPressStateChange(state.current);\r\n    };\r\n\r\n    const onMovePressOut = (dir: { x: number, y: number }) => {\r\n        const s = state.current;\r\n        state.current.moveDirection = {\r\n            x: dir.x ? 0 : s.moveDirection.x,\r\n            y: dir.y ? 0 : s.moveDirection.y,\r\n        };\r\n        props.onPressStateChange(state.current);\r\n    };\r\n\r\n    return (\r\n        <GamepadAnalog {...props} onMovePressIn={onMovePressIn} onMovePressOut={onMovePressOut} buttons={state.current.buttons} />\r\n    );\r\n};\r\n\r\nconst inputStyles = {\r\n    container: { flex: 1, alignSelf: `stretch`, flexDirection: `row`, justifyContent: `space-between`, alignItems: `center`, padding: 4 },\r\n    section: { justifyContent: `center`, alignItems: `center`, padding: 4 },\r\n    moveSectionWrapper: { overflow: `hidden` },\r\n    moveSectionRotation: { transform: `rotate(0.125turn)`, margin: 0 },\r\n    row: { flexDirection: `row` },\r\n    cellTouch: { outline: `none` },\r\n    cellView: { pointerEvents: `none`, position: `relative`, margin: 4, width: 56, height: 56, justifyContent: `center`, alignItems: `center`, borderWidth: 0, borderStyle: `solid`, outline: `none` },\r\n    cellText: { userSelect: `none`, pointerEvents: `none` },\r\n    moveCellText: { userSelect: `none`, pointerEvents: `none`, transform: `rotate(-0.125turn)` },\r\n    cellEmptyView: { margin: 2, width: 56, height: 56 },\r\n    cellTextOcclusionView: { position: `absolute`, top: 0, bottom: 0, left: 0, right: 0, backgroundColor: `red`, opacity: 0 },\r\n} as const;\r\n\r\nexport const GamepadAnalog = (props: {\r\n    style: { backgroundColor: string, borderColor: string };\r\n    onMovePressIn: (direction: { x: number, y: number }) => void;\r\n    onMovePressOut: (direction: { x: number, y: number }) => void;\r\n    buttons: { text: string, onPressIn: () => void, onPressOut: () => void }[];\r\n}) => {\r\n    const { onMovePressIn, onMovePressOut } = props;\r\n\r\n    const cellViewStyle = { ...inputStyles.cellView, ...props.style };\r\n\r\n    // Keyboard\r\n    useEffect(() => {\r\n        const onIgnore = (e: KeyboardEvent) => {\r\n            e.preventDefault();\r\n            e.stopPropagation?.();\r\n            return false;\r\n        };\r\n        if (Platform.OS === `web`) {\r\n            const onKeyDown = (e: KeyboardEvent) => {\r\n                if (e.key === `ArrowUp`) { onMovePressIn({ x: 0, y: +1 }); return onIgnore(e); }\r\n                if (e.key === `ArrowDown`) { onMovePressIn({ x: 0, y: -1 }); return onIgnore(e); }\r\n                if (e.key === `ArrowLeft`) { onMovePressIn({ x: -1, y: 0 }); return onIgnore(e); }\r\n                if (e.key === `ArrowRight`) { onMovePressIn({ x: +1, y: 0 }); return onIgnore(e); }\r\n                if (e.key === ` `) { props.buttons[0]?.onPressIn(); return onIgnore(e); }\r\n                // console.log(`onKeyDown`, { key: e.key });\r\n                return true;\r\n            };\r\n            const onKeyUp = (e: KeyboardEvent) => {\r\n                if (e.key === `ArrowUp`) { onMovePressOut({ x: 0, y: +1 }); return onIgnore(e); }\r\n                if (e.key === `ArrowDown`) { onMovePressOut({ x: 0, y: -1 }); return onIgnore(e); }\r\n                if (e.key === `ArrowLeft`) { onMovePressOut({ x: -1, y: 0 }); return onIgnore(e); }\r\n                if (e.key === `ArrowRight`) { onMovePressOut({ x: +1, y: 0 }); return onIgnore(e); }\r\n                if (e.key === ` `) { props.buttons[0]?.onPressOut(); return onIgnore(e); }\r\n                return true;\r\n            };\r\n            window.addEventListener(`keydown`, onKeyDown);\r\n            window.addEventListener(`keyup`, onKeyUp);\r\n            return () => {\r\n                window.removeEventListener(`keydown`, onKeyDown);\r\n                window.removeEventListener(`keyup`, onKeyUp);\r\n            };\r\n        }\r\n\r\n        return () => { };\r\n    });\r\n\r\n    const DirectionButton = ({ text, direction }: { text: string, direction: { x: number, y: number } }) => {\r\n        return (\r\n            <Pressable style={inputStyles.cellTouch} onPressIn={() => onMovePressIn(direction)} onPressOut={() => onMovePressOut(direction)}>\r\n                <View style={cellViewStyle}>\r\n                    <Text style={inputStyles.moveCellText}>{text}</Text>\r\n                    <View style={inputStyles.cellTextOcclusionView} />\r\n                </View>\r\n            </Pressable>\r\n        );\r\n    };\r\n\r\n    const ActionButton = ({ text, onPressIn, onPressOut }: { text: string, onPressIn: () => void, onPressOut: () => void }) => {\r\n        return (\r\n            <Pressable style={inputStyles.cellTouch} onPressIn={onPressIn} onPressOut={onPressOut}>\r\n                <View style={cellViewStyle}>\r\n                    <Text style={inputStyles.cellText}>{text}</Text>\r\n                    <View style={inputStyles.cellTextOcclusionView} />\r\n                </View>\r\n            </Pressable>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View style={inputStyles.container}>\r\n            <View style={inputStyles.moveSectionWrapper}>\r\n                <View style={inputStyles.moveSectionRotation}>\r\n                    <View style={inputStyles.section}>\r\n                        <View style={inputStyles.row} >\r\n                            <DirectionButton direction={{ x: 0, y: +1 }} text='⬆' />\r\n                            <DirectionButton direction={{ x: +1, y: 0 }} text='➡' />\r\n                        </View>\r\n                        <View style={inputStyles.row} >\r\n                            <DirectionButton direction={{ x: -1, y: 0 }} text='⬅' />\r\n                            <DirectionButton direction={{ x: 0, y: -1 }} text='⬇' />\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={inputStyles.section} >\r\n                <View style={inputStyles.row} >\r\n                    {props.buttons.map(x => (\r\n                        <React.Fragment key={`${x.text}`}>\r\n                            <View style={inputStyles.cellEmptyView} />\r\n                            <ActionButton {...x} />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n","export type Vector2 = { x: number, y: number };\r\nexport const getDistanceSq = (a: Vector2, b: Vector2) => {\r\n    const x = a.x - b.x;\r\n    const y = a.y - b.y;\r\n    return x * x + y * y;\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, Pressable, TouchableOpacity, Platform } from 'react-native-lite';\r\nimport { createMultiplesProblemService } from './problems/multiples';\r\nimport { ProblemService, Problem } from './problems/problems-service';\r\nimport { GamepadAnalogStateful, GamepadPressState } from './components/game-pad-analog';\r\nimport { getDistanceSq, Vector2 } from './utils/vectors';\r\nimport { createReviewProblemService } from './problems/problems-reviewer';\r\nimport { createProgressGameProblemService } from './progress-games/progress-game';\r\nimport { createAutoSavedProblemService } from './problems/problem-state-storage';\r\nimport { SubjectNavigator } from './utils/subject-navigator';\r\n\r\nexport const EducationalGame_StarBlastSideways_Multiples = (props: {}) => {\r\n    return <EducationalGame_StarBlastSideways problemService={createAutoSavedProblemService(createReviewProblemService(createMultiplesProblemService({ min: 1, max: 12 }), {}), `ProblemsMultiples`)} />;\r\n};\r\n\r\nexport const EducationalGame_StarBlastSideways = (props: { problemService: ProblemService }) => {\r\n    // Add Pet Feeder\r\n    return <EducationalGame_StarBlastSideways_Inner problemService={createProgressGameProblemService(props.problemService)} />;\r\n};\r\n\r\nconst EducationalGame_StarBlastSideways_Inner = (props: { problemService: ProblemService }) => {\r\n    const [pauseState, setPauseState] = useState({ paused: false } as { paused: boolean });\r\n    const [pressState, setPressState] = useState({ moveDirection: { x: 0, y: 0 }, buttons: [] } as GamepadPressState);\r\n    const onPressStateChange = (value: GamepadPressState) => {\r\n        // console.log(`onPressStateChange`, { ...x, dir: { ...x.moveDirection }, buttons: x.buttons.map(b => ({ ...b })) });\r\n        setPressState(value);\r\n    };\r\n\r\n    const [problemSourceKey, setProblemSourceKey] = useState(0);\r\n\r\n    return (\r\n        <>\r\n            <View>\r\n                <View style={{ alignItems: `center`, alignSelf: `stretch` }} >\r\n                    <View style={{ overflow: `hidden`, padding: 10, paddingTop: 4, paddingBottom: 64 }}>\r\n                        <View style={{ position: `relative` }}>\r\n                            <GameView pressState={pressState} pauseState={pauseState} problemService={props.problemService} problemSourceKey={`${problemSourceKey}`} />\r\n                            {/* <Pressable style={{ position: `absolute`, top: 0, bottom: 0, left: 0, right: 0, opacity: 0 }} onPressIn={() => { }} onPressOut={() => { }} /> */}\r\n                            <View style={{ zIndex: 10, flex: 1, alignSelf: `stretch` }}>\r\n                                <GamepadAnalogStateful style={colors.gamepad} onPressStateChange={onPressStateChange} buttons={[{ key: `A`, text: `🔥` }]} />\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <SubjectNavigator problemService={props.problemService}\r\n                    onOpen={() => setPauseState({ paused: true })}\r\n                    onClose={() => setPauseState({ paused: false })}\r\n                    onSubjectNavigation={() => { setPauseState({ paused: false }); setProblemSourceKey(s => s + 1); }}\r\n                />\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst colors = {\r\n    gamepad: {\r\n        backgroundColor: `#333333`,\r\n        borderColor: `#000033`,\r\n    },\r\n    viewscreen: {\r\n        borderColor: `#000033`,\r\n        backgroundColor: `#000000`,\r\n    },\r\n};\r\n\r\nconst gameStyles = {\r\n    directAnswerButtonContainer: { alignSelf: `flex-end`, justifyContent: `space-around`, height: 250, padding: 4 },\r\n    directAnswerButton: { width: 40, height: 40, backgroundColor: `#FFFFFF`, opacity: 0.1 },\r\n    directAnswerButton_hidden: { width: 40, height: 40 },\r\n    viewscreenView: {\r\n        height: 300,\r\n        width: 300,\r\n        backgroundColor: colors.viewscreen.backgroundColor,\r\n        borderColor: colors.viewscreen.borderColor,\r\n        borderWidth: 1,\r\n        borderStyle: `solid`,\r\n    },\r\n    sprite: {\r\n        viewSize: { width: 32, height: 32 },\r\n        text: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 32,\r\n            textAlign: `center`,\r\n        },\r\n    },\r\n    answer: {\r\n        text: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 24,\r\n            fontSize_small: 14,\r\n            textAlign: `center`,\r\n            whiteSpace: `pre-wrap`,\r\n        },\r\n    },\r\n    question: {\r\n        view: { flex: 1, justifyContent: `center`, padding: 4 },\r\n        text: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 24,\r\n            fontSize_small: 14,\r\n            whiteSpace: `pre-wrap`,\r\n        },\r\n    },\r\n    gameOver: {\r\n        view: { flex: 1, justifyContent: `center`, padding: 4 },\r\n        text: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 24,\r\n            textAlign: `center`,\r\n        },\r\n    },\r\n} as const;\r\n\r\ntype GamePosition = {\r\n    x: number;\r\n    y: number;\r\n    rotation: number;\r\n};\r\n\r\ntype GameState = {\r\n    lastActualTimeMs: number;\r\n    lastGameTime: number;\r\n    gameSpeed: number;\r\n\r\n    lives: number;\r\n    deadTime?: number;\r\n    gameOverTime?: number;\r\n    score: number;\r\n\r\n    weaponsLock?: {\r\n        lockedAtPlayerPosition: GamePosition;\r\n        lockedEnemy: { pos: GamePosition };\r\n    };\r\n    playerTargetPosition?: { x: number, y: number };\r\n};\r\n\r\n\r\ntype AnswerState = { key: string, value: string, isCorrect: boolean, isAnsweredWrong: boolean };\r\nconst GameView = (props: { pressState: GamepadPressState, pauseState: { paused: boolean }, problemService: ProblemService, problemSourceKey: string }) => {\r\n\r\n    const pressState = useRef(props.pressState);\r\n    pressState.current = props.pressState;\r\n\r\n    const pauseState = useRef(props.pauseState);\r\n    pauseState.current = props.pauseState;\r\n\r\n    const gameAcceleration = 0.1;\r\n    const gameDeceleration = 0.2;\r\n    const maxGameSpeed = 5;\r\n    const minGameSpeed = 0.5;\r\n\r\n    const getDefaultGameState = (): GameState => ({\r\n        lastActualTimeMs: Date.now(),\r\n        lastGameTime: 0,\r\n        gameSpeed: 1,\r\n        lives: 3,\r\n        score: 0,\r\n    });\r\n    const gameState = useRef(getDefaultGameState());\r\n    const getGameTime = () => {\r\n        const now = Date.now();\r\n        let actualTimePassed = (now - gameState.current.lastActualTimeMs) / 1000;\r\n        gameState.current.lastActualTimeMs = now;\r\n\r\n        if (actualTimePassed === 0) {\r\n            return { gameTime: gameState.current.lastGameTime };\r\n        }\r\n\r\n        // Left App, frozen, etc?\r\n        if (actualTimePassed > 0.1) {\r\n            actualTimePassed = 0.1;\r\n        }\r\n\r\n        const gameTimePassed = actualTimePassed * gameState.current.gameSpeed;\r\n        const gameTime = gameState.current.lastGameTime + gameTimePassed;\r\n        gameState.current.lastGameTime = gameTime;\r\n\r\n        return {\r\n            gameTime,\r\n        };\r\n    };\r\n\r\n    const playerPositionState = useRef({\r\n        y: gameStyles.viewscreenView.height * 0.5, x: gameStyles.viewscreenView.width * 0.15, rotation: 0,\r\n    } as GamePosition);\r\n    const projectilesState = useRef({ lastShotActualTime: 0, shots: [], debris: [] } as ProjectilesState);\r\n    const enemiesState = useRef({ enemies: [] } as EnemiesState);\r\n\r\n    const problemsState = useRef(null as null | { problemTime: number, question: string, answers: (Problem['answers'][0] & { key: string, pos: GamePosition, isAnsweredWrong: boolean })[] });\r\n    const [renderId, setRenderId] = useState(0);\r\n\r\n    const restartGame = () => {\r\n        // Move enemies back\r\n        enemiesState.current.enemies.forEach(e2 => { e2.pos.x += gameStyles.viewscreenView.width * 0.5; });\r\n\r\n        // Reset Player\r\n        playerPositionState.current.y = gameStyles.viewscreenView.height * 0.5;\r\n        playerPositionState.current.x = gameStyles.viewscreenView.width * 0.15;\r\n\r\n        gameState.current = { ...getDefaultGameState(), lastGameTime: gameState.current.lastGameTime };\r\n    };\r\n\r\n    const gameOver = () => {\r\n        gameState.current = {\r\n            ...gameState.current,\r\n            lives: 0,\r\n            gameOverTime: getGameTime().gameTime,\r\n        };\r\n    };\r\n\r\n    const gotoNextProblem = () => {\r\n        const p = props.problemService.getNextProblem();\r\n\r\n        console.log(`gotoNextProblem`, { p });\r\n\r\n        if (!p.question) {\r\n            // Game over - problems done\r\n            return;\r\n        }\r\n\r\n        const pSize = gameStyles.viewscreenView.width / (p.answers.length + 1);\r\n        const newProblemState = {\r\n            problemTime: getGameTime().gameTime,\r\n            question: p.question,\r\n            answers: p.answers.map((x, i) => ({ ...x, key: `${p.question} ${x.value}`, pos: { y: pSize * (0.5 + i), x: gameStyles.viewscreenView.width - gameStyles.sprite.viewSize.width * 0.5, rotation: 0 }, isAnsweredWrong: false })),\r\n        };\r\n        const newEnemyState = {\r\n            enemies: newProblemState.answers.map((ans, i) => {\r\n                const enemy = {\r\n                    key: `${p.question} ${ans.value}`,\r\n                    answer: ans,\r\n                    pos: { y: pSize * (0.5 + i), x: gameStyles.viewscreenView.width - gameStyles.sprite.viewSize.width * 1.5, rotation: 0 },\r\n                    vel: { x: -5, y: 0 },\r\n                    onHit: () => {\r\n                        setTimeout(() => {\r\n                            console.log(`onHit`, { ans });\r\n                            props.problemService.recordAnswer(p, ans);\r\n                            if (ans.isCorrect) {\r\n                                // TODO: Update score, etc.\r\n                                // Let bullets clear\r\n                                projectilesState.current.shots.forEach(x => { x.ignore = true; });\r\n                                gotoNextProblem();\r\n\r\n                                gameState.current = {\r\n                                    ...gameState.current,\r\n                                    score: gameState.current.score += Math.floor(enemy.pos.x) * 1000,\r\n                                    gameSpeed: Math.min(maxGameSpeed, gameState.current.gameSpeed * 1 + gameAcceleration),\r\n                                };\r\n                            } else {\r\n                                ans.isAnsweredWrong = true;\r\n\r\n                                gameState.current = {\r\n                                    ...gameState.current,\r\n                                    score: gameState.current.score -= Math.floor(enemy.pos.x) * 1500,\r\n                                    gameSpeed: Math.max(minGameSpeed, gameState.current.gameSpeed * 1 - gameDeceleration),\r\n                                };\r\n                            }\r\n                        });\r\n                    },\r\n                    destroyed: false,\r\n                };\r\n\r\n                return enemy;\r\n            }),\r\n        };\r\n\r\n        problemsState.current = newProblemState;\r\n        enemiesState.current = newEnemyState;\r\n        setRenderId(s => s + 1);\r\n\r\n        setTimeout(() => {\r\n            p.onQuestion?.();\r\n        }, 250);\r\n    };\r\n\r\n    useEffect(() => {\r\n        gotoNextProblem();\r\n    }, [props.problemSourceKey]);\r\n\r\n    useEffect(() => {\r\n        // Game Loop\r\n        let gameLastTime = getGameTime().gameTime;\r\n        const gameLoop = () => {\r\n            const { gameTime } = getGameTime();\r\n            const gameDeltaTime = gameTime - gameLastTime;\r\n            gameLastTime = gameTime;\r\n\r\n            if (pauseState.current.paused || gameDeltaTime <= 0) {\r\n                requestAnimationFrame(gameLoop);\r\n                return;\r\n            }\r\n\r\n            // if (!pressState.current.moveDirection.x\r\n            //     && !pressState.current.moveDirection.y) {\r\n            //     // No change\r\n            //     requestAnimationFrame(gameLoop);\r\n            //     return;\r\n            // }\r\n\r\n            // console.log(`gameLoop Update`);\r\n\r\n            // Update\r\n\r\n            const getCommonState = (): CommonGameState => {\r\n                return {\r\n                    gameTime,\r\n                    gameDeltaTime,\r\n                    gameState: gameState.current,\r\n                    pressState: pressState.current,\r\n                    playerPosition: playerPositionState.current,\r\n                    projectilesState: projectilesState.current,\r\n                    enemiesState: enemiesState.current,\r\n                    onLoseLife: () => {\r\n                        if (gameState.current.deadTime || gameState.current.gameOverTime) { return; }\r\n\r\n                        projectilesState.current.debris.push({ key: `player${gameTime}`, kind: `player-character`, pos: { ...playerPositionState.current }, vel: { x: 0, y: 0 } });\r\n\r\n\r\n                        if (gameState.current.lives <= 1) {\r\n                            // Game over\r\n                            gameOver();\r\n                            return;\r\n                        }\r\n\r\n                        // Move enemies back\r\n                        // enemiesState.current.enemies.forEach(e2 => { e2.pos.x += gameStyles.viewscreenView.width * 0.5; });\r\n\r\n                        gameState.current = {\r\n                            ...gameState.current,\r\n                            lives: gameState.current.lives - 1,\r\n                            deadTime: gameTime,\r\n                        };\r\n                    },\r\n                };\r\n            };\r\n\r\n\r\n            // Game\r\n            const gameResult = updateGame(getCommonState());\r\n            gameState.current = gameResult;\r\n\r\n            if (!gameState.current.gameOverTime) {\r\n                // Player\r\n                const playerResult = updatePlayer(getCommonState());\r\n                playerPositionState.current = playerResult.playerPosition;\r\n            } else if (getGameTime().gameTime > 1 + gameState.current.gameOverTime\r\n                && pressState.current.buttons[0]?.isDown) {\r\n                setTimeout(() => {\r\n                    restartGame();\r\n                }, 250);\r\n            }\r\n\r\n            // Projectiles\r\n            const projectilesResult = updateProjectiles(getCommonState());\r\n            projectilesState.current = projectilesResult;\r\n\r\n            // Enemies\r\n            const enemiesResult = updateEnemies(getCommonState());\r\n            enemiesState.current = enemiesResult;\r\n\r\n\r\n            // Game Loop\r\n            requestAnimationFrame(gameLoop);\r\n            setRenderId(s => s + 1);\r\n        };\r\n\r\n        requestAnimationFrame(gameLoop);\r\n    }, []);\r\n\r\n\r\n    // console.log(`GameView render`, { playerStylePosition });\r\n\r\n    const timeSinceProblem = getGameTime().gameTime - (problemsState.current?.problemTime ?? 0);\r\n\r\n    const directAnswer = (enemy: EnemiesState['enemies'][0]) => {\r\n        if (gameState.current.gameOverTime) { restartGame(); return; }\r\n        if (gameState.current.deadTime) { return; }\r\n        if (enemy.destroyed || enemy.explodeTime) { return; }\r\n        gameState.current.weaponsLock = { lockedEnemy: enemy, lockedAtPlayerPosition: playerPositionState.current };\r\n        const { shots } = projectilesState.current;\r\n        shots.push({ key: `${getGameTime()}${shots.length}`, pos: { ...playerPositionState.current }, lockedEnemy: enemy });\r\n        gameState.current.playerTargetPosition = { x: playerPositionState.current.x, y: enemy.pos.y };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={gameStyles.viewscreenView} >\r\n                {/* <TextPositioned text={`${gameState.current.score.toLocaleString()}`} position={{ x: 0, y: -0.8 * gameStyles.sprite.viewSize.height, rotation: 0 }} /> */}\r\n                {[... new Array(gameState.current.lives)].map((x, i) => (\r\n                    <Sprite key={`life${i}`} kind='life' position={{ x: gameStyles.viewscreenView.width - (gameStyles.sprite.viewSize.width * (1 + i)), y: gameStyles.viewscreenView.height - 0.5 * gameStyles.sprite.viewSize.height, rotation: 0 }} />\r\n                ))}\r\n                {projectilesState.current.debris.map(x => (\r\n                    <Sprite key={x.key} kind={x.hasHitGround ? `${x.kind}-splat` as SpriteKind : x.kind} position={x.pos} />\r\n                ))}\r\n                {enemiesState.current?.enemies.filter(e => !e.destroyed).map(e => (\r\n                    <React.Fragment key={e.key}>\r\n                        {!e.answer.isAnsweredWrong && (<TextPositioned position={{ y: e.pos.y, x: e.pos.x + gameStyles.sprite.viewSize.width, rotation: 0 }} text={e.answer.value} />)}\r\n                        {e.answer.isAnsweredWrong && (<Sprite kind='answer-wrong' position={{ y: e.pos.y, x: e.pos.x + gameStyles.sprite.viewSize.width, rotation: 0 }} />)}\r\n                    </React.Fragment>\r\n                ))}\r\n                {enemiesState.current?.enemies.filter(x => !x.destroyed).map(x => (\r\n                    <React.Fragment key={x.key}>\r\n                        <Sprite kind={x.explodeTime ? `enemy-explode` : `enemy`} position={x.pos} />\r\n                        {x === gameState.current.weaponsLock?.lockedEnemy && (\r\n                            <Sprite kind='lock' position={x.pos} />\r\n                        )}\r\n                    </React.Fragment>\r\n                ))}\r\n                {!gameState.current.gameOverTime && !gameState.current.deadTime && (\r\n                    <Sprite kind='player' position={playerPositionState.current} />\r\n                )}\r\n                {projectilesState.current.shots.map(x => (\r\n                    <Sprite key={x.key} kind={x.explodeTime ? `shot-explode` : `shot`} position={x.pos} />\r\n                ))}\r\n                {gameState.current.gameOverTime && (\r\n                    <View>\r\n                        <View style={{ position: `absolute`, top: gameStyles.viewscreenView.height * 0.5, width: gameStyles.viewscreenView.width }}>\r\n                            <Text style={gameStyles.gameOver.text}>Game Over</Text>\r\n                            {getGameTime().gameTime > 1 + gameState.current.gameOverTime && (<Text style={gameStyles.gameOver.text}>Continue?</Text>)}\r\n                        </View>\r\n                    </View>\r\n                )}\r\n\r\n                <View style={gameStyles.directAnswerButtonContainer}>\r\n                    {enemiesState.current?.enemies.map(e => (\r\n                        <TouchableOpacity key={e.key} onPress={() => directAnswer(e)} >\r\n                            <View style={!e.destroyed && !e.explodeTime ? gameStyles.directAnswerButton : gameStyles.directAnswerButton_hidden} />\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                </View>\r\n            </View>\r\n            <View style={{ position: `relative`, height: gameStyles.question.text.fontSize * 3, alignSelf: `stretch` }}>\r\n                <TextPositioned text={problemsState.current?.question ?? ``} position={{ x: gameStyles.viewscreenView.width * 0.25, y: gameStyles.question.text.fontSize * 1 - Math.max(0, gameStyles.viewscreenView.height * 0.5 - 125 * timeSinceProblem), rotation: 0 }} />\r\n            </View>\r\n            {/* <View>\r\n                <Text>{`${renderId}`}</Text>\r\n            </View> */}\r\n            {/* <View style={[gameStyles.question.view, { transform: `translate(0px,${-Math.max(0, gameStyles.viewscreenView.height * 0.5 - 125 * timeSinceProblem)}px)` }]}>\r\n                <Text style={{...gameStyles.question.text, text.length > 10 ? s.fontSize_small * 0.5 : s.fontSize}} >{problemsState.current?.question}</Text>\r\n            </View> */}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\ntype CommonGameState = { gameTime: number, gameDeltaTime: number, gameState: GameState, pressState: GamepadPressState, playerPosition: GamePosition, projectilesState: ProjectilesState, enemiesState: EnemiesState, onLoseLife: () => void };\r\n\r\nconst updateGame = ({ gameTime, gameDeltaTime, pressState, playerPosition, gameState, enemiesState }: CommonGameState): GameState => {\r\n\r\n    // Respawn Player\r\n    if (gameState.deadTime && gameTime > 3 + gameState.deadTime) {\r\n        playerPosition.y = gameStyles.viewscreenView.height * 0.5;\r\n        playerPosition.x = gameStyles.viewscreenView.width * 0.15;\r\n\r\n        enemiesState.enemies.forEach(e2 => { e2.pos.x += gameStyles.viewscreenView.width * 0.5; });\r\n\r\n        return { ...gameState, deadTime: undefined };\r\n    }\r\n\r\n    return gameState;\r\n};\r\n\r\nconst updatePlayer = ({ gameTime, gameDeltaTime, pressState, playerPosition, gameState }: CommonGameState): { playerPosition: GamePosition } => {\r\n    if (gameState.deadTime) { return { playerPosition }; }\r\n\r\n    const dirPress = pressState.moveDirection;\r\n    const targetPos = gameState.playerTargetPosition;\r\n    const dir = dirPress.x || dirPress.y ? { x: dirPress.x, y: -dirPress.y }\r\n        : targetPos ? { x: targetPos.x - playerPosition.x, y: targetPos.y - playerPosition.y }\r\n            : { x: 0, y: 0 };\r\n    dir.x = dir.x === 0 ? 0 : Math.sign(dir.x);\r\n    dir.y = dir.y === 0 ? 0 : Math.sign(dir.y);\r\n\r\n    if (gameState.playerTargetPosition) {\r\n        console.log(`updatePlayer`, { dirPress, dir, targetPos, playerPosition });\r\n    }\r\n\r\n    if (dirPress.x || dirPress.y) {\r\n        gameState.playerTargetPosition = undefined;\r\n    }\r\n    if (gameState.playerTargetPosition && getDistanceSq(playerPosition, gameState.playerTargetPosition) < 5 * 5) {\r\n        gameState.playerTargetPosition = undefined;\r\n    }\r\n\r\n    const targetRotation = dir.y * 0.05;\r\n\r\n    const pos = {\r\n        x: playerPosition.x + dir.x * gameDeltaTime * 250,\r\n        y: playerPosition.y + dir.y * gameDeltaTime * 250,\r\n        rotation: playerPosition.rotation * 0.9 + targetRotation * 0.1,\r\n    };\r\n\r\n    const w = gameStyles.viewscreenView.width;\r\n    const gw = gameStyles.sprite.viewSize.width * 0.5;\r\n    const h = gameStyles.viewscreenView.height;\r\n    const gh = gameStyles.sprite.viewSize.height * 0.5;\r\n    pos.x = pos.x < gw ? gw : pos.x > w - gw ? w - gw : pos.x;\r\n    pos.y = pos.y < gh ? gh : pos.y > h - gh ? h - gh : pos.y;\r\n\r\n    return { playerPosition: pos };\r\n};\r\n\r\ntype ProjectilesState = {\r\n    lastShotActualTime: number;\r\n    shots: { key: string, pos: GamePosition, explodeTime?: number, ignore?: boolean, lockedEnemy?: { pos: GamePosition, explodeTime?: number, destoyed?: boolean } }[];\r\n    debris: { key: string, vel: Vector2, pos: GamePosition, kind: SpriteKind, hasHitGround?: boolean }[];\r\n};\r\nconst updateProjectiles = ({ gameTime, gameDeltaTime, pressState, playerPosition: playerPos, enemiesState, projectilesState, gameState, onLoseLife }: CommonGameState): ProjectilesState => {\r\n    const { shots, debris, lastShotActualTime } = projectilesState;\r\n\r\n    const canShoot = !gameState.deadTime && !gameState.gameOverTime && (Date.now() / 1000) > 0.25 + lastShotActualTime;\r\n\r\n    // console.log(`updateProjectiles`, { canShoot, gameTime, lastShotTime });\r\n\r\n    const didShoot = canShoot && pressState.buttons.find(x => x.key === `A`)?.isDown;\r\n    if (didShoot) {\r\n        const lockedEnemy = gameState.weaponsLock?.lockedEnemy;\r\n        shots.push({ key: `${gameTime}${shots.length}`, pos: { ...playerPos }, lockedEnemy });\r\n    }\r\n\r\n    // Move shots\r\n    shots.forEach(x => {\r\n        if (x.explodeTime) { return; }\r\n\r\n        if (x.lockedEnemy && !x.lockedEnemy.explodeTime && !x.lockedEnemy.destoyed) {\r\n            x.pos.y += (x.lockedEnemy.pos.y - x.pos.y) * 0.25;\r\n            x.pos.x += Math.min(250 * gameDeltaTime, (x.lockedEnemy.pos.x - x.pos.x) * 0.5);\r\n        } else {\r\n            x.pos.x += 250 * gameDeltaTime;\r\n        }\r\n    });\r\n\r\n    // Move debris\r\n    debris.forEach(d => {\r\n        if (d.hasHitGround) { return; }\r\n\r\n        // Gravity\r\n        d.vel.y += 100 * gameDeltaTime;\r\n\r\n        d.pos.y += d.vel.y * gameDeltaTime;\r\n        d.pos.x += d.vel.x * gameDeltaTime;\r\n\r\n        const pad = gameStyles.sprite.viewSize.width * 0.5;\r\n        const w = gameStyles.viewscreenView.width;\r\n        if (d.pos.x < pad) { d.pos.x = pad; d.vel.x = -d.vel.x; }\r\n        if (d.pos.x > w - pad) { d.pos.x = w - pad; d.vel.x = -d.vel.x; }\r\n\r\n        const hPad = gameStyles.sprite.viewSize.width * 0.8;\r\n        const h = gameStyles.viewscreenView.height;\r\n        if (d.pos.y > h - hPad + Math.random() * 10) {\r\n            d.hasHitGround = true;\r\n\r\n            if (d.kind === `kitten`) {\r\n                onLoseLife();\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    // Clean up too much debris\r\n    if (debris.length > 25) {\r\n        debris.shift();\r\n    }\r\n\r\n    const newShots = shots\r\n        // Remove shots offscreen\r\n        .filter(x => x.pos.x < gameStyles.viewscreenView.width)\r\n        // Remove exploded\r\n        .filter(x => !x.explodeTime || gameTime < 1 + x.explodeTime)\r\n        ;\r\n\r\n    return {\r\n        ...projectilesState,\r\n        lastShotActualTime: didShoot ? (Date.now() / 1000) : lastShotActualTime,\r\n        shots: newShots,\r\n    };\r\n};\r\n\r\ntype EnemiesState = {\r\n    enemies: {\r\n        key: string;\r\n        pos: GamePosition;\r\n        vel: Vector2;\r\n        explodeTime?: number;\r\n        answer: AnswerState;\r\n        onHit: () => void;\r\n        destroyed?: boolean;\r\n    }[];\r\n};\r\nconst updateEnemies = ({ gameTime, gameDeltaTime, projectilesState, enemiesState, gameState, playerPosition, onLoseLife }: CommonGameState): EnemiesState => {\r\n    const { enemies } = enemiesState;\r\n    const { shots } = projectilesState;\r\n\r\n    // Detect Collisions\r\n\r\n    // Enemies - Bullets\r\n    const radius = gameStyles.sprite.viewSize.width * 0.75;\r\n    const radiusSq = radius * radius;\r\n\r\n    enemies.forEach(e => shots.forEach(s => {\r\n        // console.log(`Checking!`, { e, s });\r\n\r\n        if (e.explodeTime) { return; }\r\n        if (s.explodeTime || s.ignore) { return; }\r\n\r\n        // Only shoot locked enemy\r\n        if (s.lockedEnemy && s.lockedEnemy !== e) { return; }\r\n\r\n        if (getDistanceSq(e.pos, s.pos) < radiusSq) {\r\n            console.log(`Exploded!`, { e, s });\r\n\r\n            e.explodeTime = gameTime;\r\n            s.explodeTime = gameTime;\r\n\r\n            e.onHit();\r\n\r\n            if (e.answer.isCorrect) {\r\n                projectilesState.debris.push({ key: `${e.key} ${gameTime}`, kind: `alien`, pos: { ...e.pos }, vel: { ...e.vel } });\r\n            } else {\r\n                projectilesState.debris.push({ key: `${e.key} ${gameTime}`, kind: `kitten`, pos: { ...e.pos }, vel: { ...e.vel } });\r\n            }\r\n        }\r\n    }));\r\n\r\n    // Enemies - Enemies (bounce)\r\n    const radiusSq_enemies = radius * radius * 1.5 * 1.5;\r\n    enemies.forEach((e, i) => enemies.forEach((e2, i2) => {\r\n\r\n        if (i >= i2) { return; }\r\n        if (e.explodeTime) { return; }\r\n        if (e2.explodeTime) { return; }\r\n\r\n        if (getDistanceSq(e.pos, e2.pos) < radiusSq_enemies) {\r\n\r\n            // Transfer momentum\r\n            const frictionRatio = 0.95;\r\n            const swap = e.vel.y;\r\n            e.vel.y = e2.vel.y * frictionRatio;\r\n            e2.vel.y = swap * frictionRatio;\r\n            // }\r\n\r\n            // if (getDistanceSq(e.pos, e2.pos) < radiusSq_enemies * 0.8 * 0.8) {\r\n            // Move apart\r\n            const a = e.pos.y < e2.pos.y ? e : e2;\r\n            const b = e.pos.y < e2.pos.y ? e2 : e;\r\n\r\n            a.pos.y -= 10 * gameDeltaTime;\r\n            b.pos.y += 10 * gameDeltaTime;\r\n            a.vel.y -= 10 * gameDeltaTime;\r\n            b.vel.y += 10 * gameDeltaTime;\r\n        }\r\n    }));\r\n\r\n    // Enemies - Player\r\n    const radiusSq_player = radius * radius * 0.8 * 0.8;\r\n    enemies.forEach((e, i) => {\r\n        if (e.explodeTime) { return; }\r\n        if (gameState.deadTime || gameState.gameOverTime) { return; }\r\n\r\n        if (getDistanceSq(e.pos, playerPosition) < radiusSq_player) {\r\n            onLoseLife();\r\n\r\n            // e.explodeTime = gameTime;\r\n            // e.onHit();\r\n\r\n            return;\r\n        }\r\n    });\r\n\r\n    // Enemies move\r\n    enemies.forEach(e => {\r\n        if (e.explodeTime) { return; }\r\n\r\n        e.vel.y += (-1 + 2 * Math.random()) * 250 * gameDeltaTime;\r\n        // e.vel.x += -3 * gameDeltaTime;\r\n\r\n        if (!gameState.deadTime && !gameState.gameOverTime) {\r\n            e.vel.x = -25;\r\n        } else {\r\n            e.vel.x = 0;\r\n        }\r\n\r\n        // Move away from ground\r\n        if (e.pos.y > gameStyles.viewscreenView.height * 0.7) {\r\n            // e.vel.y += -100 * gameDeltaTime;\r\n            e.vel.y = -5;\r\n        }\r\n\r\n        // Keep on screen\r\n        if (e.pos.x > gameStyles.viewscreenView.width - gameStyles.sprite.viewSize.width * 2) {\r\n            e.pos.x = gameStyles.viewscreenView.width - gameStyles.sprite.viewSize.width * 2;\r\n        }\r\n\r\n        e.pos.x += e.vel.x * gameDeltaTime;\r\n        e.pos.y += e.vel.y * gameDeltaTime;\r\n\r\n        const pad = gameStyles.sprite.viewSize.height * 0.5;\r\n        const h = gameStyles.viewscreenView.height;\r\n        if (e.pos.y < pad) { e.pos.y = pad; e.vel.y = 5; }\r\n        if (e.pos.y > h - pad) { e.pos.y = h - pad; e.vel.y = -e.vel.y; }\r\n\r\n        const wPad = gameStyles.sprite.viewSize.width * 0.5;\r\n        if (e.pos.x < wPad) {\r\n            e.pos.x = wPad;\r\n        }\r\n\r\n        // // Attack player\r\n        // if (e.pos.x < playerPosition.x) {\r\n        //     e.pos.y = playerPosition.y;\r\n        //     // e.vel.y = (playerPosition.y - e.pos.y) * 5;\r\n        // }\r\n    });\r\n\r\n    // Closest Enemy\r\n    const closestEnemyToPlayer = enemiesState.enemies.filter(x => !x.explodeTime && !x.destroyed)\r\n        .sort((a, b) => Math.abs(a.pos.y - playerPosition.y) < Math.abs(b.pos.y - playerPosition.y) ? -1 : 1)[0];\r\n\r\n    const updateWeaponsLock = (enemy: typeof enemiesState.enemies[0]) => {\r\n        // Only update on player movement\r\n        if (gameState.weaponsLock?.lockedAtPlayerPosition.y === playerPosition.y) {\r\n            return;\r\n        }\r\n\r\n        gameState.weaponsLock = {\r\n            lockedAtPlayerPosition: playerPosition,\r\n            lockedEnemy: enemy,\r\n        };\r\n    };\r\n\r\n    // Attack Player\r\n    if (closestEnemyToPlayer?.pos.x < playerPosition.x + gameStyles.sprite.viewSize.width * 0.5) {\r\n        closestEnemyToPlayer.pos.y = playerPosition.y;\r\n    } else {\r\n        // Lock on Enemy\r\n        updateWeaponsLock(closestEnemyToPlayer);\r\n    }\r\n\r\n    // Cleanup\r\n    const newEnemies = enemies;\r\n    newEnemies.filter(x => x.explodeTime && gameTime > 1 + x.explodeTime).forEach(x => {\r\n        x.destroyed = true;\r\n\r\n    });\r\n    // // Remove exploded\r\n    // .filter(x => !x.explodeTime || gameTime < 1 + x.explodeTime)\r\n    // ;\r\n\r\n    return {\r\n        enemies: newEnemies,\r\n    };\r\n};\r\n\r\ntype SpriteKind = 'text' | 'player' | 'player-character' | 'player-character-splat' | 'shot' | 'shot-explode' | 'lock' | 'enemy' | 'enemy-explode' | 'answer-wrong' | 'alien' | 'kitten' | 'alien-splat' | 'kitten-splat' | 'super-kitten' | 'life';\r\nconst getSpriteEmoji = (kind: SpriteKind) => {\r\n    // ❤💙💚😀🤣😃😁😂😄😉😆😅😊😋😎🥰😙☺🤩🙄😑😐😣🤐😫🤢😬😭🤯🤒😡🤓🤠\r\n    // 👽💀👻☠🤖👾😺🙀🙈🙉🙊🐵🐱‍🐉🐶🦁🐯🐺🐱🦒🦊🦝🐗🐷🐮🐭🐹🐰🐼🐨🐻🐸🦓🐴\r\n    // 🚀🛸⛵🛰🚁💺🚤🛥⛴⚓🪐🌌🌍🌏🌎\r\n    // ✈🛩🚂🚘🚔🚍🚖🔥💧❄⚡🌀🌈☄🌠⭐❌💥♨🎇🎆✨🎡🍖🥓🍗🥩💚👁‍🗨🥫🍥🍤🧆🥝🥑🧪🧫💉🩸⚰💜🦵\r\n    // 🐱‍🚀🐱‍🐉🐱‍🏍😾🐱‍👤😾😿😽😹😸😻🐲🐉💢⭕\r\n    switch (kind) {\r\n        case `player`: return { text: `🚀`, rotation: +0.125, offsetX: 0, offsetY: -0.25 };\r\n        case `player-character`: return { text: `😭` };\r\n        case `player-character-splat`: return { text: `😫`, rotation: 0.15 };\r\n        case `shot`: return { text: `🔥`, rotation: -0.25 };\r\n        case `shot-explode`: return { text: `✨`, rotation: 0, scale: 0.5 };\r\n        case `lock`: return { text: `💢`, offsetX: -0.25, offsetY: -0.125, scale: 1.5 };\r\n        case `enemy`: return { text: `🛸`, offsetX: -0.125, offsetY: -0.125 };\r\n        case `enemy-explode`: return { text: `💥`, offsetX: -0.125, offsetY: -0.125 };\r\n        case `answer-wrong`: return { text: `❌`, offsetX: -0.125, offsetY: -0.125 };\r\n        case `alien`: return { text: `👽`, offsetX: 0, offsetY: 0 };\r\n        // case `kitten`: return { text: `🐱‍🚀`, offsetX: 0, offsetY: 0 };\r\n        case `kitten`: return { text: `🙀`, offsetX: 0, offsetY: 0 };\r\n        case `alien-splat`: return { text: `💀`, offsetX: 0, offsetY: 0 };\r\n        case `kitten-splat`: return { text: `🥩`, offsetX: 0, offsetY: 0 };\r\n        case `super-kitten`: return { text: `🐱‍🏍`, offsetX: 0, offsetY: 0 };\r\n        // case `kitten-splat`: return { text: `👻`, offsetX: 0, offsetY: 0 };\r\n        case `life`: return { text: `🚀`, scale: 0.5 };\r\n        case `text`: return { text: ``, offsetX: 0, offsetY: -0.125 };\r\n        default: return { text: `😀` };\r\n    }\r\n};\r\n\r\nconst Sprite = ({ kind, position, text }: { kind: SpriteKind, position: { x: number, y: number, rotation: number }, text?: string }) => {\r\n    const s = getSpriteEmoji(kind);\r\n    const size = gameStyles.sprite.viewSize;\r\n    const { fontSize } = gameStyles.sprite.text;\r\n\r\n    const stylePosition = {\r\n        position: `absolute`,\r\n        ...size,\r\n        transform: `translate(${position.x}px, ${position.y}px) rotate(${position.rotation ?? 0}turn)`,\r\n        // backgroundColor: `red`,\r\n        pointerEvents: `none`,\r\n    } as const;\r\n    const styleRotation = {\r\n        ...size,\r\n        transform: `translate( ${size.width * -0.5 + Math.floor((s.offsetX ?? 0) * fontSize)}px, ${size.height * -0.5 + Math.floor((s.offsetY ?? 0) * fontSize)}px) rotate(${s.rotation ?? 0}turn) scale(${s.scale ?? 1})`,\r\n    };\r\n    return (\r\n        <View style={stylePosition}>\r\n            <View style={styleRotation}>\r\n                <Text style={gameStyles.sprite.text}>{text ?? s.text}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst TextPositioned = ({ text, position }: { text: string, position: { x: number, y: number, rotation: number } }) => {\r\n    const s = gameStyles.answer.text;\r\n    const fontSize = text.length > 10 ? s.fontSize_small : s.fontSize;\r\n\r\n    const offsetY = -fontSize * 0.5 - 4;\r\n\r\n    const stylePosition = {\r\n        position: `absolute`,\r\n        transform: `translate(${position.x}px, ${position.y + offsetY}px) rotate(${position.rotation ?? 0}turn)`,\r\n        pointerEvents: `none`,\r\n        maxWidth: gameStyles.viewscreenView.width * 0.5,\r\n        // backgroundColor: `red`,\r\n    } as const;\r\n\r\n    return (\r\n        <View style={stylePosition}>\r\n            <Text style={{ ...gameStyles.answer.text, fontSize }}>{text}</Text>\r\n        </View>\r\n    );\r\n};\r\n","import { shuffle, distinct } from 'utils/arrays';\r\nimport { ProblemService, ProblemResult, ProblemAnswer } from './problems-service';\r\n\r\nexport const createMultiplesProblemService = ({\r\n    min = 1,\r\n    max = 12,\r\n    maxAnswers = 4,\r\n}: {\r\n    min?: number;\r\n    max?: number;\r\n    maxAnswers?: number;\r\n}): ProblemService => {\r\n\r\n    let state = {\r\n        n: min - 1,\r\n        m: min,\r\n        completedSectionKeys: [] as string[],\r\n    };\r\n    const getSectionKey = (m: number) => {\r\n        return `${m}`;\r\n    };\r\n    const getSectionName = (m: number) => {\r\n        return `Multiples of ${m}`;\r\n    };\r\n\r\n    const problemService: ProblemService = {\r\n        load: async (storage) => {\r\n            const loaded = await storage.load<typeof state>();\r\n            if (loaded) {\r\n                state = loaded;\r\n            }\r\n        },\r\n        save: async (storage) => {\r\n            await storage.save(state);\r\n        },\r\n        getSections: () => [...new Array(max - min + 1)].map((x, i) => ({\r\n            key: getSectionKey(i + min),\r\n            name: getSectionName(i + min),\r\n            isComplete: state.completedSectionKeys.includes(getSectionKey(i + min)),\r\n        })),\r\n        gotoSection: ({ key }) => {\r\n            const bVal = Number.parseInt(key, 10);\r\n            state.m = bVal;\r\n            state.n = min - 1;\r\n        },\r\n        getNextProblem: (): ProblemResult => {\r\n            state.n++;\r\n            if (state.n > max) {\r\n                state.n = min;\r\n                state.m++;\r\n                if (state.m > max) {\r\n                    // Loop\r\n                    state.n = min;\r\n                    state.m = min;\r\n                    // return { done: true, key: `done` };\r\n                }\r\n            }\r\n\r\n            const { n, m } = state;\r\n            const correctValue = n * m;\r\n            const wrongAnswerCount = maxAnswers - 1;\r\n            const wrongValues =\r\n                distinct(\r\n                    [...new Array(100)].map(() =>\r\n                        Math.round(n + 1 - 2 * Math.random())\r\n                        * Math.round(m + 1 - 2 * Math.random())\r\n                        + Math.round(2 - 4 * Math.random()))\r\n                        .filter(x => x !== correctValue)\r\n                        .filter(x => x > 0),\r\n                ).slice(0, wrongAnswerCount);\r\n\r\n            const answers: ProblemAnswer[] = shuffle([...wrongValues.map(x => ({ value: `${x}`, isCorrect: false })), { value: `${correctValue}`, isCorrect: true }]).map(x => ({ ...x, key: x.value }));\r\n\r\n            return {\r\n                key: `${m} x ${n}`,\r\n                question: `${m} x ${n}`,\r\n                answers,\r\n                sectionKey: getSectionKey(m),\r\n                isLastOfSection: n === max,\r\n                isLastOfSubject: n === max && m === max,\r\n            };\r\n        },\r\n        recordAnswer: (problem, answer) => {\r\n            if (answer.isCorrect && problem.isLastOfSection) {\r\n                state.completedSectionKeys.push(problem.sectionKey);\r\n            }\r\n        },\r\n    };\r\n\r\n    return problemService;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput } from 'react-native-lite';\r\n\r\n\r\nexport const createLeaderboard = <TScoreState extends {}>(args: {\r\n    storageKey: string;\r\n    sortKey: (item: TScoreState) => string | number;\r\n    sortDescending?: boolean;\r\n    scoreColumns: { name: string, getValue: (item: TScoreState) => string }[];\r\n}) => {\r\n\r\n    type LeaderboardScore = { name: string, score: TScoreState };\r\n    const leaderboard = {\r\n        saveScore: (name: string, score: TScoreState) => {\r\n            const data = leaderboard.loadScore();\r\n\r\n            data.push({ name, score });\r\n            data.sort((a, b) => args.sortKey(a.score) < args.sortKey(b.score) ? -1 : 1);\r\n\r\n            localStorage.setItem(args.storageKey, JSON.stringify(data));\r\n        },\r\n        loadScore: () => {\r\n            const json = localStorage.getItem(args.storageKey);\r\n            if (!json) { return []; }\r\n\r\n            const data = JSON.parse(json) as LeaderboardScore[];\r\n            data.sort((a, b) => (args.sortKey(a.score) > args.sortKey(b.score) ? -1 : 1) * (args.sortDescending ? -1 : 1));\r\n            return data;\r\n        },\r\n    };\r\n\r\n    const leaderboardInputStyles = {\r\n        container: {\r\n            flex: 1,\r\n            alignItems: `center`,\r\n            margin: 16,\r\n        },\r\n        textInput: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 16,\r\n            color: `#0000FF`,\r\n        },\r\n        buttonView: {\r\n            margin: 4,\r\n            padding: 4,\r\n            borderColor: `#FFFF00`,\r\n            borderStyle: `solid`,\r\n            borderWidth: 1,\r\n            borderRadius: 4,\r\n        },\r\n        buttonText: {\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 16,\r\n            color: `#FFFF00`,\r\n        },\r\n    } as const;\r\n\r\n    const LeaderboardNameInput = (props: { onSubmit: (value: string) => void }) => {\r\n        const [name, setName] = useState(``);\r\n        return (\r\n            <View style={leaderboardInputStyles.container}>\r\n                <TextInput style={leaderboardInputStyles.textInput} value={name} onChange={setName} placeholder='Name' keyboardType='default' autoCompleteType='off' />\r\n                <TouchableOpacity onPress={() => !!name && props.onSubmit(name)} style={!name ? { opacity: 0.5 } : {}}>\r\n                    <View style={leaderboardInputStyles.buttonView}>\r\n                        <Text style={leaderboardInputStyles.buttonText}>Save Score</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View >\r\n        );\r\n    };\r\n\r\n    const leaderboardStyles = {\r\n        container: {\r\n            marginTop: 16,\r\n            borderColor: `#FFFFFF`,\r\n            borderStyle: `solid`,\r\n            borderWidth: 1,\r\n            borderRadius: 0,\r\n        },\r\n        scoreView: {\r\n            flexDirection: `row`,\r\n            justifyContent: `space-around`,\r\n            padding: 4,\r\n            borderColor: `#FFFFFF`,\r\n            borderStyle: `solid`,\r\n            borderWidth: 1,\r\n            borderRadius: 0,\r\n        },\r\n        nameText: {\r\n            flex: 2,\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 12,\r\n            color: `#FFFFFF`,\r\n            overflow: `hidden`,\r\n        },\r\n        scoreText: {\r\n            flex: 1,\r\n            textAlign: `right`,\r\n            fontFamily: `\"Lucida Console\", Monaco, monospace`,\r\n            fontSize: 12,\r\n            color: `#FFFF00`,\r\n        },\r\n    } as const;\r\n\r\n    const LeaderboardViewInner = (props: { scores: LeaderboardScore[] }) => {\r\n\r\n        return (\r\n            <View style={leaderboardStyles.container}>\r\n                <View style={leaderboardStyles.scoreView}>\r\n                    <Text style={leaderboardStyles.nameText}>Leaderboard</Text>\r\n                    {args.scoreColumns.map(x => (\r\n                        <Text key={x.name} style={leaderboardStyles.scoreText} />\r\n                    ))}\r\n                </View>\r\n                <View style={leaderboardStyles.scoreView}>\r\n                    <Text style={leaderboardStyles.nameText}>Name</Text>\r\n                    {args.scoreColumns.map(x => (\r\n                        <Text key={x.name} style={leaderboardStyles.scoreText} >{x.name}</Text>\r\n                    ))}\r\n                </View>\r\n                {props.scores.map(x => (\r\n                    <View style={leaderboardStyles.scoreView}>\r\n                        <Text style={leaderboardStyles.nameText}>{x.name}</Text>\r\n                        {args.scoreColumns.map(c => (\r\n                            <Text key={x.name} style={leaderboardStyles.scoreText} >{c.getValue(x.score)}</Text>\r\n                        ))}\r\n                    </View>\r\n                ))}\r\n            </View>\r\n        );\r\n    };\r\n\r\n    const useLeaderboard = ({\r\n        getScore,\r\n    }: {\r\n        getScore: () => TScoreState;\r\n    }) => {\r\n\r\n        const [leaderboardScores, setLeaderboardScores] = useState({ scores: leaderboard.loadScore() } as { scores: LeaderboardScore[] });\r\n\r\n        const LeaderboardArea = (props: { gameOver: boolean, onScoreSaved: () => void }) => {\r\n\r\n            const onSaveScore = (name: string) => {\r\n                leaderboard.saveScore(name, getScore());\r\n                setLeaderboardScores({ scores: leaderboard.loadScore() });\r\n                props.onScoreSaved();\r\n            };\r\n\r\n            return (\r\n                <>\r\n                    {!!props.gameOver && (<LeaderboardNameInput onSubmit={onSaveScore} />)}\r\n                    <LeaderboardViewInner scores={leaderboardScores.scores} />\r\n                </>\r\n            );\r\n        };\r\n\r\n        return {\r\n            LeaderboardArea,\r\n        };\r\n    };\r\n\r\n\r\n    return {\r\n        useLeaderboard,\r\n    };\r\n};\r\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import { ApiError } from './error';\r\n\r\nexport function fetchWithTimeout(url: string, options: RequestInit, timeout = 10000): Promise<Response> {\r\n    return Promise.race([\r\n        fetch(url, options),\r\n        new Promise((resolve, reject) =>\r\n            setTimeout(() => reject(new ApiError(`Fetch Timeout`)), timeout),\r\n        ) as Promise<Response>,\r\n    ]);\r\n}\r\n\r\nexport async function webRequest(url: string, data: unknown, options?: { method: 'POST' | 'PUT' }) {\r\n\r\n    const body = JSON.stringify(data);\r\n    const reqData: RequestInit = {\r\n        method: options?.method ?? `POST`,\r\n        headers: {\r\n            'Accept': `application/json`,\r\n            'Content-Type': `application/json`,\r\n            'Content-Length': `${body.length}`,\r\n        },\r\n        body,\r\n    };\r\n    const result = await fetchWithTimeout(url, reqData).catch((error) => { throw new ApiError(`Request Failure`, { url, data, error }); });\r\n    if (!result.ok) {\r\n        throw new ApiError(`Api Error`, { data: (await result.json().catch(error => {/* Ignore Parse Error */ })) ?? {}, responseStatus: result.status, request: { url, data } });\r\n    }\r\n    const resultObj = await result.json().catch((error) => { throw new ApiError(`Request Parse Failure`, { url, data, error }); });\r\n    return resultObj;\r\n}\r\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Platform } from 'react-native-lite';\r\nimport { ProblemService } from '../problems/problems-service';\r\n\r\n\r\nconst subjectStyles = {\r\n    container: {\r\n        margin: 16,\r\n    },\r\n    header: {\r\n        view: {\r\n            margin: 4,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n        },\r\n    },\r\n    section: {\r\n        view: {\r\n            margin: 4,\r\n            flexDirection: `row`,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n        },\r\n    },\r\n} as const;\r\n\r\nexport type SubjectProblemService = {\r\n    getSections: () => { key: string, name: string, isComplete: boolean }[];\r\n    gotoSection: (section: { key: string }) => void;\r\n};\r\nexport const SubjectNavigator = (props: { problemService: SubjectProblemService, onOpen: () => void, onClose: () => void, onSubjectNavigation: () => void }) => {\r\n\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const toggle = () => {\r\n        if (!isExpanded) {\r\n            props.onOpen();\r\n        }\r\n        if (isExpanded) {\r\n            props.onClose();\r\n        }\r\n        setIsExpanded(s => !s);\r\n    };\r\n\r\n    return (\r\n        <View style={subjectStyles.container}>\r\n            <TouchableOpacity onPress={toggle}>\r\n                <View style={subjectStyles.header.view}>\r\n                    <Text style={subjectStyles.header.text}>Sections</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            {isExpanded && (\r\n                <View>\r\n                    {props.problemService.getSections().map(s => (\r\n                        <TouchableOpacity key={s.key} onPress={() => {\r\n                            console.log(`SubjectNavigator onSection`, { s });\r\n                            props.problemService.gotoSection(s);\r\n                            props.onSubjectNavigation();\r\n                            props.onClose();\r\n                            setIsExpanded(false);\r\n                            if (Platform.OS === `web`) {\r\n                                window.scrollTo(0, 0);\r\n                            }\r\n                        }}>\r\n                            <View style={subjectStyles.section.view}>\r\n                                <Text style={subjectStyles.section.text}>{s.isComplete ? `✅` : `⬜`}</Text>\r\n                                <Text style={subjectStyles.section.text}>{s.name}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                </View>\r\n            )}\r\n\r\n        </View>\r\n    );\r\n};\r\n","import { ProblemStateStorage, ProblemService } from './problems-service';\r\n\r\nexport const createProblemStateStorage = (storageKey: string): ProblemStateStorage => {\r\n    const storage: ProblemStateStorage = {\r\n        load: async <T>() => {\r\n            try {\r\n                return JSON.parse(localStorage.getItem(storageKey) ?? `error - NOT FOUND`) as T;\r\n            }\r\n            catch{\r\n                return null;\r\n            }\r\n        },\r\n        save: async (value) => {\r\n            localStorage.setItem(storageKey, JSON.stringify(value));\r\n        },\r\n    };\r\n    return storage;\r\n};\r\n\r\nexport const createAutoSavedProblemService = (problemSource: ProblemService, storageKey: string): ProblemService => {\r\n    const storage = createProblemStateStorage(storageKey);\r\n\r\n    // Load \r\n    (async () => await problemSource.load(storage))();\r\n\r\n    return {\r\n        ...problemSource,\r\n        recordAnswer: (problem, answer) => {\r\n            problemSource.recordAnswer(problem, answer);\r\n\r\n            if (problem.isLastOfSection) {\r\n                (async () => await problemSource.save(storage))();\r\n            }\r\n        },\r\n    };\r\n};\r\n","export { delay } from 'utils/delay';\r\nexport { randomIndex, randomItem } from 'utils/random';\r\nexport { getValuesAsItems } from 'utils/objects';\r\nexport { moveItem } from 'utils/arrays';\r\nexport const randomBinary = (length: number) => String.fromCharCode(...[...new Array(length)].map(x => Math.random() * (126 - 32) + 32));\r\n"],"sourceRoot":""}