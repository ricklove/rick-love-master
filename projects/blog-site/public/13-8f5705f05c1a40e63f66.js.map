{"version":3,"sources":["webpack:///D:/Projects/rick-love-master/code/games/dork/art.ts","webpack:///D:/Projects/rick-love-master/code/games/dork/components/count-down-timer.tsx","webpack:///D:/Projects/rick-love-master/code/games/dork/components/ascii-art-viewer.tsx","webpack:///D:/Projects/rick-love-master/code/games/dork/components/achievement.tsx","webpack:///D:/Projects/rick-love-master/code/games/dork/scenes/01-mailbox.tsx","webpack:///D:/Projects/rick-love-master/code/games/dork/main.tsx","webpack:///D:/Projects/rick-love-master/code/games/console-simulator/game-dork.ts","webpack:///D:/Projects/rick-love-master/code/games/dork/core.tsx","webpack:///D:/Projects/rick-love-master/code/games/console-simulator/game-zork.ts","webpack:///D:/Projects/rick-love-master/code/games/console-simulator/commands.ts"],"names":["art","LINEWIDTH","rain","strength","isIncreasing","CountDownTimer","props","useState","time","setTime","useEffect","timeStart","Date","now","id","setInterval","timeRemaining","s","clearInterval","onTimeElapsed","timeStr","toISOString","slice","style","display","backgroundColor","borderRadius","padding","color","messageAfterTime","triggerTimedMessage","onMessage","immediateResult","getResultAfterTime","a","colorActual","Promise","resolve","output","Component","addDivider","artMan","autoAnimate","fps","replacements","split","map","x","find","replace","ratio","artYouDead","trim","length","animate","draw","unshift","Array","Math","random","splice","chars","i","join","AsciiArtViewer","artwork","setArt","animateRaw","t","v","RegExp","timeStartMs","fontFamily","whiteSpace","AchievementViewer","className","flex","fontSize","name","createScene_01mailbox","gameState","triggerGameOver","inventory","removeFromInventory","createGameObject","createGameObjectTitle","isMatch","utils","components","randomItem","randomIndex","getValuesAsItems","moveItem","mailObjects","litterBox","towelHooks","squishyToy","strandLights","squirrel","execute","command","target","includes","achievements","addAchievement","tickingPackage","limeCoconut","yardObjects","snake","mailbox","isOpen","package","dog","yard","description","contents","pickupTruck","titleWithA","hasCrashed","title","isDelivering","deliveryCount","placeRandomItemInMailbox","indexOf","p","deliverMail","input","item","push","destroyedObjects","closeMailbox","introduction","wasOpen","f","getLookItems","getFullYear","createDorkGame","onMessageInit","_achievements","getAchievements","setTimeout","gameOver","lastMessage","delay","isGameOver","allGameObjectTitles","allWords","commonWords","filter","ignoreWords","getTitleWithA","l","toLowerCase","g","matches","lower","achievementGameObject","loadAchievements","value","triggerQuit","allGameObjects","options","createGameState","badCommandInsults","scenes","scene","loadScene","inputRaw","commandRaw","onMessageRaw","Error","sceneItems","result","start","onQuit","onQuitNot","setValue","getValue","loadGameStorage","localStorage","getItem","JSON","parse","saveGameStorage","setItem","stringify","dorkFile","session","path","content","randomBinary","dorkGame","onMessageGame","message","conQuery","prompt","respond","query","startsWith","gameInput","undefined","zork","mainZork","createConsoleCommands","initialMachineName","sessions","user","machineName","admin","state","parent","directory","activeAction","files","shouldResolveAction","enterSession","standardPrompt","processAction","action","onCommand","commandLower","iSpace","raw","quit","dirFiles","file"],"mappings":"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","file":"13-8f5705f05c1a40e63f66.js","sourcesContent":["export type Artwork = {\r\n    art: string;\r\n    animate?: { fps: number, draw: (timeMs: number) => string };\r\n    autoAnimate?: { fps: number, replacements: { find: string, replace: string, ratio: number }[] };\r\n};\r\n\r\nexport const artMan = {\r\n    art: `\r\n|--------------------------------------|\r\n|                       @@@@@@@        |\r\n|                     @@@@@@@@@@@@     |\r\n|------,-|          @@@@@@@@@@@@@@@    |\r\n|    ,','|           |C>   @@ )@@@@@   |\r\n|--,','  |          /    @@ ,'@@@@@@   |\r\n|  ||##  |         (,    @@   @@@@@    |\r\n|  ||##  |          O'  @@@@@@@'''|    |\r\n|  ||##  |______     @@@@@@@     _|    |\r\n|  ||##  |     ,|     @@@@@|____/ |    |\r\n|  ||# ,'    ,' |         _/_____/ |   |\r\n|  ||,'    ,'   |        /          |  |\r\n|__|/    ,'  *  |       |         |  | |\r\n|______,'  *   ,',_    /           | | |\r\n|      | *   ,',' FFF--|      |    | | |\r\n|      |   ,','    ____|_____/    /  | |\r\n|      | ,','  __/ |             /   | |\r\n|______|','   FFF_/-------------/    ; |\r\n|       |===========,'  '=||=====||=/  |\r\n|--------------------------------------|\r\n`, autoAnimate: {\r\n        fps: 5,\r\n        replacements: [\r\n            // Screen\r\n            ...`,.;:'\"[]{}()<>!@~&|`.split(``).map(x => ({ find: `#`, replace: x, ratio: 0.01 })),\r\n            { find: `#`, replace: ` `, ratio: 1 },\r\n            // Activity Lights\r\n            { find: `\\\\*`, replace: `.`, ratio: 0.5 },\r\n            { find: `\\\\*`, replace: ` `, ratio: 1 },\r\n            // Fingers\r\n            { find: `F`, replace: `|`, ratio: 0.3 },\r\n            { find: `F`, replace: `/`, ratio: 1 },\r\n\r\n            // Eyes\r\n            { find: `C`, replace: `-`, ratio: 0.2 },\r\n            // Mouth\r\n            { find: `O`, replace: `>`, ratio: 0.2 },\r\n            { find: `O`, replace: `}`, ratio: 1 },\r\n\r\n            // Hair\r\n            // { find: `@`, replace: `/`, ratio: 0.01 },\r\n            // { find: `@`, replace: `|`, ratio: 1 },\r\n        ],\r\n    },\r\n};\r\n\r\n\r\nexport const artMap = `\r\n|--------------------------------------|\r\n|      ,_  . ._ _                      |\r\n|    , -|,'|~~       ;-'  _-'   ;_  ~  |\r\n|/-|'~'-'|~~|',  ,  /  /~|_|_~/   -~~-_|\r\n|~'~     '-,|'| ' ,|/'~         /  _ / |\r\n|~  |      ''|~|  _|    ,_ ,       /   |\r\n|   '|      /~    |_~||,,~ |      ,    |\r\n|     |  _-|        _ ~|| |_     /     |\r\n|.     | , ~_    '/      |_' | /|~     |\r\n|      ~_'       |       -,  |'/       |\r\n|       '|_,'|    | ,    /'     ~ ,.   |\r\n|         /  |_    ~|   /       , ~| ' |\r\n|        |    ,      | |'|/     |   |  |\r\n|        ,   ,/      | /         --/   |\r\n|         | ,'        '                |\r\n|         /,'                          |\r\n|         '| ~                         |\r\n|          ~'                          |\r\n|                                      |\r\n|--------------------------------------|\r\n`;\r\n\r\nexport const artYouDead = (() => {\r\n    const art = `\r\n|--------------------------------------|\r\n|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^|\r\n|^^^^^^^.----------------.^^^^^^^^^^^^^|\r\n|^^^^^^^|  You have died |^^^^^^^^^^^^^|\r\n|^^^^^^^'----------------'^^^^^^^^^^^^^|\r\n|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^|\r\n|^^^^^^^^^^^^__----__^^^^^^^^^^^^^^^^^^|\r\n|^^^^^^^^_--''******''--_^^^^^^^^^^^^^^|\r\n|^^^^^^^|****************|^^^^^^^^^^^^^|\r\n|^^^^^^^|****************|^^^^^_---_^^^|\r\n|^^^^^^^|****  DORK  ****|^^^^'^^|{)'^^|\r\n|^^^^^^^|****************|^^^^^^^|/|^^^|\r\n|^^^^^^^|****************|^^^^^^^^^|^^^|\r\n|_______|****************|_________|___|\r\n|.......|****************|......../|...|\r\n|.......|****************|.............|\r\n|.......|****************|.............|\r\n|.......|----------------|.............|\r\n|......................................|\r\n|--------------------------------------|\r\n`;\r\n\r\n    const RAINDROP = `'`;\r\n    const LINEWIDTH = art.trim().split(`\\n`)[0].length + 1;\r\n\r\n    const rain = [] as string[];\r\n    let strength = 0.01;\r\n    let isIncreasing = true;\r\n\r\n    return {\r\n        art,\r\n        animate: {\r\n            fps: 5,\r\n            draw: () => {\r\n\r\n                if (isIncreasing) {\r\n                    strength *= 1.05;\r\n                } else {\r\n                    strength /= 1.1;\r\n                }\r\n\r\n                if (strength < 0.01) {\r\n                    isIncreasing = true;\r\n                } else if (strength > 0.5) {\r\n                    isIncreasing = false;\r\n                }\r\n\r\n                rain.unshift(...[...new Array(LINEWIDTH)].map(x => Math.random() < strength ? RAINDROP : ` `));\r\n                if (rain.length > art.length * 10) { rain.splice(art.length); }\r\n\r\n                const chars = artYouDead.art.split(``);\r\n\r\n                for (let i = 0; i < chars.length; i++) {\r\n                    if (chars[i] === `^`) {\r\n                        chars[i] = rain[i] === RAINDROP ? `'` : ` `;\r\n                    }\r\n                    if (chars[i] === `_`) {\r\n                        chars[i] = rain[i] === RAINDROP ? `v` : `_`;\r\n                    }\r\n                }\r\n\r\n                return chars.join(``);\r\n            },\r\n        },\r\n    };\r\n})();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GameAction } from '../types';\r\n\r\nexport const CountDownTimer = (props: { time: number, color?: string, messageAfterTime?: string, onTimeElapsed: () => void }) => {\r\n    const [time, setTime] = useState(10);\r\n    useEffect(() => {\r\n        const timeStart = Date.now();\r\n        const id = setInterval(() => {\r\n            const timeRemaining = ((props.time * 1000) - (Date.now() - timeStart)) / 1000;\r\n            setTime(s => timeRemaining);\r\n            if (timeRemaining <= 0) {\r\n                setTime(s => 0);\r\n                clearInterval(id);\r\n                props.onTimeElapsed();\r\n            }\r\n        }, 10);\r\n        return () => clearInterval(id);\r\n    },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        []);\r\n\r\n    const timeStr = new Date(time * 1000).toISOString().slice(14, 23);\r\n    return (\r\n        <>\r\n            <div>\r\n                <div style={{ display: `inline-block`, backgroundColor: `#555555`, borderRadius: 4, padding: 8 }}>\r\n                    <div style={{ display: `inline-block`, backgroundColor: `#111111`, padding: 4 }}>\r\n                        <span style={{ color: props.color ?? `#FF0000` }}>{time > 0 ? timeStr : props.messageAfterTime ?? timeStr}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const triggerTimedMessage = async (\r\n    onMessage: (message: GameAction) => void,\r\n    immediateResult: GameAction,\r\n    time: number, color: 'danger' | 'warning' | 'normal',\r\n    getResultAfterTime: () => Promise<GameAction>,\r\n): Promise<GameAction> => {\r\n\r\n    const colorActual = color === `danger` ? `#FF0000`\r\n        : (color === `warning` ? `#FFFF00`\r\n            : `#7777FF`);\r\n\r\n    return await new Promise(resolve => {\r\n        const Component = () => (<CountDownTimer time={time} color={colorActual} onTimeElapsed={async () => {\r\n            resolve({ output: ``, ...await getResultAfterTime(), addDivider: true });\r\n        }} />);\r\n        onMessage({\r\n            output: ``,\r\n            ...immediateResult,\r\n            Component,\r\n        });\r\n    });\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Artwork } from '../art';\r\n\r\nexport const AsciiArtViewer = (props: { artwork: Artwork }) => {\r\n    const [art, setArt] = useState(props.artwork.art);\r\n\r\n    const { animate: animateRaw, autoAnimate } = props.artwork;\r\n\r\n    useEffect(() => {\r\n        const animate = animateRaw ?? (autoAnimate ? {\r\n            fps: autoAnimate.fps ?? 100,\r\n            draw: (t: number): string => {\r\n\r\n                let v = props.artwork.art;\r\n                for (const a of autoAnimate.replacements) {\r\n                    v = v.replace(new RegExp(a.find, `g`), (x) => Math.random() < a.ratio ? a.replace : x);\r\n                }\r\n\r\n                return v;\r\n            },\r\n        } : null);\r\n\r\n        if (!animate) { return; }\r\n\r\n        const timeStartMs = Date.now();\r\n        const draw = () => {\r\n            setArt(animate.draw(Date.now() - timeStartMs));\r\n        };\r\n        const id = setInterval(draw, 1000 / animate.fps);\r\n        draw();\r\n\r\n        // eslint-disable-next-line consistent-return\r\n        return () => clearInterval(id);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <span style={{ fontFamily: `monospace`, whiteSpace: `pre` }} >{art}</span>\r\n        </div>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport './achievement.css';\r\nimport React from 'react';\r\n\r\nexport const AchievementViewer = (props: { name: string }) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='achievement' style={{ display: `flex` }}>\r\n                <div style={{ flex: 1 }} />\r\n                <div className='achievement-label' style={{ fontFamily: `monospace`, color: `#CCCC style={{flex:1}}CC`, fontSize: `0.8rem` }} >New Achievement! </div>\r\n                <div className='achievement-name' style={{ fontFamily: `monospace` }} >{props.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","/* eslint-disable no-return-await */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable @typescript-eslint/no-use-before-define */\r\nimport React from 'react';\r\nimport { GameScene, GameItem, GameAction, GameInput } from '../types';\r\nimport { GameState } from '../core';\r\n\r\nexport const createScene_01mailbox = (gameState: GameState) => {\r\n    const {\r\n        triggerGameOver,\r\n        inventory,\r\n        removeFromInventory,\r\n        createGameObject,\r\n        createGameObjectTitle,\r\n        isMatch,\r\n        utils,\r\n        components,\r\n    } = gameState;\r\n\r\n    const { randomItem, randomIndex, getValuesAsItems, moveItem } = utils;\r\n    const { triggerTimedMessage, CountDownTimer } = components;\r\n\r\n    // These don't indicate state, just creation containers\r\n    const mailObjects = {\r\n        litterBox: createGameObject(`Self Cleaning Litter Box`, `Cause 18 years is great even if you have to deal with a little crap sometimes. Keep it clean and happy!`, {}),\r\n        towelHooks: createGameObject(`Set of Bathroom Towel Hooks`, `Stop dripping all over the floor!`, {}),\r\n        squishyToy: createGameObject(`Pink Flamingo Squishy Toy`, `It's head is tearing off. Maybe if can be sewn.`, {}),\r\n        strandLights: createGameObject(`Strand of Fairy Lights - 66ft`, `Make the room look cool. Girls only though!`, {}),\r\n        squirrel: createGameObject(`Squirrel Stuffed Animal with Nuts`, `It looks like you should be careful not to touch it's nuts!`, {\r\n            execute: async ({ command, target, onMessage }) => {\r\n                if (command === `touch` && target.includes(`nuts`)) {\r\n                    gameState.achievements.addAchievement(`🐿️ Don't Be Touchin My Nutz!`);\r\n\r\n                    return await triggerTimedMessage(onMessage, {\r\n                        output: randomItem([\r\n                            `The squirrel goes nuts and begins to chew off your arm.`,\r\n                            `The squirel had more than just nuts with him.`,\r\n                            `Despite the warnings, you decide to touch the squirrel's nuts anyway.`,\r\n                            `Everyone told you to keep your hands to yourself.`,\r\n                        ]),\r\n                    }, 5, `danger`, async () => await triggerGameOver(onMessage, `Don't be touchin my nutz!`));\r\n                }\r\n                return null;\r\n            },\r\n        }),\r\n        tickingPackage: createGameObject(`Ticking Package`, `Ummmm... it's ticking`, {\r\n            execute: async ({ command, onMessage }) => {\r\n                if (command === `open`) {\r\n                    gameState.achievements.addAchievement(`💣 Your Head Explode!`);\r\n\r\n                    return await triggerGameOver(onMessage, randomItem([`You have Exploded!`, `You're head acksplod!`, `You no longer hear ticking... probably because your head is gone.`]));\r\n                }\r\n                return null;\r\n            },\r\n        }),\r\n        limeCoconut: createGameObject(`Lime & Coconut`, `It seems like I have heard about this before.`, {\r\n            execute: async ({ command, target, onMessage }) => {\r\n                if (command === `put` && target.includes(`lime`) && target.includes(`coco`)) {\r\n                    gameState.achievements.addAchievement(`🥥 Put the Lime in the Coconut!`);\r\n\r\n                    return await triggerGameOver(onMessage, `\r\n                    You put the lime in the coconut, you drank 'em bot' up\r\n                    Put the lime in the coconut, you drank 'em bot' up\r\n                    Put the lime in the coconut, you drank 'em bot'up\r\n                    Put the lime in the coconut, you call your doctor, woke 'I'm up\r\n                    Said \"doctor, ain't there nothing' I can take?\"\r\n                    I said, \"doctor, to relieve this belly ache\"\r\n                    I said \"doctor, ain't there nothin' I can take?'\r\n                    I said, \"doctor, to relieve this belly ache\"`);\r\n                }\r\n                return null;\r\n            },\r\n        }),\r\n    };\r\n\r\n    // These don't indicate state, just creation containers for self reference\r\n    const yardObjects = {\r\n        snake: createGameObject(`Snake`, `It's a brown snake. Let's keep it! I have a small aquarium in my room.`, {\r\n            execute: async ({ command, target }) => {\r\n                if (command === `put` && target.includes(`mailbox`)) {\r\n                    // if (!mailbox.isOpen) {\r\n                    //     return {\r\n                    //         output: `The mailbox is not open.`,\r\n                    //     };\r\n                    // }\r\n                    mailbox.isOpen = true;\r\n                    if (mailbox.package) {\r\n\r\n                        return {\r\n                            output: `The mailbox has something in it already.`,\r\n                        };\r\n                    }\r\n\r\n                    removeFromInventory(yardObjects.snake);\r\n                    mailbox.package = yardObjects.snake;\r\n                    return {\r\n                        output: `You put the snake in the mailbox. He looks at you with his sad little snake eyes...`,\r\n                    };\r\n                }\r\n                return null;\r\n            },\r\n        }),\r\n        dog: createGameObject(`Dog`, `It's a white dog. It was trying to bite you... not anymore...`, {\r\n            execute: async ({ command, target }) => {\r\n                // if (command === `put` && target.includes(`mailbox`)) {\r\n                //     // if (!mailbox.isOpen) {\r\n                //     //     return {\r\n                //     //         output: `The mailbox is not open.`,\r\n                //     //     };\r\n                //     // }\r\n                //     mailbox.isOpen = true;\r\n                //     if (mailbox.package) {\r\n\r\n                //         return {\r\n                //             output: `The mailbox has something in it already.`,\r\n                //         };\r\n                //     }\r\n\r\n                //     removeFromInventory(yardObjects.snake);\r\n                //     mailbox.package = yardObjects.snake;\r\n                //     return {\r\n                //         output: `You put the snake in the mailbox. He looks at you with his sad little snake eyes...`,\r\n                //     };\r\n                // }\r\n                return null;\r\n            },\r\n        }),\r\n    };\r\n\r\n    const yard = {\r\n        ...createGameObjectTitle(`Grass Yard`),\r\n        description: () => {\r\n            if (yard.contents.includes(yardObjects.snake)) {\r\n                return `This is a large yard. A snake is sunning itself on a rock in the grass.`;\r\n            }\r\n            if (yard.contents.includes(yardObjects.dog)) {\r\n                return `You look at the large yard and can't help but notice a small white dog that looks like it wants to rip your face off.`;\r\n            }\r\n            return `This is a large grass yard in front of a house. \r\n            Only the center of the yard is mowed and it looks like it might be in the shape of a heart.`;\r\n        },\r\n        contents: getValuesAsItems(yardObjects),\r\n    };\r\n\r\n    const pickupTruck = {\r\n        ...createGameObjectTitle(`Crashed Pickup Truck`),\r\n        description: () => `The crashed pickup truck is smoking. \r\n        The front end looks like it is hugging that tree. Clearly it is not familiar with social distancing.\r\n        As you get near, you wonder if the driver had his own personal accident when he wrecked.\r\n\r\n        In the bed of the truck are ${[\r\n                `some spent shotgun shells`,\r\n                `a few full trash bags`,\r\n                ...pickupTruck.contents.map(x => x.titleWithA)].join(`, `)}, and... ${randomItem([\r\n                    `a bunch of beer cans`,\r\n                    `some empty cigarette packages`,\r\n                    `an old tire`,\r\n                ])}.\r\n        `,\r\n        hasCrashed: false,\r\n        contents: getValuesAsItems(mailObjects),\r\n    };\r\n\r\n    const mailbox = {\r\n        ...createGameObjectTitle(`Mailbox`),\r\n        description: () => `There is ${mailbox.isOpen ? `an open` : `a small closed`} mailbox nearby. \r\n            ${mailbox.isOpen && mailbox.package ? `There is a ${mailbox.package.title} inside.` : ``}`,\r\n        isOpen: false,\r\n        isDelivering: false,\r\n        deliveryCount: 0,\r\n        package: null as GameItem | null,\r\n    };\r\n\r\n    const placeRandomItemInMailbox = () => {\r\n        let i = randomIndex(pickupTruck.contents.length);\r\n\r\n        if (mailbox.deliveryCount >= 1 && pickupTruck.contents.find(x => x === mailObjects.tickingPackage)) {\r\n            i = pickupTruck.contents.indexOf(mailObjects.tickingPackage);\r\n        }\r\n        mailbox.deliveryCount++;\r\n\r\n        const p = pickupTruck.contents[i];\r\n        pickupTruck.contents.splice(i, 1);\r\n        mailbox.package = p;\r\n        mailbox.isOpen = false;\r\n    };\r\n\r\n    // Testing\r\n    // inventory.push(...mailPackages);\r\n\r\n    // Setup Scene\r\n    placeRandomItemInMailbox();\r\n\r\n    const { tickingPackage } = mailObjects;\r\n    const { snake, dog } = yardObjects;\r\n\r\n    const deliverMail = async (input: GameInput): Promise<GameAction> => {\r\n        mailbox.isDelivering = false;\r\n\r\n        if (mailbox.package === snake) {\r\n\r\n            gameState.achievements.addAchievement(`😡 He's Got Angry Eyes`);\r\n            return await triggerGameOver(input.onMessage, `\r\n                You see ${randomItem([`a UPS truck`, `an Amazon truck`, `an ambulance`, `a cop car`, `the van from down by the river`, `the ice cream truck`])} drive up.\r\n                The driver waves at you while carrying a package to the mailbox.\r\n\r\n                As he opens the mailbox, your little pal jumps out and bites him in the face.\r\n                At first you think this is funny, but then the driver rips the snake off and throws him into the trees.\r\n\r\n                The driver looks up and sees you laughing.\r\n                You see a look of rage in his eyes as he gets back in, revs the engine, and speeds towards you...\r\n                `);\r\n        }\r\n\r\n        if (mailbox.package) {\r\n            const item = mailbox.package;\r\n            pickupTruck.contents.push(item);\r\n            mailbox.isOpen = true;\r\n\r\n            if (item === tickingPackage) {\r\n                mailbox.package = null;\r\n                gameState.destroyedObjects.push(tickingPackage);\r\n\r\n                pickupTruck.hasCrashed = true;\r\n                pickupTruck.contents.splice(pickupTruck.contents.indexOf(tickingPackage), 1);\r\n\r\n                gameState.achievements.addAchievement(`🏴‍☠️ Take That, Porch Pirates!!`);\r\n                return {\r\n                    output: `\r\n                    You see a package-thief drive up in an old beat up pickup truck.\r\n                    He drives right up to the mailbox, grabs the package, and starts off.\r\n\r\n                    Immediately, you hear a loud pop and see colored smoke fill the cab.\r\n                    \r\n                    The truck swerves wildly and crashes into a large oak tree.\r\n\r\n                    After a minute, the driver jumps out, covered in glitter. \r\n                    \r\n                    He runs into the trees screaming about a horrible smell...\r\n                    `,\r\n                };\r\n            }\r\n\r\n            placeRandomItemInMailbox();\r\n\r\n            gameState.achievements.addAchievement(`📮 Return to Sender`);\r\n            return {\r\n                output: `\r\n                You see ${randomItem([`a UPS truck`, `an Amazon truck`, `the ice cream truck`])} drive up and a driver wearing a trench coat get out.\r\n                \r\n                He carries a package to the mail box, but when he opens it, he looks suprised.\r\n\r\n                He looks around suspiciously... and then puts the ${item.title} under his trenchcoat as he slips the new package into the mailbox.\r\n\r\n                He nervously looks around again, then rushes back to the truck and quickly drives off.`,\r\n            };\r\n        }\r\n\r\n        placeRandomItemInMailbox();\r\n        gameState.achievements.addAchievement(`🚚 Same Day Delivery!`);\r\n        return {\r\n            output: `\r\n            You see ${randomItem([`a UPS truck`, `an Amazon truck`, `an ambulance`, `a cop car`, `the van from down by the river`, `the ice cream truck`])} drive up, and the driver puts a package in the mailbox.\r\n            He is wearing a ${randomItem([`football helmet`, `Santa hat`, `bow tie`, `hazmat suit`, `clown uniform`, `bearskin rug`])}.\r\n            As he drives away, he shouts, \"${randomItem([`Watch out for the monkeys!`, `Merry Christmas!`, `Ducks... ducks... ducks everywhere...`, `That squirrel is nuts!`])}\"`,\r\n        };\r\n    };\r\n\r\n    const closeMailbox = async (input: GameInput): Promise<GameAction> => {\r\n        if (mailbox.package === snake) {\r\n            if (mailbox.isDelivering) {\r\n                return { output: `You close the mailbox with your little friend inside...` };\r\n            }\r\n            mailbox.isDelivering = true;\r\n\r\n            return await triggerTimedMessage(input.onMessage, {\r\n                output: `\r\n                You close the mailbox with your little friend inside...\r\n                Deep down, you feel like you are making bad life choices...\r\n                We'll give you some time to think about it...`,\r\n            }, 20, `warning`, () => deliverMail(input));\r\n        }\r\n\r\n        if (pickupTruck.contents.length <= 0 || mailbox.package) {\r\n            return {\r\n                output: `You close the mailbox. ${mailbox.package ? `There is still something inside it though.` : `Thanks!`}`,\r\n            };\r\n        }\r\n\r\n        if (mailbox.isDelivering) {\r\n            return { output: `You close the mailbox.` };\r\n        }\r\n        mailbox.isDelivering = true;\r\n\r\n        gameState.achievements.addAchievement(`📪 These Kids Keep Stealing My Mail!`);\r\n        return triggerTimedMessage(input.onMessage, { output: `You close the mailbox.` }, 10, `normal`, () => deliverMail(input));\r\n    };\r\n\r\n    const execute = async (input: GameInput): Promise<GameAction> => {\r\n        const { command, target, onMessage } = input;\r\n\r\n        if (command === `open` && target === `mailbox`) {\r\n            if (mailbox.isOpen) {\r\n\r\n                return {\r\n                    output: `Really? The mailbox is already open!`,\r\n                };\r\n            }\r\n\r\n            mailbox.isOpen = true;\r\n            gameState.achievements.addAchievement(`📭 You've Got Mail!`);\r\n            return {\r\n                output: mailbox.package ? `You see a ${mailbox.package.title} in the mailbox.` : `There is nothing in the mailbox.`,\r\n            };\r\n        }\r\n\r\n        if (command === `close` && target === `mailbox`) {\r\n            if (!mailbox.isOpen) {\r\n                return {\r\n                    output: `It's already closed.`,\r\n                };\r\n            }\r\n\r\n            mailbox.isOpen = false;\r\n            return await closeMailbox(input);\r\n        }\r\n\r\n        if (command === `take` && mailbox.package && isMatch(mailbox.package, target)) {\r\n            const p = mailbox.package;\r\n            inventory.push(p);\r\n            mailbox.package = null;\r\n            const wasOpen = mailbox.isOpen;\r\n            mailbox.isOpen = true;\r\n\r\n\r\n            if (p === tickingPackage) {\r\n                gameState.achievements.addAchievement(`📦 Umm... It's ticking`);\r\n\r\n                return {\r\n                    Component: () => (inventory.includes(tickingPackage) && <CountDownTimer time={180} color='#FF0000' onTimeElapsed={async () => {\r\n                        if (!inventory.includes(tickingPackage)) { return; }\r\n\r\n                        gameState.achievements.addAchievement(`⏰ Is it Bad that It's Ticking?`);\r\n                        onMessage(await triggerGameOver(onMessage, `You obviously need to watch more TV. A ticking package is generally bad news.`));\r\n                    }} /> || <span />),\r\n                    output: `${!wasOpen ? `You open the mailbox and` : `You`} take the ${p.title}. As you place it carefully in your backpack, you notice the ticking is getting louder.`,\r\n                };\r\n            }\r\n\r\n            return {\r\n                output: `${!wasOpen ? `You open the mailbox and` : `You`} take the ${p.title} and put it in your backpack.`,\r\n            };\r\n        }\r\n\r\n        if (command === `take` && yard.contents.includes(snake) && isMatch(snake, target)) {\r\n            const p = snake;\r\n            moveItem(p, yard.contents, inventory);\r\n\r\n            gameState.achievements.addAchievement(`🐍 You Would do Well in Slitherin`);\r\n            return {\r\n                output: `You take the ${p.title} and put it in your backpack. \r\n                \r\n                Just then a little white dog starts chasing you and tries to bite you. You run back to the mailbox and the dog goes back to it's own yard, but it keeps barking.`,\r\n            };\r\n        }\r\n\r\n        if (command === `throw` && inventory.includes(snake) && yard.contents.includes(dog) && isMatch(dog, target) && isMatch(snake, target)) {\r\n            const p = dog;\r\n            moveItem(p, yard.contents, inventory);\r\n\r\n            gameState.achievements.addAchievement(`🦴 Throw the dog a bone... or snake.`);\r\n            return {\r\n                output: `You throw the snake at the dog and it latches onto his face.\r\n                \r\n                The dog shakes violently until the snake goes flying into the trees. \r\n                \r\n                Then the dog runs around the yard three times, yipping the whole way. On the third lap, the dog seems to remember you and starts running directly at you.\r\n\r\n                Right before the dog reaches you, it leaps at your face barring its jagged teeth.\r\n\r\n                As you look into his vicious eyes, they suddenly go blank. The dog hits you limply and falls to the ground. \r\n                \r\n                It's not moving anymore now. You decide to put it in your backpack before the neighbors see you standing above their dead dog.`,\r\n            };\r\n        }\r\n\r\n        if (command === `take` && pickupTruck.hasCrashed) {\r\n            const f = pickupTruck.contents.find(x => isMatch(x, target));\r\n            if (f) {\r\n                moveItem(f, pickupTruck.contents, inventory);\r\n\r\n                gameState.achievements.addAchievement(`♻️ Another Man's Trash`);\r\n                return {\r\n                    output: `You take the ${f.title} from the back of the truck.`,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (command === `put`) {\r\n            if (target.includes(`mailbox`)) {\r\n                // if (!mailbox.isOpen) {\r\n                //     return {\r\n                //         output: `The mailbox is not open.`,\r\n                //     };\r\n                // }\r\n                mailbox.isOpen = true;\r\n                if (mailbox.package) {\r\n                    return {\r\n                        output: `There is already something in the mailbox.`,\r\n                    };\r\n                }\r\n\r\n                const f = inventory.find(x => isMatch(x, target));\r\n                if (f) {\r\n                    removeFromInventory(f);\r\n                    mailbox.package = f;\r\n                    const wasOpen = mailbox.isOpen;\r\n                    mailbox.isOpen = false;\r\n                    return await triggerTimedMessage(input.onMessage, {\r\n                        output: `${!wasOpen ? `You open the mailbox and` : `You`} put the ${f.title} in the mailbox ${!wasOpen ? `and close it again.` : `and close it.`}`,\r\n                    }, 10, `normal`, () => deliverMail(input));\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    // const look = async (input: GameInput): Promise<GameAction> => {\r\n    //     // if (target.includes(`house`)) {\r\n    //     //     return {\r\n    //     //         output: `You are standing in a large grass yard of a biege house, with a broken front door.\r\n    //     //         There is ${mailbox.isOpen ? `an open` : `a small`} mailbox nearby.`,\r\n    //     //     };\r\n    //     // }\r\n\r\n    //     // if (target.includes(`grass`) || target.includes(`yard`)) {\r\n    //     //     if (yard.snake) {\r\n    //     //         return {\r\n    //     //             output: `You see a snake crawling in the grass.`,\r\n    //     //         };\r\n    //     //     }\r\n\r\n    //     //     return {\r\n    //     //         output: `You are standing in a large grass yard.`,\r\n    //     //     };\r\n    //     // }\r\n\r\n    //     // if (target.includes(`mailbox`)) {\r\n    //     //     return {\r\n    //     //         output: `There is ${mailbox.isOpen ? `an open` : `a small`} mailbox nearby. ${mailbox.isOpen && mailbox.package ? `There is a ${mailbox.package.title} inside.` : ``}`,\r\n    //     //     };\r\n    //     // }\r\n\r\n    //     const lookItems = [\r\n    //         mailbox,\r\n    //         yard,\r\n    //         mailTruck.hasCrashed ? mailTruck : null,\r\n    //     ];\r\n    // };\r\n\r\n    const gameScene: GameScene = {\r\n        introduction: `# The Mailbox\r\n        You are standing in a large grass yard near a small mailbox.\r\n        `,\r\n        execute,\r\n        getLookItems: () => [\r\n            mailbox,\r\n            yard,\r\n            pickupTruck.hasCrashed ? pickupTruck : null,\r\n        ],\r\n    };\r\n\r\n    // Type Check\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    //    const _gameScene: GameScene = gameScene;\r\n    return gameScene;\r\n};\r\n\r\nexport type Scene01Mailbox = ReturnType<typeof createScene_01mailbox>;\r\n","import React from 'react';\r\nimport { createGameState } from './core';\r\nimport { createScene_01mailbox } from './scenes/01-mailbox';\r\nimport { GameAction, GameInput, GameExecute, Game, GameScene } from './types';\r\nimport { randomItem, delay } from './utils';\r\nimport { artMap, artMan } from './art';\r\nimport { AsciiArtViewer } from './components/ascii-art-viewer';\r\n\r\n\r\nexport const dorkVersion = `v1.4.2`;\r\nexport const title = `*** DORK! *** ${dorkVersion} - Copyright ${new Date().getFullYear()} Rick Love`;\r\n\r\nexport const createDorkGame = (onMessageInit: (message: GameAction) => void): Game => {\r\n    const gameState = createGameState(onMessageInit);\r\n    const {\r\n        isGameOver,\r\n        inventory,\r\n        isMatch,\r\n    } = gameState;\r\n\r\n\r\n    const badCommandInsults = [\r\n        `What are you talking about?`,\r\n        `That doesn't make any sense.`,\r\n        // Saved for Redneck Game\r\n        // `Ain't never heard no nonsense like that before.`,\r\n        `I've seen butter knives sharper than you!`,\r\n        `You are playing the correct game!`,\r\n        `What exactly do you think that would accomplish?`,\r\n        `This is a family game!`,\r\n    ];\r\n\r\n\r\n    const scenes = [\r\n        createScene_01mailbox(gameState),\r\n    ];\r\n    let scene = null as null | GameScene;\r\n\r\n    const loadScene = async (value: GameScene): Promise<GameAction> => {\r\n        scene = value;\r\n        return { output: scene.introduction };\r\n    };\r\n    // const containers = ;\r\n\r\n    const execute: GameExecute = async (inputRaw: GameInput): Promise<GameAction> => {\r\n        const { command: commandRaw, target, onMessage: onMessageRaw } = inputRaw;\r\n\r\n        // Prevent Messages if game over already\r\n        const onMessage: typeof onMessageRaw = (x) => {\r\n            // Ensure Game Over Interrupts Execute\r\n            if (isGameOver()) { return; }\r\n            onMessageRaw(x);\r\n        };\r\n        // const haveTarget = (match: string) => target.includes(match) && inventory.find(x => x.lower.includes(target));\r\n\r\n        // Standardize Commands\r\n        let command = commandRaw;\r\n        command = command === `look` || command === `see` || command === `view` || command === `observer` ? `look` : command;\r\n        command = command === `take` || command === `get` || command === `obtain` ? `take` : command;\r\n\r\n        const input = { ...inputRaw, command, onMessage };\r\n\r\n        // Ensure Game Over Interrupts Execute\r\n        if (gameState.isGameOver()) {\r\n            return { output: ``, isGameOver: true };\r\n        }\r\n\r\n        if (!scene) {\r\n            throw new Error(`Scene not loaded - Start Game First`);\r\n        }\r\n\r\n        gameState.achievements.addAchievement(`⌨ I Can Type!`);\r\n\r\n        if (command === `look`) {\r\n            gameState.achievements.addAchievement(`👀 Looking Good!`);\r\n\r\n            // Look Inventory\r\n            const f = inventory.find(x => isMatch(x, target));\r\n            if (f) {\r\n                return {\r\n                    output: typeof f.description === `function` ? f.description() : f.description,\r\n                };\r\n            }\r\n\r\n            // Look Scene\r\n            const sceneItems = scene.getLookItems();\r\n            const s = sceneItems.find(x => x && isMatch(x, target));\r\n            if (s) {\r\n                return {\r\n                    output: typeof s.description === `function` ? s.description() : s.description,\r\n                };\r\n            }\r\n            // const result = await scene.look(input);\r\n            // if (result) { return result; }\r\n\r\n            // return {\r\n            //     output: randomItem([`What do you want to look at?`, `Yes, you look nice!`]),\r\n            // };\r\n\r\n            return {\r\n                output: `You see ${sceneItems.filter(x => x).map(x => x?.titleWithA).join(`, `)}, and ${randomItem([\r\n                    `a dork... oh that's you.`,\r\n                    `... your reflection off of the screen.`,\r\n                    `a heard of zombies... Wait nevermind.`,\r\n                    `... so many ducks.`,\r\n                    `... a tech support scammer.`,\r\n                ])}`,\r\n            };\r\n        }\r\n\r\n\r\n        // Execute Inventory\r\n        for (const x of inventory) {\r\n            if (!x.execute) { continue; }\r\n            if (!isMatch(x, target)) { continue; }\r\n\r\n            // eslint-disable-next-line no-await-in-loop\r\n            const result = await x.execute(input);\r\n            if (result) { return result; }\r\n        }\r\n\r\n        // Execute Scene\r\n        const result = await scene.execute(input);\r\n        if (result) { return result; }\r\n\r\n        // List Inventory\r\n        if (command === `inv` || command === `inventory` || command === `bag` || command === `backpack` || command === `pack`) {\r\n            gameState.achievements.addAchievement(`🎒 Checkin on My Stuff`);\r\n\r\n            return { output: inventory.map(x => x.title).join(`\\n`) };\r\n        }\r\n\r\n        // Help\r\n        if (command === `help`) {\r\n            gameState.achievements.addAchievement(`🦮 Hold My Hand Please`);\r\n\r\n            return {\r\n                output: `\r\n                    Example Commands: \r\n                    help\r\n                    inventory\r\n                    look at mirror\r\n                    take frog\r\n                    open box\r\n                    close trunk\r\n                    put cat in submarine\r\n                    go to house\r\n                    throw snake at lady\r\n                    send gif to grandma\r\n                    post status on dorkbook\r\n                    wear mask\r\n                    ` };\r\n        }\r\n\r\n        // Map\r\n        if (command === `map`) {\r\n            gameState.achievements.addAchievement(`🗺️ I'm a map!`);\r\n\r\n            return { output: artMap };\r\n        }\r\n\r\n        if (command === `die`) {\r\n            gameState.achievements.addAchievement(`💀 You Asked for It!`);\r\n\r\n            return gameState.triggerGameOver(onMessage, `You asked for it!`);\r\n        }\r\n\r\n        // Silly Commands\r\n        if (command === `dork`) {\r\n            gameState.achievements.addAchievement(`🤓 Actually... I'm a Nerd`);\r\n            return { output: randomItem([`Yes, you must be!`, `I prefer the term nerd.`]) };\r\n        }\r\n        if (command === `jump`) {\r\n            gameState.achievements.addAchievement(`🦘 Jump! Jump!`);\r\n            return { output: randomItem([`How high?`, `Good job!`, `Maybe if you type harder!`]) };\r\n        }\r\n\r\n        return { output: randomItem(badCommandInsults) };\r\n\r\n        // return {\r\n        //     output: `${randomBinary(512)}\r\n        //     ****  You have died  ****\r\n        // ` };\r\n    };\r\n\r\n    const start = async (onMessage: (message: GameAction) => void): Promise<void> => {\r\n        // Load First Scene\r\n        onMessage({ output: `Reading Floppy Disk...` });\r\n        await delay(1000);\r\n        onMessage({ output: title });\r\n        onMessage({ output: ``, Component: () => (<AsciiArtViewer artwork={artMan} />) });\r\n        await delay(3000);\r\n        onMessage({\r\n            output: ``,\r\n            addDivider: true,\r\n        });\r\n        onMessage({\r\n            output: `Type simple commands\r\n                Examples:` });\r\n        await delay(1000);\r\n        onMessage({\r\n            output: `\r\n                - inventory\r\n                - look at mirror\r\n                - take frog\r\n                - open box\r\n                - close trunk\r\n                - put cat in submarine\r\n                - help\r\n                - look at achievements \r\n                `,\r\n        });\r\n        await delay(3000);\r\n        onMessage({\r\n            output: ``,\r\n            addDivider: true,\r\n        });\r\n        onMessage(await loadScene(scenes[0]));\r\n    };\r\n\r\n    const game: Game = {\r\n        title,\r\n        start,\r\n        execute,\r\n        onQuit: () => gameState.triggerQuit(),\r\n        onQuitNot: () => {\r\n            gameState.achievements.addAchievement(`🧻 Never gonna give you up!`);\r\n            return { output: `That was close` };\r\n        },\r\n        achievements: {\r\n            setValue: (achievements: string[]) => { gameState.achievements.loadAchievements(achievements); },\r\n            getValue: () => { return gameState.achievements.getAchievements(); },\r\n        },\r\n    };\r\n\r\n    return game;\r\n};\r\n","/* eslint-disable no-use-before-define */\r\n/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable unicorn/consistent-function-scoping */\r\n/* eslint-disable no-param-reassign */\r\nimport { createDorkGame, title } from 'dork/main';\r\nimport { GameInput, GameAction } from 'dork/types';\r\nimport { ConFile, ConActionQuery } from './types';\r\nimport { randomBinary } from './utils';\r\n\r\n// localStorage\r\ntype DorkGameStorage = {\r\n    achievements: string[];\r\n};\r\nconst loadGameStorage = () => {\r\n    const v = localStorage.getItem(`DorkGameStorage`);\r\n    if (!v) { return null; }\r\n    try { return JSON.parse(v) as DorkGameStorage | null; } catch{ return null; }\r\n};\r\nconst saveGameStorage = (value: DorkGameStorage) => { localStorage.setItem(`DorkGameStorage`, JSON.stringify(value)); };\r\n\r\nexport const dorkFile: ConFile = {\r\n    session: `user`, path: `/`, name: `dork`,\r\n    content: `${randomBinary(256)}${title}${randomBinary(512)}`,\r\n    execute: async (onMessage) => {\r\n\r\n        const onMessageGame = (message: GameAction) => {\r\n            onMessage({\r\n                output: message?.output,\r\n                Component: message?.Component,\r\n                addDivider: message?.addDivider,\r\n            });\r\n        };\r\n\r\n        const dorkGame = createDorkGame(onMessageGame);\r\n\r\n        const conQuery: ConActionQuery = {\r\n            prompt: `>`,\r\n            respond: async (input) => {\r\n                // Quit Game\r\n                if (input.command === `quit`) {\r\n                    return {\r\n                        query: {\r\n                            prompt: `Are you sure you want to quit?`,\r\n                            respond: async (x) => {\r\n                                if (x.command.startsWith(`y`)) {\r\n                                    const result = dorkGame.onQuit();\r\n                                    saveGameStorage({ achievements: dorkGame.achievements.getValue() });\r\n                                    return result;\r\n                                }\r\n                                return {\r\n                                    ...dorkGame.onQuitNot(),\r\n                                    query: conQuery,\r\n                                };\r\n                            },\r\n                        },\r\n                    };\r\n                }\r\n\r\n                const gameInput: GameInput = {\r\n                    ...input,\r\n                    onMessage: onMessageGame,\r\n                };\r\n                const result = await dorkGame.execute(gameInput);\r\n                saveGameStorage({ achievements: dorkGame.achievements.getValue() });\r\n                return {\r\n                    ...result,\r\n                    query: result?.isGameOver ? undefined : conQuery,\r\n                };\r\n            },\r\n        };\r\n\r\n        const s = loadGameStorage();\r\n        if (s) {\r\n            dorkGame.achievements.setValue(s.achievements);\r\n        }\r\n\r\n        await dorkGame.start(onMessageGame);\r\n\r\n        return {\r\n            output: ``,\r\n            query: conQuery,\r\n        };\r\n    },\r\n};\r\n","/* eslint-disable unicorn/consistent-function-scoping */\r\nimport React from 'react';\r\nimport { GameItem, GameAction, GameItemTitle } from './types';\r\nimport { randomItem, randomIndex, getValuesAsItems, moveItem, delay } from './utils';\r\nimport { triggerTimedMessage, CountDownTimer } from './components/count-down-timer';\r\nimport { artYouDead } from './art';\r\nimport { AsciiArtViewer } from './components/ascii-art-viewer';\r\nimport { AchievementViewer } from './components/achievement';\r\n\r\nexport const createGameState = (onMessageInit: (message: GameAction) => void) => {\r\n    const _achievements = [] as string[];\r\n    const loadAchievements = (value: string[]) => { _achievements.splice(0, _achievements.length, ...value); };\r\n    const getAchievements = () => { return _achievements; };\r\n    const addAchievement = (name: string) => {\r\n        if (!_achievements.includes(name)) {\r\n            setTimeout(() => {\r\n                onMessageInit({ output: ``, Component: () => (<AchievementViewer name={name} />) });\r\n            }, 1000);\r\n            _achievements.push(name);\r\n        }\r\n    };\r\n\r\n    let gameOver = false;\r\n    const triggerGameOver = async (onMessage: (message: GameAction) => void, lastMessage: string): Promise<GameAction> => {\r\n\r\n        onMessage({ output: lastMessage });\r\n        gameOver = true;\r\n        addAchievement(`⚰️ You Dead!`);\r\n\r\n        await delay(3000);\r\n        return {\r\n            isGameOver: true,\r\n            output: ``,\r\n            Component: () => (<AsciiArtViewer artwork={artYouDead} />),\r\n        };\r\n    };\r\n    const triggerQuit = (): GameAction => {\r\n        gameOver = true;\r\n        addAchievement(`🔥 You're Fired!`);\r\n        return { output: `****  You can't quit you're fired!  ****`, isGameOver: true };\r\n    };\r\n\r\n    const inventory = [] as GameItem[];\r\n    const destroyedObjects = [] as GameItem[];\r\n    const allGameObjectTitles = [] as GameItemTitle[];\r\n    const allWords = [] as string[];\r\n    const commonWords = `the a an at in of by`.split(` `).filter(x => x);\r\n    const ignoreWords = [...commonWords] as string[];\r\n\r\n    const removeFromInventory = (item: GameItem) => {\r\n        const i = inventory.indexOf(item);\r\n        if (i < 0) { return false; }\r\n        inventory.splice(i, 1);\r\n        return true;\r\n    };\r\n\r\n    const getTitleWithA = (title: string): string => {\r\n        const l = title.toLowerCase()[0];\r\n        if (l === `a`\r\n            || l === `e`\r\n            || l === `i`\r\n            || l === `o`\r\n            || l === `u`\r\n        ) { return `an ${title}`; }\r\n\r\n        return `a ${title}`;\r\n    };\r\n\r\n    const createGameObject = (title: string, description: string, options: Partial<GameItem>): GameItem => {\r\n        const g = { title, titleWithA: getTitleWithA(title), description, matches: title.toLowerCase().split(` `), lower: title.toLowerCase(), ...options };\r\n        allGameObjectTitles.push(g);\r\n\r\n        // Ignore duplicate words\r\n        ignoreWords.push(...g.matches.filter(x => allWords.includes(x)));\r\n        allWords.push(...g.matches);\r\n\r\n        return g;\r\n    };\r\n\r\n    const createGameObjectTitle = (title: string): GameItemTitle => {\r\n        const g = { title, titleWithA: getTitleWithA(title), matches: title.toLowerCase().split(` `), lower: title.toLowerCase() };\r\n        allGameObjectTitles.push(g);\r\n\r\n        // Ignore duplicate words\r\n        ignoreWords.push(...g.matches.filter(x => allWords.includes(x)));\r\n        allWords.push(...g.matches);\r\n\r\n        return g;\r\n    };\r\n\r\n\r\n    const isMatch = (item: GameItemTitle | null | undefined, target: string) => {\r\n        if (!target) { return false; }\r\n        const t = target.split(` `).map(x => x.trim()).filter(x => x).filter(x => !ignoreWords.includes(x));\r\n        return !!t.find(x => item?.matches.includes(x));\r\n    };\r\n\r\n    const achievementGameObject: GameItem = {\r\n        ...createGameObjectTitle(`Achievements`),\r\n        matches: [`achieve`, `ach`, `achievements`],\r\n        description: () => getAchievements().join(`\\n`),\r\n        lower: ``,\r\n    };\r\n    inventory.push(achievementGameObject);\r\n\r\n    const utils = { randomItem, randomIndex, getValuesAsItems, moveItem };\r\n    const components = { triggerTimedMessage, CountDownTimer };\r\n\r\n    const gameState = {\r\n        achievements: {\r\n            loadAchievements,\r\n            getAchievements,\r\n            addAchievement,\r\n        },\r\n        isGameOver: () => gameOver,\r\n        triggerGameOver,\r\n        triggerQuit,\r\n        inventory,\r\n        destroyedObjects,\r\n        allGameObjects: allGameObjectTitles,\r\n        allWords,\r\n        commonWords,\r\n        ignoreWords,\r\n        removeFromInventory,\r\n        createGameObject,\r\n        createGameObjectTitle,\r\n        isMatch,\r\n        utils,\r\n        components,\r\n    };\r\n\r\n    return gameState;\r\n};\r\n\r\nexport type GameState = ReturnType<typeof createGameState>;\r\n","/* eslint-disable no-param-reassign */\r\nimport { ConFile, ConActionQuery } from './types';\r\nimport { randomBinary } from './utils';\r\n\r\nexport const zork: ConFile = {\r\n    session: `user`, path: `/`, name: `zork`,\r\n    content: `${randomBinary(256)}West of House\r\nYou are standing in an open field west of a white house, with a boarded front door.\r\nThere is a small mailbox here.${randomBinary(512)}`,\r\n    execute: async () => {\r\n\r\n        const mainZork: ConActionQuery = {\r\n            prompt: `>`,\r\n            respond: async ({ command, target }) => {\r\n                if (command === `zork`) { return { output: `At your service`, query: mainZork }; }\r\n                if (command === `jump`) { return { output: Math.random() < 0.5 ? `Are you enjoying yourself?` : `Very good! Now you can go to the second grade.`, query: mainZork }; }\r\n                if (command === `scream`) { return { output: `Aaaarrrrgggghhhh!`, query: mainZork }; }\r\n\r\n                if (command === `look`) {\r\n                    if (target === `house`) {\r\n                        return {\r\n                            output: `You are standing in an open field west of a white house, with a boarded front door.`,\r\n                            query: mainZork,\r\n                        };\r\n                    }\r\n                }\r\n\r\n                if (command === `open`) {\r\n                    if (target === `mailbox`) {\r\n                        return {\r\n                            output: `Opening the small mailbox reveals a leaflet`,\r\n                            query: mainZork,\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    output: `${randomBinary(512)}\r\n                    ****  You have died  ****\r\n                    ...bzzz...\r\n                    The magnetic tape drive is smoking...\r\n                    Maybe I should play >>> DORK <<<\r\n                ` };\r\n            },\r\n        };\r\n\r\n        return {\r\n            output: `West of House\r\n        You are standing in an open field west of a white house, with a boarded front door.\r\n        There is a small mailbox here.`,\r\n            query: mainZork,\r\n        };\r\n    },\r\n};\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable unicorn/consistent-function-scoping */\r\nimport { ConSessionName, ConSession, ConState, ConFile, ConAction, ConInput, ConCommandResult } from './types';\r\nimport { randomBinary } from './utils';\r\nimport { dorkFile } from './game-dork';\r\nimport { zork } from './game-zork';\r\n\r\nexport const createConsoleCommands = (initialMachineName: string) => {\r\n\r\n    const sessions: { [session in ConSessionName]: ConSession } = {\r\n        user: { machineName: `${initialMachineName}` },\r\n        admin: { machineName: `admin@vm` },\r\n    };\r\n\r\n    let state: ConState = {\r\n        parent: undefined,\r\n        session: `user`,\r\n        directory: `/`,\r\n        activeAction: undefined,\r\n    };\r\n\r\n    const enterSession = (session: ConSessionName, shouldResolveAction = true) => {\r\n        state = {\r\n            parent: { ...state, activeAction: shouldResolveAction ? null : state.activeAction },\r\n            session,\r\n            directory: `/`,\r\n            activeAction: null,\r\n        };\r\n    };\r\n    const exitSession = () => {\r\n        if (!state.parent) { return null; }\r\n        state = state.parent;\r\n        return state;\r\n    };\r\n\r\n\r\n    const files: ConFile[] = [\r\n        {\r\n            session: `user`, path: `/`, name: `Readme.md`,\r\n            content: `\r\n                Yes, this is cool!\r\n                Look, I created my own blog!\r\n                ## Hidden Stuff\r\n                I'm going to store some things here so I don't forget.`,\r\n        }, {\r\n            session: `user`, path: `/`, name: `passwords.txt`,\r\n            content: `\r\n                123456\r\n                test1\r\n                chucknorris\r\n                password\r\n                buddy\r\n                hunter2\r\n                Z10N0101\r\n                qwerty\r\n                tiger\r\n                1234567890\r\n                CPE1704TKS\r\n                admin\r\n                friend\r\n                iaccepttherisk\r\n                test1234\r\n                ncc1701\r\n                00000000\r\n                pennygetyourownwifi\r\n                p@55w0rd\r\n                xyzzy\r\n                correcthousebatterystaple`,\r\n        }, {\r\n            session: `user`, path: `/`, name: `admin.sh`,\r\n            content: `ssh admin@192.168.0.1`,\r\n            execute: async () => ({\r\n                output: `Please Enter Password`,\r\n                query: {\r\n                    prompt: `doors@durin>`,\r\n                    respond: async ({ command }) => {\r\n                        if (command === `friend`) {\r\n                            enterSession(`admin`);\r\n                            return {\r\n                                output: `Logging into ${sessions.admin.machineName}`,\r\n                            };\r\n                        }\r\n                        return {\r\n                            output: `Incorrect Password`,\r\n                        };\r\n                    },\r\n                },\r\n            }),\r\n        }, {\r\n            session: `admin`, path: `/`, name: `bitcoin_wallet_backup.dat`,\r\n            content: `E9873D79C6D87DC0FB6A57786389F4453213303DA61F20BD67FC233AA33262`,\r\n        }, {\r\n            session: `admin`, path: `/`, name: `keepass.kdb`,\r\n            content: `${randomBinary(1024)}`,\r\n        },// \r\n\r\n        zork,\r\n        dorkFile,\r\n    ];\r\n\r\n    const standardPrompt = (): ConCommandResult => {\r\n        return { prompt: `${sessions[state.session].machineName}${state.directory.replace(/\\/$/g, ``)}>` };\r\n    };\r\n\r\n    const processAction = async (action: ConAction): Promise<ConCommandResult> => {\r\n        if (!action) {\r\n            state = { ...state, activeAction: null };\r\n            return standardPrompt();\r\n        }\r\n        if (action.query) {\r\n            state = { ...state, activeAction: action };\r\n            return { ...action, prompt: action.query.prompt };\r\n        }\r\n\r\n        state = { ...state, activeAction: null };\r\n        return {\r\n            ...standardPrompt(),\r\n            ...action,\r\n        };\r\n    };\r\n\r\n    const onCommand = async (commandRaw: string, onMessage: (message: ConCommandResult) => void): Promise<ConCommandResult> => {\r\n        const commandLower = commandRaw.toLowerCase().trim();\r\n        const iSpace = commandLower.indexOf(` `);\r\n        const command = iSpace >= 0 ? commandLower.slice(0, iSpace).trim() : commandLower.trim();\r\n        const target = iSpace >= 0 ? commandLower.slice(iSpace).trim() : ``;\r\n        const input: ConInput = { raw: commandRaw, lower: commandLower, command, target, onMessage };\r\n\r\n        // Process any active actions\r\n        if (state.activeAction) {\r\n            const a = state.activeAction;\r\n            if (a.query) {\r\n                const action = await a.query.respond(input);\r\n                return await processAction(action);\r\n            }\r\n        }\r\n\r\n        // Process OS level commands\r\n        if (command === `exit`) {\r\n            if (exitSession()) {\r\n                return standardPrompt();\r\n            }\r\n            return { quit: true };\r\n        }\r\n\r\n        const dirFiles = files.filter(x => x.session === state.session && x.path === state.directory);\r\n\r\n        if (command === `dir` || command === `ls`) {\r\n            return {\r\n                ...standardPrompt(),\r\n                output: dirFiles.map(x => x.name).join(`\\n`),\r\n            };\r\n        }\r\n\r\n        if (command.startsWith(`open`)\r\n            || command.startsWith(`read`)\r\n            || command.startsWith(`cat`)\r\n            || command.startsWith(`echo`)\r\n        ) {\r\n            const file = target && dirFiles.find(x => x.name.toLowerCase().startsWith(target));\r\n            if (file) {\r\n                return {\r\n                    ...standardPrompt(),\r\n                    output: file.content,\r\n                };\r\n            }\r\n\r\n            return {\r\n                ...standardPrompt(),\r\n                output: `${command}: ${target}: No such file or directory`,\r\n            };\r\n        }\r\n\r\n        const file = dirFiles.find(x => x.name.toLowerCase() === command);\r\n        if (file && file.execute) {\r\n            const action = await file.execute(onMessage);\r\n            return processAction(action);\r\n        }\r\n\r\n        return {\r\n            ...standardPrompt(),\r\n            output: `${command}: command not found`,\r\n        };\r\n    };\r\n\r\n    return {\r\n        onCommand,\r\n    };\r\n\r\n};\r\n"],"sourceRoot":""}