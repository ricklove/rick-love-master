{"version":3,"sources":["webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/core-js/modules/es.promise.finally.js","webpack:///D:/Projects/rick-love-master/code/art/rando.ts","webpack:///D:/Projects/rick-love-master/code/art/circles.tsx","webpack:///D:/Projects/rick-love-master/code/art/layers-of-the-onions-soul.tsx","webpack:///D:/Projects/rick-love-master/code/art/p5-viewer.tsx","webpack:///D:/Projects/rick-love-master/code/art/art-gallery.tsx","webpack:///D:/Projects/rick-love-master/node_modules/gatsby/node_modules/core-js/modules/es.math.hypot.js"],"names":["$","IS_PURE","NativePromise","fails","getBuiltIn","speciesConstructor","promiseResolve","redefine","target","proto","real","forced","prototype","call","then","onFinally","C","this","isFunction","x","e","createRandomGenerator","hash","a","seed","str","h","length","i","Math","imul","charCodeAt","xmur3","random","t","renderArt_circles","hostElement","floor","b","c","cr","cg","cb","ca","p5","s","setup","createCanvas","draw","background","color","noFill","stroke","j","circle","translate","rotate","renderArt_layersOfTheOnionsSoul","d","fill","P5Viewer","props","hostElementRef","useRef","useEffect","current","art","renderArt","style","width","height","ref","ArtGallery","artItems","title","useState","setArt","setHash","View_Panel","View_Form","map","Fragment","key","paddingBottom","Button_FormAction","onPress","View_FieldRow","Text_FormTitle","Input_Text","value","onChange","$hypot","hypot","abs","sqrt","stat","Infinity","NaN","value1","value2","arg","div","sum","aLen","arguments","larg"],"mappings":"yHACA,IAAIA,EAAI,EAAQ,QACZC,EAAU,EAAQ,QAClBC,EAAgB,EAAQ,QACxBC,EAAQ,EAAQ,QAChBC,EAAa,EAAQ,QACrBC,EAAqB,EAAQ,QAC7BC,EAAiB,EAAQ,QACzBC,EAAW,EAAQ,QASvBP,EAAE,CAAEQ,OAAQ,UAAWC,OAAO,EAAMC,MAAM,EAAMC,SAN5BT,GAAiBC,GAAM,WACzCD,EAAcU,UAAmB,QAAEC,KAAK,CAAEC,KAAM,eAA+B,mBAKV,CACrE,QAAW,SAAUC,GACnB,IAAIC,EAAIX,EAAmBY,KAAMb,EAAW,YACxCc,EAAiC,mBAAbH,EACxB,OAAOE,KAAKH,KACVI,EAAa,SAAUC,GACrB,OAAOb,EAAeU,EAAGD,KAAaD,MAAK,WAAc,OAAOK,MAC9DJ,EACJG,EAAa,SAAUE,GACrB,OAAOd,EAAeU,EAAGD,KAAaD,MAAK,WAAc,MAAMM,MAC7DL,MAMLd,GAAmC,mBAAjBC,GAAgCA,EAAcU,UAAmB,SACtFL,EAASL,EAAcU,UAAW,UAAWR,EAAW,WAAWQ,UAAmB,U,8ICJjF,IAAMS,EAAwB,SAACC,GAClC,IAVgBC,EAUVC,EAxBV,SAAeC,GAEX,IADA,IAAIC,EAAI,WAAaD,EAAIE,OAChBC,EAAI,EAAGA,EAAIH,EAAIE,OAAQC,IAE5BF,GADAA,EAAIG,KAAKC,KAAKJ,EAAID,EAAIM,WAAWH,GAAI,cAC5B,GAAKF,IAAM,GAGxB,OAAO,WAGH,OAFAA,EAAIG,KAAKC,KAAKJ,EAAIA,IAAM,GAAI,YAC5BA,EAAIG,KAAKC,KAAKJ,EAAIA,IAAM,GAAI,aACpBA,GAAKA,IAAM,MAAQ,GAclBM,CAAMV,EAANU,GACb,MAAO,CACHC,QAZYV,EAYOC,EAXhB,WACH,IAAIU,EAAIX,GAAK,WAGb,OAFAW,EAAIL,KAAKC,KAAKI,EAAIA,IAAM,GAAQ,EAAJA,MAC5BA,GAAKA,EAAIL,KAAKC,KAAKI,EAAIA,IAAM,EAAO,GAAJA,IACnBA,IAAM,MAAQ,GAAK,eCjB3BC,EAAoB,SAACC,EAA0Bd,QAA8B,IAA9BA,MAA8B,wBAG9EW,EAAWZ,EAAsBC,GAAjCW,OAH8E,EAIlE,CAAEV,EAAG,EAAIM,KAAKQ,MAAM,GAAKJ,KAAWK,EAAG,EAAIT,KAAKQ,MAAM,IAAMJ,KAAWM,EAAG,EAAIV,KAAKQ,MAAM,IAAMJ,MAA3GV,EAJ8E,EAI9EA,EAAGe,EAJ2E,EAI3EA,EAAGC,EAJwE,EAIxEA,EAJwE,EAK3D,CAAEC,GAAIX,KAAKQ,MAAM,GAAK,IAAMJ,KAAWQ,GAAIZ,KAAKQ,MAAM,GAAK,IAAMJ,KAAWS,GAAIb,KAAKQ,MAAM,GAAK,IAAMJ,KAAWU,GAAId,KAAKQ,MAAM,GAAK,GAAKJ,MAA7JO,EAL8E,EAK9EA,GAAIC,EAL0E,EAK1EA,GAAIC,EALsE,EAKtEA,GAAIC,EALkE,EAKlEA,GAEpB,IAAIC,KAAG,SAACC,GACJA,EAAEC,MAAQ,WACND,EAAEE,aAAa,IAAK,MAExBF,EAAEG,KAAO,WACLH,EAAEI,WAAW,GACb,IAAK,IAAIrB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMsB,EAAQL,EAAEK,MAAOV,EAAKZ,EAAK,IAAMa,EAAKb,EAAK,IAAMc,EAAKd,EAAK,IAAKe,GACtEE,EAAEM,SACFN,EAAEO,OAAOF,GACT,IAAK,IAAIG,EAAI,EAAGA,EAAI,GAAIA,IACpBR,EAAES,OAAO,IAAM/B,EAAI,EAAI8B,EAAI9B,EAAG,IAAMe,EAAI,EAAIe,EAAIf,EAAG,IAAW,EAAJV,EAASW,GAEvEM,EAAEU,UAAU,IAAK,KACjBV,EAAEW,QAAQjC,EAAIe,EAAIC,GAAK,GACvBM,EAAEU,WAAW,KAAM,SAG5BnB,ICzBMqB,EAAkC,SAACrB,EAA0Bd,QAA8B,IAA9BA,MAA8B,wBAG5FW,EAAWZ,EAAsBC,GAAjCW,OAH4F,EAI1E,CAAEV,EAAG,EAAIM,KAAKQ,MAAM,GAAKJ,KAAWK,EAAG,EAAIT,KAAKQ,MAAM,GAAKJ,KAAWM,EAAG,EAAIV,KAAKQ,MAAM,GAAKJ,KAAWyB,EAAG,EAAI7B,KAAKQ,MAAM,EAAIJ,KAAWb,EAAG,GAAKS,KAAKQ,MAAM,IAAMJ,MAApLV,EAJ4F,EAI5FA,EAAGe,EAJyF,EAIzFA,EAAGC,EAJsF,EAItFA,EAAGmB,EAJmF,EAInFA,EAAGtC,EAJgF,EAIhFA,EAJgF,EAM7E,CAAEoB,GAAIX,KAAKQ,MAAM,GAAK,IAAMJ,KAAWQ,GAAIZ,KAAKQ,MAAM,GAAK,IAAMJ,KAAWS,GAAIb,KAAKQ,MAAM,GAAK,IAAMJ,MAArHO,EAN4F,EAM5FA,GAAIC,EANwF,EAMxFA,GAAIC,EANoF,EAMpFA,GAGhB,IAAIE,KAAG,SAACC,GACJA,EAAEC,MAAQ,WACND,EAAEE,aAAa,IAAK,MAExBF,EAAEG,KAAO,WACLH,EAAEI,WAAW,GACb,IAAK,IAAIrB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMsB,EAAQL,EAAEK,MAAMV,EAAIC,GAAM,EAAIb,EAAIL,GAAK,IAAKmB,EAAKd,GACvDiB,EAAEc,KAAKT,GACPL,EAAES,OAAO,IAAW,EAAJ1B,EAASU,EAAIf,EAAG,IAAMK,EAAIW,EAAI,GAAKD,GAAI,IAAMV,GAAKR,GAClEyB,EAAEW,OAAOE,OAGlBtB,IC7BMwB,EAAW,SAACC,GAErB,IAAMC,EAAiBC,iBAAO,MAQ9B,OANAC,qBAAU,WACDF,EAAeG,SAEpBJ,EAAMK,IAAIC,UAAUL,EAAeG,WACpC,CAACH,EAAeG,UAGf,oCACI,yBAAKG,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKrB,WAAY,WAAasB,IAAKT,MCRpEU,EAAa,SAACX,GACvB,IAAMY,EAAW,CACb,CAAEC,MAAO,UAAWP,UAAWhC,GAC/B,CAAEuC,MAAO,6BAA8BP,UAAWV,IAHjB,EAMfkB,mBAASF,EAAS,IAAjCP,EAN8B,KAMzBU,EANyB,OAObD,mBAAS,QAA1BrD,EAP8B,KAOxBuD,EAPwB,KASrC,OACI,kBAAC,IAAEC,WAAH,KACI,kBAAC,IAAEC,UAAH,KACKN,EAASO,KAAI,SAAA7D,GAAC,OACX,kBAAC,IAAM8D,SAAP,CAAgBC,IAAK/D,EAAEuD,OACnB,yBAAKN,MAAO,CAAEe,cAAe,IACzB,kBAAC,IAAEC,kBAAH,CAAqBC,QAAS,kBAAMT,EAAOzD,KAAKA,EAAEuD,YAI9D,kBAAC,IAAEY,cAAH,KACI,kBAAC,IAAEC,eAAH,sBACA,kBAAC,IAAEC,WAAH,CAAcC,MAAOnE,EAAMoE,SAAUb,MAI7C,kBAAC,EAAD,CAAUK,IAAKhB,EAAIQ,MAAQpD,EAAM4C,IAAK,CAAEC,UAAW,SAAC/B,GAAD,OAAiB8B,EAAIC,UAAU/B,EAAad,U,qBC/B3G,IAAItB,EAAI,EAAQ,QAEZ2F,EAAS9D,KAAK+D,MACdC,EAAMhE,KAAKgE,IACXC,EAAOjE,KAAKiE,KAQhB9F,EAAE,CAAEQ,OAAQ,OAAQuF,MAAM,EAAMpF,SAJlBgF,GAAUA,EAAOK,IAAUC,OAASD,KAID,CAC/CJ,MAAO,SAAeM,EAAQC,GAM5B,IALA,IAIIC,EAAKC,EAJLC,EAAM,EACN1E,EAAI,EACJ2E,EAAOC,UAAU7E,OACjB8E,EAAO,EAEJ7E,EAAI2E,GAELE,GADJL,EAAMP,EAAIW,UAAU5E,QAGlB0E,EAAMA,GADND,EAAMI,EAAOL,GACKC,EAAM,EACxBI,EAAOL,GAGPE,GAFSF,EAAM,GACfC,EAAMD,EAAMK,GACCJ,EACDD,EAEhB,OAAOK,IAAST,IAAWA,IAAWS,EAAOX,EAAKQ","file":"8-a440310e3f8e738b596e.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// patch native Promise.prototype for native async functions\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}\n","/* eslint-disable no-return-assign */\r\n/* eslint-disable no-multi-assign */\r\n/* eslint-disable @typescript-eslint/no-unused-expressions */\r\n/* eslint-disable no-bitwise */\r\n\r\n// FROM: https://stackoverflow.com/a/47593316/567524\r\n\r\nfunction xmur3(str: string) {\r\n    let h = 1779033703 ^ str.length;\r\n    for (let i = 0; i < str.length; i++) {\r\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353);\r\n        h = h << 13 | h >>> 19;\r\n    }\r\n\r\n    return () => {\r\n        h = Math.imul(h ^ h >>> 16, 2246822507);\r\n        h = Math.imul(h ^ h >>> 13, 3266489909);\r\n        return (h ^= h >>> 16) >>> 0;\r\n    };\r\n}\r\n\r\nfunction mulberry32(a: number) {\r\n    return () => {\r\n        let t = a += 0x6D2B79F5;\r\n        t = Math.imul(t ^ t >>> 15, t | 1);\r\n        t ^= t + Math.imul(t ^ t >>> 7, t | 61);\r\n        return ((t ^ t >>> 14) >>> 0) / 4294967296;\r\n    };\r\n}\r\n\r\nexport const createRandomGenerator = (hash: string) => {\r\n    const seed = xmur3(hash)();\r\n    return {\r\n        random: mulberry32(seed),\r\n    };\r\n};\r\n","/* eslint-disable new-cap */\r\n/* eslint-disable no-new */\r\nimport p5 from 'p5';\r\nimport { createRandomGenerator } from './rando';\r\n\r\n/** Title: Layers of the Onion's Soul\r\n * Description: This represents the complexity of an onion's soul - which has many layers, like a human. \r\n * Artist: Rick Love & Lydia Love who called me weirdo as inspiration, and mentioned a circle, some squares, a tetrahedron, Minecraft blocks, and then said she meant cubes and spheres.\r\n*/\r\nexport const renderArt_circles = (hostElement: HTMLElement, hash = `This is my hash!`) => {\r\n    // const { a, b, c } = { a: 57, b: 23, c: 15 };\r\n\r\n    const { random } = createRandomGenerator(hash);\r\n    const { a, b, c } = { a: 1 + Math.floor(57 * random()), b: 1 + Math.floor(213 * random()), c: 1 + Math.floor(115 * random()) };\r\n    const { cr, cg, cb, ca } = { cr: Math.floor(25 + 230 * random()), cg: Math.floor(25 + 230 * random()), cb: Math.floor(25 + 230 * random()), ca: Math.floor(25 + 25 * random()) };\r\n\r\n    new p5((s: p5) => {\r\n        s.setup = () => {\r\n            s.createCanvas(400, 400);\r\n        };\r\n        s.draw = () => {\r\n            s.background(0);\r\n            for (let i = 0; i < 10; i++) {\r\n                const color = s.color((cr * i) % 255, (cg * i) % 255, (cb * i) % 255, ca);\r\n                s.noFill();\r\n                s.stroke(color);\r\n                for (let j = 0; j < 36; j++) {\r\n                    s.circle(200 - a / 2 + j % a, 200 - b / 2 + j % b, 270 - (i * 5) % c);\r\n                }\r\n                s.translate(200, 200);\r\n                s.rotate((a + b + c) % 2);\r\n                s.translate(-200, -200);\r\n            }\r\n        };\r\n    }, hostElement);\r\n};\r\n","/* eslint-disable new-cap */\r\n/* eslint-disable no-new */\r\nimport p5 from 'p5';\r\nimport { createRandomGenerator } from './rando';\r\n\r\n/** Title: Layers of the Onion's Soul\r\n * Description: This represents the complexity of an onion's soul - which has many layers, like a human. \r\n * Artist: Rick Love & Lydia Love who called me weirdo as inspiration, and mentioned a circle, some squares, a tetrahedron, Minecraft blocks, and then said she meant cubes and spheres.\r\n*/\r\nexport const renderArt_layersOfTheOnionsSoul = (hostElement: HTMLElement, hash = `This is my hash!`) => {\r\n    // const { a, b, c } = { a: 3, b: 7, c: 15 };\r\n\r\n    const { random } = createRandomGenerator(hash);\r\n    const { a, b, c, d, e } = { a: 1 + Math.floor(17 * random()), b: 1 + Math.floor(57 * random()), c: 1 + Math.floor(35 * random()), d: 0 + Math.floor(5 * random()), e: 20 + Math.floor(255 * random()) };\r\n    // const { cr, cg, cb } = { cr: 207, cg: 175, cb: 65 };\r\n    const { cr, cg, cb } = { cr: Math.floor(25 + 230 * random()), cg: Math.floor(25 + 230 * random()), cb: Math.floor(25 + 230 * random()) };\r\n\r\n\r\n    new p5((s: p5) => {\r\n        s.setup = () => {\r\n            s.createCanvas(400, 400);\r\n        };\r\n        s.draw = () => {\r\n            s.background(0);\r\n            for (let i = 0; i < 35; i++) {\r\n                const color = s.color(cr, cg * (1 + i * a) % 255, cb + i);\r\n                s.fill(color);\r\n                s.circle(150 + (i * 7) % b - a, 250 + i - c % 35 + b, (270 - i) % e);\r\n                s.rotate(d);\r\n            }\r\n        };\r\n    }, hostElement);\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nexport const P5Viewer = (props: { art: { renderArt: (hostElement: HTMLDivElement) => void } }) => {\r\n\r\n    const hostElementRef = useRef(null as null | HTMLDivElement);\r\n\r\n    useEffect(() => {\r\n        if (!hostElementRef.current) { return; }\r\n\r\n        props.art.renderArt(hostElementRef.current);\r\n    }, [hostElementRef.current]);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ width: 400, height: 400, background: `#888888` }} ref={hostElementRef} />\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { C } from 'controls-react';\r\nimport { renderArt_circles } from './circles';\r\nimport { renderArt_layersOfTheOnionsSoul } from './layers-of-the-onions-soul';\r\nimport { P5Viewer } from './p5-viewer';\r\n\r\nexport const ArtGallery = (props: {}) => {\r\n    const artItems = [\r\n        { title: `Circles`, renderArt: renderArt_circles },\r\n        { title: `Layers of the Onion's Soul`, renderArt: renderArt_layersOfTheOnionsSoul },\r\n    ];\r\n\r\n    const [art, setArt] = useState(artItems[0]);\r\n    const [hash, setHash] = useState(`hash`);\r\n\r\n    return (\r\n        <C.View_Panel>\r\n            <C.View_Form>\r\n                {artItems.map(x => (\r\n                    <React.Fragment key={x.title}>\r\n                        <div style={{ paddingBottom: 4 }}>\r\n                            <C.Button_FormAction onPress={() => setArt(x)}>{x.title}</C.Button_FormAction>\r\n                        </div>\r\n                    </React.Fragment>\r\n                ))}\r\n                <C.View_FieldRow>\r\n                    <C.Text_FormTitle>Enter a hash:</C.Text_FormTitle>\r\n                    <C.Input_Text value={hash} onChange={setHash} />\r\n                </C.View_FieldRow>\r\n            </C.View_Form>\r\n\r\n            <P5Viewer key={art.title + hash} art={{ renderArt: (hostElement) => art.renderArt(hostElement, hash) }} />\r\n        </C.View_Panel>\r\n    );\r\n};\r\n","var $ = require('../internals/export');\n\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt;\n\n// Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\n\n// `Math.hypot` method\n// https://tc39.github.io/ecma262/#sec-math.hypot\n$({ target: 'Math', stat: true, forced: BUGGY }, {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});\n"],"sourceRoot":""}