{"version":3,"sources":["../src/vr-test-03-bare.tsx","../src/bare/00-bare-three-vr.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport React, { useEffect } from 'react';\r\n// import { createBareVRScene } from './bare/01-bare-vr';\r\nimport { createScene } from './bare/00-bare-three-vr';\r\n\r\nexport const VrTestGame = () => {\r\n  useEffect(() => {\r\n    const scene = createScene();\r\n    scene.animate();\r\n    return () => scene.dispose();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: `relative` }}>\r\n        <div style={{ position: `absolute`, bottom: 0, top: 0, left: 0, right: 0, background: `#000000` }} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import * as THREE from 'three';\r\nimport { MeshLambertMaterial } from 'three';\r\nimport { BoxLineGeometry, VRButton, XRControllerModelFactory } from 'three-stdlib';\r\n\r\nexport const createScene = () => {\r\n  const clock = new THREE.Clock();\r\n  const tempMatrix = new THREE.Matrix4();\r\n\r\n  function init() {\r\n    const container = document.createElement(`div`);\r\n    document.body.appendChild(container);\r\n\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x505050);\r\n\r\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 10);\r\n    camera.position.set(0, 1.6, 3);\r\n    scene.add(camera);\r\n\r\n    const room = new THREE.LineSegments(\r\n      new BoxLineGeometry(6, 6, 6, 10, 10, 10).translate(0, 3, 0),\r\n      new THREE.LineBasicMaterial({ color: 0x808080 }),\r\n    );\r\n    scene.add(room);\r\n\r\n    scene.add(new THREE.HemisphereLight(0x606060, 0x404040));\r\n\r\n    const light = new THREE.DirectionalLight(0xffffff);\r\n    light.position.set(1, 1, 1).normalize();\r\n    scene.add(light);\r\n\r\n    const geometry = new THREE.BoxGeometry(0.15, 0.15, 0.15);\r\n\r\n    for (let i = 0; i < 200; i++) {\r\n      const object = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff }));\r\n\r\n      object.position.x = Math.random() * 4 - 2;\r\n      object.position.y = Math.random() * 4;\r\n      object.position.z = Math.random() * 4 - 2;\r\n\r\n      object.rotation.x = Math.random() * 2 * Math.PI;\r\n      object.rotation.y = Math.random() * 2 * Math.PI;\r\n      object.rotation.z = Math.random() * 2 * Math.PI;\r\n\r\n      object.scale.x = Math.random() + 0.5;\r\n      object.scale.y = Math.random() + 0.5;\r\n      object.scale.z = Math.random() + 0.5;\r\n\r\n      object.userData.velocity = new THREE.Vector3();\r\n      object.userData.velocity.x = Math.random() * 0.01 - 0.005;\r\n      object.userData.velocity.y = Math.random() * 0.01 - 0.005;\r\n      object.userData.velocity.z = Math.random() * 0.01 - 0.005;\r\n\r\n      room.add(object);\r\n    }\r\n\r\n    const raycaster = new THREE.Raycaster();\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.outputEncoding = THREE.sRGBEncoding;\r\n    renderer.xr.enabled = true;\r\n    container.appendChild(renderer.domElement);\r\n\r\n    //\r\n\r\n    type TController = typeof controller;\r\n    function onSelectStart(this: TController) {\r\n      this.userData.isSelecting = true;\r\n    }\r\n\r\n    function onSelectEnd(this: TController) {\r\n      this.userData.isSelecting = false;\r\n    }\r\n\r\n    const controller = renderer.xr.getController(0);\r\n    controller.addEventListener(`selectstart`, onSelectStart);\r\n    controller.addEventListener(`selectend`, onSelectEnd);\r\n    // eslint-disable-next-line @typescript-eslint/space-before-function-paren\r\n    controller.addEventListener(`connected`, function (this: TController, event) {\r\n      this.add(buildController(event.data));\r\n    });\r\n    // eslint-disable-next-line @typescript-eslint/space-before-function-paren\r\n    controller.addEventListener(`disconnected`, function (this: TController) {\r\n      this.remove(this.children[0]);\r\n    });\r\n    scene.add(controller);\r\n\r\n    const controllerModelFactory = new XRControllerModelFactory();\r\n\r\n    const controllerGrip = renderer.xr.getControllerGrip(0);\r\n    controllerGrip.add(controllerModelFactory.createControllerModel(controllerGrip));\r\n    scene.add(controllerGrip);\r\n\r\n    window.addEventListener(`resize`, onWindowResize);\r\n\r\n    //\r\n\r\n    const button = VRButton.createButton(renderer);\r\n    document.body.appendChild(button);\r\n\r\n    return { camera, scene, renderer, controller, room, raycaster, container, button };\r\n  }\r\n\r\n  const { camera, scene, renderer, controller, room, raycaster, container, button } = init();\r\n\r\n  function buildController(data: { targetRayMode: `tracked-pointer` | `gaze` }) {\r\n    let geometry, material;\r\n\r\n    switch (data.targetRayMode) {\r\n      case `tracked-pointer`:\r\n        geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute(`position`, new THREE.Float32BufferAttribute([0, 0, 0, 0, 0, -1], 3));\r\n        geometry.setAttribute(`color`, new THREE.Float32BufferAttribute([0.5, 0.5, 0.5, 0, 0, 0], 3));\r\n\r\n        material = new THREE.LineBasicMaterial({ vertexColors: true, blending: THREE.AdditiveBlending });\r\n\r\n        return new THREE.Line(geometry, material);\r\n\r\n      case `gaze`:\r\n        geometry = new THREE.RingGeometry(0.02, 0.04, 32).translate(0, 0, -1);\r\n        material = new THREE.MeshBasicMaterial({ opacity: 0.5, transparent: true });\r\n        return new THREE.Mesh(geometry, material);\r\n    }\r\n  }\r\n\r\n  function onWindowResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n  }\r\n\r\n  //\r\n\r\n  function animate() {\r\n    renderer.setAnimationLoop(render);\r\n  }\r\n\r\n  function render() {\r\n    const delta = clock.getDelta() * 60;\r\n\r\n    if (controller.userData.isSelecting === true) {\r\n      const cube = room.children[0];\r\n      room.remove(cube);\r\n\r\n      cube.position.copy(controller.position);\r\n      cube.userData.velocity.x = (Math.random() - 0.5) * 0.02 * delta;\r\n      cube.userData.velocity.y = (Math.random() - 0.5) * 0.02 * delta;\r\n      cube.userData.velocity.z = (Math.random() * 0.01 - 0.05) * delta;\r\n      cube.userData.velocity.applyQuaternion(controller.quaternion);\r\n      room.add(cube);\r\n    }\r\n\r\n    // find intersections\r\n\r\n    tempMatrix.identity().extractRotation(controller.matrixWorld);\r\n\r\n    raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\r\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\r\n\r\n    const intersects = raycaster.intersectObjects(room.children, false);\r\n\r\n    let INTERSECTED = undefined as\r\n      | undefined\r\n      | (Omit<THREE.Mesh, `material`> & { material: MeshLambertMaterial; currentHex: number });\r\n    if (intersects.length > 0) {\r\n      if (INTERSECTED !== intersects[0].object) {\r\n        if (INTERSECTED) INTERSECTED.material.emissive.setHex(INTERSECTED.currentHex);\r\n\r\n        INTERSECTED = intersects[0].object as NonNullable<typeof INTERSECTED>;\r\n        INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex();\r\n        INTERSECTED.material.emissive.setHex(0xff0000);\r\n      }\r\n    } else {\r\n      if (INTERSECTED) INTERSECTED.material.emissive.setHex(INTERSECTED.currentHex);\r\n\r\n      INTERSECTED = undefined;\r\n    }\r\n\r\n    // Keep cubes inside room\r\n\r\n    for (let i = 0; i < room.children.length; i++) {\r\n      const cube = room.children[i];\r\n\r\n      cube.userData.velocity.multiplyScalar(1 - 0.001 * delta);\r\n\r\n      cube.position.add(cube.userData.velocity);\r\n\r\n      if (cube.position.x < -3 || cube.position.x > 3) {\r\n        cube.position.x = THREE.MathUtils.clamp(cube.position.x, -3, 3);\r\n        cube.userData.velocity.x = -cube.userData.velocity.x;\r\n      }\r\n\r\n      if (cube.position.y < 0 || cube.position.y > 6) {\r\n        cube.position.y = THREE.MathUtils.clamp(cube.position.y, 0, 6);\r\n        cube.userData.velocity.y = -cube.userData.velocity.y;\r\n      }\r\n\r\n      if (cube.position.z < -3 || cube.position.z > 3) {\r\n        cube.position.z = THREE.MathUtils.clamp(cube.position.z, -3, 3);\r\n        cube.userData.velocity.z = -cube.userData.velocity.z;\r\n      }\r\n\r\n      cube.rotation.x += cube.userData.velocity.x * 2 * delta;\r\n      cube.rotation.y += cube.userData.velocity.y * 2 * delta;\r\n      cube.rotation.z += cube.userData.velocity.z * 2 * delta;\r\n    }\r\n\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  return {\r\n    animate,\r\n    dispose: () => {\r\n      renderer.setAnimationLoop(null);\r\n      window.removeEventListener(`resize`, onWindowResize);\r\n      document.body.removeChild(button);\r\n      document.body.removeChild(container);\r\n      renderer.dispose();\r\n      scene.clear();\r\n    },\r\n  };\r\n};\r\n"],"mappings":"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","names":["container","scene","camera","room","raycaster","renderer","controller","button"]}