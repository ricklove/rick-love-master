/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExperimentsContract2,
  ExperimentsContract2Interface,
} from "../ExperimentsContract2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "selectBit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "selectBreed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "sequentialAccessA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eab806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806352090bb914610046578063909fd6b31461006b578063d72a0b431461007e575b600080fd5b610059610054366004610e4c565b610091565b60405190815260200160405180910390f35b610059610079366004610e4c565b61036a565b61005961008c366004610e4c565b610900565b6000816100dd5760405162461bcd60e51b81526020600482015260156024820152747265715f73657175656e7469616c4163636573734160581b60448201526064015b60405180910390fd5b600060405160108101516011820151601283015160138401516014850151601586015160168701516017880151601889015160198a015160a08b0151995060a18b0151985060a28b0151975060a38b0151965060a48b0151955060a58b0151945060a68b0151935060a78b0151925060a88b0151915060a98b0151905060b08b01518a01995060b18b01518901985060b28b01518801975060b38b01518701965060b48b01518601955060b58b01518501945060b68b01518401935060b78b01518301925060b88b01518201915060b98b01518101905060c08a01995060c18901985060c28801975060c38701965060c48601955060c58501945060c68401935060c78301925060c88201915060c98101905060f060e08c01510160d08c015260f160e18c01510160d18c015260f260e28c01510160d28c015260f360e38c01510160d38c015260f460e48c01510160d48c015260f560e58c01510160d58c015260f660e68c01510160d68c015260f760e78c01510160d78c015260f860e88c01510160d88c015260f960e98c01510160d98c015261ff008b0161ff00810160f08d015160e08301510160d082015260f18d015160e18301510160d182015260f28d015160e28301510160d282015260f38d015160e38301510160d382015260f48d015160e48301510160d482015260f58d015160e58301510160d582015260f68d015160e68301510160d682015260f78d015160e78301510160d782015260f88d015160e88301510160d882015260f98d015160e98301510160d98201525050869a50898b019a50888b019a50878b019a50868b019a50858b019a50848b019a50838b019a50828b019a50818b019a50808b019a50505050505050505050508091505080915050919050565b6000816103a75760405162461bcd60e51b815260206004820152600b60248201526a1cd95b1958dd109c99595960aa1b60448201526064016100d4565b60405180610401565b6000600f821680840660010190508260041c925060005b600d8110156103f857600284821c06156103e2576001820391505b816103f05791506103fb9050565b6001016103c7565b50505b92915050565b61040c6005826103b0565b8201915061041b6007826103b0565b8201915061042a600b826103b0565b82019150610439600d826103b0565b82019150610483565b6000826001015b60005b600d81101561047d57600284821c0615610467576001820391505b816104755791506103fb9050565b60010161044c565b50610449565b61048e600582610442565b8201915061049d600782610442565b820191506104ac600b82610442565b820191506104bb600d82610442565b820191506104d7565b6008600160ff80841690940601021c1690565b6104e26005826104c4565b820191506104f16007826104c4565b82019150610500600b826104c4565b8201915061050f600d826104c4565b8201915061060b565b6000603382101561052b575060006103fb565b604d82101561053c575060016103fb565b60b182101561057557600383068015610561576001811461056b5760049150506103fb565b60029150506103fb565b60039150506103fb565b60c5821015610586575060056103fb565b60d6821015610597575060066103fb565b60e08210156105a8575060076103fb565b60e58210156105b95750600b6103fb565b60ea8210156105ca5750600c6103fb565b60ef8210156105db5750600d6103fb565b60fb821015610602576001831680156105f85760099150506103fb565b60089150506103fb565b50600a92915050565b6106158182610518565b82019150610738565b6000603382101561063e57506d032104019876543210a654040000919050565b604d821015610657575068210311cba046020001919050565b60b182101561067657506e2103432398765432197654321700f2919050565b60c582101561069057506931518764106654040003919050565b60d68210156106a85750670210361c12610004919050565b60e08210156106c05750672103718026020005919050565b60e58210156106d75750662103b10101bf06919050565b60ea8210156106ef5750670102c161832c01f7919050565b60ef8210156107075750672103d161832d11f8919050565b60fb82101561072557506d0419829876543219865432170079919050565b506b51a19654326876543218007a919050565b6107418161061e565b820191506108e7565b6000806033831015610764575060009050600a84066108df565b604d83101561078b5760019150600485068060090191508061078557600091505b506108df565b60b18310156107cb576003840680156107af57600181146107b857600492506107bd565b600292506107bd565b600392505b5050600160098506016108df565b60c583101561080057600591506006850680600301915060038110156107f057600491505b60028110156107855790506108df565b60d683101561082a576006915060018516801561082057600c9150610785565b60019150506108df565b60e0831015610854576007915060018516801561084a5760089150610785565b60009150506108df565b60e58310156108695750600b905060006108df565b60ea83101561087e5750600c905060066108df565b60ef8310156108935750600d905060066108df565b60fb8310156108c1576001841680156108af57600992506107bd565b600892505050600160098506016108df565b600a91506006850680600201915060048111156108dd57600991505b505b935093915050565b6108f4600760058361074a565b92019091019392505050565b60008161093b5760405162461bcd60e51b81526020600482015260096024820152681cd95b1958dd109a5d60ba1b60448201526064016100d4565b60405180610e3b565b60008160001c60ff168260081c60ff168360101c60ff168460181c60ff168560301c60ff1660338510156109d957600195506003841660ff60201b198115610993579687176003820160201b01965b5050600a830660ff60281b1981156109b057968717602882901b01965b50506003811660ff60381b1981156109cd57968717603882901b01965b50505050505050919050565b604d851015610a52576801000000000001000195506001841660ff60201b198115610a0b579687176005820160201b01965b50506003831660ff60281b198115610a2a579687176009820160281b01965b50506003810660ff60381b1981156109cd57968717603882901b019650505050505050919050565b60b1851015610ae9576802ff0000010102000195506007840660ff60201b198115610a84579687176001820160201b01965b50506009830660ff60281b198115610aa3579687176001820160281b01965b50506003820660ff60301b198115610a2a579687176002820160301b019650506003810660ff60381b1981156109cd57968717603882901b019650505050505050919050565b60c5851015610b6f576803000000000005030095506003841660ff60201b198115610b1b579687176003820160201b01965b50506006830660ff60281b198115610b3857968717602882901b01965b6001821115610b4e579687176002820160281b01965b60028211156109cd579687176003820160281b019650505050505050919050565b60d6851015610bc8576804000000060106000195506001831660ff60281b198115610a2a57968717600b820160281b019650506003810660ff60381b1981156109cd57968717603882901b019650505050505050919050565b60e0851015610c40576805000000000007000195506001841660ff60201b198115610bfa579687176005820160201b01965b50506001831660ff60281b198115610a2a579687176007820160281b019650506003810660ff60381b1981156109cd57968717603882901b019650505050505050919050565b60e5851015610c7b576806000f0b00000b000195506003810660ff60381b1981156109cd57968717603882901b019650505050505050919050565b60ea851015610cd5576807ff100c03060c000195506001841660ff60201b198115610cad579687176007820160201b01965b50506001811660ff60381b1981156109cd57968717603882901b019650505050505050919050565b60ef851015610d2e576808ff110d03060d000195506001841660ff60201b198115610a2a579687176007820160201b019650506003810660ff60381b1981156109cd57968717603882901b019650505050505050919050565b5060fb841015610dc05768097f0000010108040094506007830660ff60201b198115610d61579586176001820160201b01955b6005821115610d77579586176002820160201b01955b50506009820660ff60281b198115610d96579586176001820160281b01955b50506001811660ff60301b198115610db5579586176008820160301b01955b505050505050919050565b50610100831015610e3357680a7f000001020a050093506007821660ff60201b198115610df4579485176001820160201b01945b50506006810660ff60281b198115610e13579485176002820160281b01945b6004821115610e29579485176004820160281b01945b5050505050919050565b505050919050565b610e4481610944565b949350505050565b600060208284031215610e5e57600080fd5b81358015158114610e6e57600080fd5b939250505056fea264697066735822122035b8d957cf6682d691f5efb192efd5619a4f846a495a994d343b683bc844c41e64736f6c63430008070033";

export class ExperimentsContract2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExperimentsContract2> {
    return super.deploy(overrides || {}) as Promise<ExperimentsContract2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExperimentsContract2 {
    return super.attach(address) as ExperimentsContract2;
  }
  connect(signer: Signer): ExperimentsContract2__factory {
    return super.connect(signer) as ExperimentsContract2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExperimentsContract2Interface {
    return new utils.Interface(_abi) as ExperimentsContract2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExperimentsContract2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExperimentsContract2;
  }
}
