/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExperimentsContract2,
  ExperimentsContract2Interface,
} from "../ExperimentsContract2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "sequentialAccessA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101fa806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806352090bb914610030575b600080fd5b61004361003e36600461019b565b610055565b60405190815260200160405180910390f35b6000816100a05760405162461bcd60e51b81526020600482015260156024820152747265715f73657175656e7469616c4163636573734160581b604482015260640160405180910390fd5b60006100b8565b60a380518051600190910190915290565b6100c06100a7565b6100c86100a7565b6100d06100a7565b6100d86100a7565b6100e06100a7565b6100e86100a7565b6100f06100a7565b6100f86100a7565b6101006100a7565b6101086100a7565b6101106100a7565b8a01995061011c6100a7565b890198506101286100a7565b880197506101346100a7565b870196506101406100a7565b8601955061014c6100a7565b850194506101586100a7565b840193506101646100a7565b830192506101706100a7565b8201915061017c6100a7565b0198860197909701959095019093019190910101010101019392505050565b6000602082840312156101ad57600080fd5b813580151581146101bd57600080fd5b939250505056fea2646970667358221220f3f9aca12a084b1d64576b5877d73efeeb39bbc2d93ebd04902f044b1db4e04b64736f6c63430008070033";

export class ExperimentsContract2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExperimentsContract2> {
    return super.deploy(overrides || {}) as Promise<ExperimentsContract2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExperimentsContract2 {
    return super.attach(address) as ExperimentsContract2;
  }
  connect(signer: Signer): ExperimentsContract2__factory {
    return super.connect(signer) as ExperimentsContract2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExperimentsContract2Interface {
    return new utils.Interface(_abi) as ExperimentsContract2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExperimentsContract2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExperimentsContract2;
  }
}
