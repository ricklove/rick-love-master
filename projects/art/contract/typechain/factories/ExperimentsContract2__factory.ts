/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExperimentsContract2,
  ExperimentsContract2Interface,
} from "../ExperimentsContract2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "selectBit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "sequentialAccessA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061078a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806352090bb91461003b578063d72a0b4314610060575b600080fd5b61004e61004936600461072b565b610073565b60405190815260200160405180910390f35b61004e61006e36600461072b565b61034c565b6000816100bf5760405162461bcd60e51b81526020600482015260156024820152747265715f73657175656e7469616c4163636573734160581b60448201526064015b60405180910390fd5b600060405160108101516011820151601283015160138401516014850151601586015160168701516017880151601889015160198a015160a08b0151995060a18b0151985060a28b0151975060a38b0151965060a48b0151955060a58b0151945060a68b0151935060a78b0151925060a88b0151915060a98b0151905060b08b01518a01995060b18b01518901985060b28b01518801975060b38b01518701965060b48b01518601955060b58b01518501945060b68b01518401935060b78b01518301925060b88b01518201915060b98b01518101905060c08a01995060c18901985060c28801975060c38701965060c48601955060c58501945060c68401935060c78301925060c88201915060c98101905060f060e08c01510160d08c015260f160e18c01510160d18c015260f260e28c01510160d28c015260f360e38c01510160d38c015260f460e48c01510160d48c015260f560e58c01510160d58c015260f660e68c01510160d68c015260f760e78c01510160d78c015260f860e88c01510160d88c015260f960e98c01510160d98c015261ff008b0161ff00810160f08d015160e08301510160d082015260f18d015160e18301510160d182015260f28d015160e28301510160d282015260f38d015160e38301510160d382015260f48d015160e48301510160d482015260f58d015160e58301510160d582015260f68d015160e68301510160d682015260f78d015160e78301510160d782015260f88d015160e88301510160d882015260f98d015160e98301510160d98201525050869a50898b019a50888b019a50878b019a50868b019a50858b019a50848b019a50838b019a50828b019a50818b019a50808b019a50505050505050505050508091505080915050919050565b6000816103875760405162461bcd60e51b81526020600482015260096024820152681cd95b1958dd109a5d60ba1b60448201526064016100b6565b604051806103e1565b6000600f821680840660010190508260041c925060005b600d8110156103d857600284821c06156103c2576001820391505b816103d05791506103db9050565b6001016103a7565b50505b92915050565b6103ec600582610390565b820191506103fb600782610390565b8201915061040a600b82610390565b82019150610419600d82610390565b82019150610463565b6000826001015b60005b600d81101561045d57600284821c0615610447576001820391505b816104555791506103db9050565b60010161042c565b50610429565b61046e600582610422565b8201915061047d600782610422565b8201915061048c600b82610422565b8201915061049b600d82610422565b820191506104b7565b6008600160ff80841690940601021c1690565b6104c26005826104a4565b820191506104d16007826104a4565b820191506104e0600b826104a4565b820191506104ef600d826104a4565b820191506105eb565b6000603382101561050b575060006103db565b604d82101561051c575060016103db565b60b182101561055557600383068015610541576001811461054b5760049150506103db565b60029150506103db565b60039150506103db565b60c5821015610566575060056103db565b60d6821015610577575060066103db565b60e0821015610588575060076103db565b60e58210156105995750600b6103db565b60ea8210156105aa5750600c6103db565b60ef8210156105bb5750600d6103db565b60fb8210156105e2576001831680156105d85760099150506103db565b60089150506103db565b50600a92915050565b6105f581826104f8565b82019150610718565b6000603382101561061e57506d032104019876543210a654040000919050565b604d821015610637575068210311cba046020001919050565b60b182101561065657506e2103432398765432197654321700f2919050565b60c582101561067057506931518764106654040003919050565b60d68210156106885750670210361c12610004919050565b60e08210156106a05750672103718026020005919050565b60e58210156106b75750662103b10101bf06919050565b60ea8210156106cf5750670102c161832c01f7919050565b60ef8210156106e75750672103d161832d11f8919050565b60fb82101561070557506d0419829876543219865432170079919050565b506b51a19654326876543218007a919050565b610721816105fe565b9091019392505050565b60006020828403121561073d57600080fd5b8135801515811461074d57600080fd5b939250505056fea264697066735822122011b8483986a794fd8e340f0db9ac7af1ac5980fee138bcfab7eeef1adf4c305f64736f6c63430008070033";

export class ExperimentsContract2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExperimentsContract2> {
    return super.deploy(overrides || {}) as Promise<ExperimentsContract2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExperimentsContract2 {
    return super.attach(address) as ExperimentsContract2;
  }
  connect(signer: Signer): ExperimentsContract2__factory {
    return super.connect(signer) as ExperimentsContract2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExperimentsContract2Interface {
    return new utils.Interface(_abi) as ExperimentsContract2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExperimentsContract2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExperimentsContract2;
  }
}
