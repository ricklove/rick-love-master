/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExperimentsContract2,
  ExperimentsContract2Interface,
} from "../ExperimentsContract2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "sequentialAccessA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610262806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806352090bb914610030575b600080fd5b61004a60048036038101906100459190610126565b610060565b60405161005791906101a5565b60405180910390f35b6000816100a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009990610185565b60405180910390fd5b60006100bd565b600060a351805191506001810160a3525090565b6100c56100a9565b6100cd6100a9565b6100d56100a9565b6100dd6100a9565b6100e56100a9565b818581019050848101905083810190508281019050818101905080965050505050505080915050919050565b60008135905061012081610215565b92915050565b60006020828403121561013c5761013b6101e7565b5b600061014a84828501610111565b91505092915050565b60006101606015836101c0565b915061016b826101ec565b602082019050919050565b61017f816101dd565b82525050565b6000602082019050818103600083015261019e81610153565b9050919050565b60006020820190506101ba6000830184610176565b92915050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b600080fd5b7f7265715f73657175656e7469616c416363657373410000000000000000000000600082015250565b61021e816101d1565b811461022957600080fd5b5056fea2646970667358221220d71dba6fc8d7dbc9d6b7144dd285a8ebe00ce6b0cb52db69004b6f873458264764736f6c63430008070033";

export class ExperimentsContract2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExperimentsContract2> {
    return super.deploy(overrides || {}) as Promise<ExperimentsContract2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExperimentsContract2 {
    return super.attach(address) as ExperimentsContract2;
  }
  connect(signer: Signer): ExperimentsContract2__factory {
    return super.connect(signer) as ExperimentsContract2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExperimentsContract2Interface {
    return new utils.Interface(_abi) as ExperimentsContract2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExperimentsContract2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExperimentsContract2;
  }
}
