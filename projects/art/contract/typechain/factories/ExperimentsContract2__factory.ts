/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExperimentsContract2,
  ExperimentsContract2Interface,
} from "../ExperimentsContract2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "sequentialAccessA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610218806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806352090bb914610030575b600080fd5b61004361003e3660046101b9565b610055565b60405190815260200160405180910390f35b6000816100a05760405162461bcd60e51b81526020600482015260156024820152747265715f73657175656e7469616c4163636573734160581b604482015260640160405180910390fd5b600060405160a081015160a182015160a283015160a384015160a485015160a586015160a687015160a788015160a889015160a98a015160b08b01518a01995060b18b01518901985060b28b01518801975060b38b01518701965060b48b01518601955060b58b01518501945060b68b01518401935060b78b01518301925060b88b01518201915060b98b01518101905060c08a01995060c18901985060c28801975060c38701965060c48601955060c58501945060c68401935060c78301925060c88201915060c981019050869a50898b019a50888b019a50878b019a50868b019a50858b019a50848b019a50838b019a50828b019a50818b019a50808b019a50505050505050505050508091505080915050919050565b6000602082840312156101cb57600080fd5b813580151581146101db57600080fd5b939250505056fea264697066735822122049e2ff2ff1aa49065f662eb6f8a5ceb01e473862ed18dd8442d3e5369374e11164736f6c63430008070033";

export class ExperimentsContract2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExperimentsContract2> {
    return super.deploy(overrides || {}) as Promise<ExperimentsContract2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExperimentsContract2 {
    return super.attach(address) as ExperimentsContract2;
  }
  connect(signer: Signer): ExperimentsContract2__factory {
    return super.connect(signer) as ExperimentsContract2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExperimentsContract2Interface {
    return new utils.Interface(_abi) as ExperimentsContract2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExperimentsContract2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExperimentsContract2;
  }
}
