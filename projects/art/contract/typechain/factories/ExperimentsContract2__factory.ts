/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExperimentsContract2,
  ExperimentsContract2Interface,
} from "../ExperimentsContract2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "sequentialAccessA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610275806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806352090bb914610030575b600080fd5b61004a60048036038101906100459190610139565b610060565b60405161005791906101b8565b60405180910390f35b6000816100a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009990610198565b60405180910390fd5b600060405160a081015160a182015160a283015160a384015160a485015160a586015160a687015160a788015160a889015160a98a0151868a81019050898101905088810190508781019050868101905085810190508481019050838101905082810190508181019050809c5050505050505050505050505080915050919050565b60008135905061013381610228565b92915050565b60006020828403121561014f5761014e6101fa565b5b600061015d84828501610124565b91505092915050565b60006101736015836101d3565b915061017e826101ff565b602082019050919050565b610192816101f0565b82525050565b600060208201905081810360008301526101b181610166565b9050919050565b60006020820190506101cd6000830184610189565b92915050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b600080fd5b7f7265715f73657175656e7469616c416363657373410000000000000000000000600082015250565b610231816101e4565b811461023c57600080fd5b5056fea2646970667358221220f536635891947dea137e51e3be81c59753dfaffedc03cdefaa2fca8c2a5a1f5364736f6c63430008070033";

export class ExperimentsContract2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExperimentsContract2> {
    return super.deploy(overrides || {}) as Promise<ExperimentsContract2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExperimentsContract2 {
    return super.attach(address) as ExperimentsContract2;
  }
  connect(signer: Signer): ExperimentsContract2__factory {
    return super.connect(signer) as ExperimentsContract2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExperimentsContract2Interface {
    return new utils.Interface(_abi) as ExperimentsContract2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExperimentsContract2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExperimentsContract2;
  }
}
