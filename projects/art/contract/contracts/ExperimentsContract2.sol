  
// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

contract ExperimentsContract2 {
    
    function generateSvg(uint _rvs) public pure returns (string memory) {
        string memory output;

// DataPack 
bytes memory dataPackCompressed = hex"01ff08207374796c653d27086c696e656172477208ff02616469656e74073a75726c28237808207472616e73666f07012164000c010008ff0166696c6cff0404272f3e3c087472616e736c6174062069643d277806ff05726d3d27050000040002073b7374726f6b6504003c0000083e3c73746f70ff0108ff0f73746f702d6308ff106f6c6f723a230800ff082fff033e3c0820786c696e6b3a6808ff137265663d2723082f673e3c2f673e3c06ff0bff09652808ff11ff12ff03ff0a08ff08757365ff147806ff06000b0800083d272d3330302720072101012100002008636c69705061746805ff0e35010007ff0e36030201000666696c74657207273e3c7061746805000b01000008206f706163697479087363616c65282d310801211aff0e330100080002ff1b0201ff0c08ff0d2d7769647468063d27363030270820636c69702d706108ff2874683d277572050321080221086c6c69707365ff07052720643d2707ff082f673e3c670400030002083e3c72656374207808ff2fff1a79ff1a7708ff3069647468ff2708ff3120686569676808272063793d270027082150010a010e08270800ff1900090e0000030001210729272063783d2706ff296c28237805ff223d270007ff0bff232c312907ff332072783d2707ff0d2d6c696e6507ff340eff190821042164000c06272072793d2706ff0e3401ff2508ff0166696c6c3a6e0801210a000c01000007ff3274ff27ff07070002060504030204021a1601063a726f756e64062132ff06000b03273e3c0527ff16302c05ff2109080004ff0c0ad807ff416f6e65ff0d07293bff1fff043203210001082720ff1c556e697408ff4f733d2775736508ff5072537061636508ff2dff39ff20ff0708ff3c6a6f696eff46080414020ad8041702047061746804ff360000056174696f6e05012114ff1d07ff514f6e55736503302c2d0827ff01636f6c6f7208ff5b2d696e74657208ff5c706f6cff572d08ff5dff1f733a735208ff5e4742ff48666508ff5f47617573736908ff60616e426c757208ff6120737464446508ff627669ff573d27082720726573756c7408ff643d27626c757208ff65ff082fff1f3e08ff48616e696d617408272072657065617408ff68436f756e743d08ff6927696e64656608ff6a696e6974652708ff59ff2020643d2708726f74617465280008ff3d64001dff562908140100001dff353a08ff3dff3664002914080111ff450fff450e08ff71ff450aff450805000b08000004ff08ff150327ff17067363616c652806ff183336ff49060408020ada210300010a07ff183239ff492007302c352c2d3630072920ff232c312907ff210a0a000023072100000a0cff5607001dff0c199f2105ff4865ff2b05012115ff1d04ff4e23010301ff0c083d27687474703a2f08ff842f7777772e7708ff85332e6f72672f08ff663cff1fff0a3208ff67654d6f74696f08ff886e206475723d0873ff6b20ff553d270827ff0735ff4d3529083429ff0dff04342908ff8cff53ff3c636108ff8d70ff46ff263a082c36302c352c363008ff04323329ff263a08ff4cff90302e3827080038ff368000180108212802210a013a0208082139ff19000b0f080000090900ff7f0006ff12ff03ff0a06757365ff147806ff2e0641220006ff210a09000006ff7001ff353a0527ff110023052927ff38330500001dff4b05012115ff1e0501211dff4005012116ff1e05000910ff0c0429ff486703302c30072720786d6c6e7307ff18333127ff1607012102000cff8307021a18ff72021a07082114ff06010a040605040304464646460429ff086704ff08ff5504ff00ff00040009080003673e3c0321ff3605ff082fff1c05ff1cff0a3305ff0e34010005ff3e1dff7905ff3e15ff7905ff3603000c05012119ff1d03ff2c4d04ff263a3104ff5a313004ff16002904ff24ff2e04ff4a082304000c09000302010003000023030400020330303003ff7531082076657273696f6e083d2731303025272008ff8632ffc22f737608ff01ff1fff0432340863ff5a352c332c35083130ff3b3131ff3f083736ff3b3730ff3f08ff7b2c352c2d363008ff9c38ffabff383308ffbbff486369726308ffcd6c6520723d27083527ff0bff76302e08ffcf31352927ff0708ffd03139ff4d372908ff04323029ffb92e08ff4cffd235ff2c0008ff91ff0bff6dffac0829ff0dff0432312908ffd5ff53ffb9ff2c08012114ff1eff0601082102000b0a00ffae080008ff930120003a08040b020ada211e000808210101ff3e200008ffdb000a01ff362a08ffdc000b0100ff19082164010a0108003a082105ffa11546ffc108041402192d0417020802210400090dff5608ffb601ff4bff4e090806050d0605040e11080b0c0001050dffa90800190aff25206221082109082128ff1900052c305aff0805ff8034ff3705ff0865ff2b0527ff3aff740501211cff40052104ff420b05012116ff1d040220020a04ff6eff6f0300042307ffc82c332c306307ffb13e3c67ff3807ff8bffb800633607ff082fffafff9707302c31ff5a373007ff18333727ff1607ff16ffa329ff20071bff0e410000320702ff4e3a0201200709ff9d2196ffae07ff21090900092307ffe411010b022007002510120f0d0003ff0a330300090c0000001617ff00deb81e1b1aded2cff00afafa100f0f604f870000009d9df0161f2d6a6aa0ededede9928b121212050505f6f6f6d9b4f3383838d4c2ff007326822e253cb17b5d70aeff00d5ddecfcfcfc4986e964a4f7e0edff000f408a5f5fce1f27321b294b2a3f6f9a847edbd2d26354557c6e6adfc7f53d3d3dd4b2f5573e70f0f0f0415d81c9d1decedff0021c3040354e6e9797dd182c498e8ef0402f7523232f73635ed5d0cde7dcda6a514d685550c1a7dc2d24261c12135757571f1a19171617dee2e73c84e29696f3621e6b40406d262626c6d0e1ced6e320252e9ba8bf34455f2d35434459792929299a4c5eeeb8ff00efdff001fef0ff00be73d3eab1fbbe6dd5522e5c944da829183e572960361b34ff00f4b8dfdcceff00f8ebc0a46df8eba0b19b59615538b191683f2224352a18231e158f6a5669a27cd6dece4171504558376a9a7a44573520231f313a341f2e24d8d8f3e9e9f2ebebff00b6b6eccecef39788d37979b4a8a8f040405e7575a9f5f5f5b4c7e4d7e0ef8a9dc1a3b8d78288ba3e3e6056567b27273a58586f7594f0dccade1d24491f2538bb91d4151537808080ff00f9d6aee9f9a3faca669cff000209ef00372c00003d5b175601490000332300003f581c50014e05002f061a3f47561960064f0100342000003b562f5f054d03003214005f005a19640446050036307259634f265b054d0500342b400036582559034f00003831003f225c15630646080d3b25001a00541466194904003221b94c4850375b1156030038304000404f2159004b070035252e1e1f54295c0246050f38250000395418611d50060d37247264005529631446050f3728000078532758184a02003232b02b78531f440b4d0b002d1e64003b5128570b6201003220000040573562045003650a501957253117320734281b650a501e322e1000321446141d650d4d1e392c110132114500177d0a4c1e2c220a0e320035201d830a491e37320b0d340a32161e650a501e471c1d1d321132251c650651342c220a0e320027331900063f14003603167c3e4633190c0c3f2c3a0018173e323339195f064c402c220a0d0000332819650a502357251a0532053a281b480d501243362412910e542a19650a501e53202f08340a5019198906541a4d362e0e2d253725190a08043c12151404280c080414120f150528060805280712140528080d056411051501260908045a121015052811080600120a1408250b0a063211021404250c0d045a16001402280908002810111303280908043c0e101305280c080432120f15042800090432021615022806050446030f1408280c0001640f11160b281e0c1c151e1d160f0d0d1e07018a43080a0b00d5430a0508016243060f0c00d5160e050b0078000e0a0c012b03080b0d00d5260f0a0a01001303080d013258000e0d211e6404071204211e640407120300006604071404000066040714030a090807ffa90301ffbf0d131211100f0e0d0c030a030b1f1e1d1c1b1a19181715161514101027262524232217202120000c3231302f2e2d2c2b292a29283d3c3b3a393837363533343328434241401b1a013f01173e17004b4a064849484647464445442857565554535251504f4d4e4d4c6261605f5e5d5c5b5a5859584c0a6c066b6a696867666465646377767574737271706f6d6e6d14807f067e7d7c7b7a1a7879782806068786068584834f8182811488898a8b068c000103050204081009000102060c10302024284080c03c3f786d6cffc43d27312e302720656e636f64696e673d275554462d3827207374616e64616c6f6e653d276e6f273f3e3c737667207769647468ffc5686569676874ffc576696577426f783d27302030203330302033303027ffc43d27312e31ffa43a786c696e6bff86313939392f786c696e6bffa4ffc667ffa43a737667ffc667ff48646566733e3cff03ff0a31ff7532ff7533ff7534ff7535ff7536ff7537ff7538ff7539ffc330ffc331ff9b3031ffc2303830ff963132ffc333ffc334ffc335ffc336ffc337ffc338ff9bffaa46460023ffc2ffc2ff963139ff9bffaa46463030ff12ff03ff110023333333333333ff963230ff9b4442373039330023453338464142ff963231ff753232ff753233ff9b353035303530ff12ff1fff0a3234ff63302030ff8735ff63302e3520302e35ff8736ff63352035ff8737ff63332033ff663c2f64656673ff4331ffabff163135302e302c3135302e302920ff7631ffa2ffc729ff89273137ff8a4d322c35fff1ff5a352d332c352d33ffe7ff1cff0a3238ff6c4d002c004c005afff232382927ff4332ffabff39ff20ff0a323927ff4cff043529ffb934ff2c00ff7a323729ff7a353429ff7a383129ff7a31303829ff523729ffb8005affacff073829ffb8005aff2dff39ff4867fffe30ff20fffe31fff3302c31352c36302c32302c36302c323063302c352d36ffba2d36ffba7affa5202d342c20313829ffa5202d382c333629ffa52d31322c353429fff4333027ff3aff523429ffb8004800ffe830272063793d27313635272072783d2700ff3f3530ff74ffafff55ff073131ff4d362927ff38323829ffb82d39ff5a3563ffa32c34ff5a34302c39ff5a34306335ffa32c39302c34302c39302c343063ffa32c31302c35302c31302c3730632d32302cff5a37302c33ffba302c3330632d33302cff5a38ff5a33ffbaff5a333063ff5a32fff52c31ff5a37307aff74ffaf67ff0bff76002c31ffa23e3cffafffb232ff6c005335ffa32cffa35affb1ff433133ff9c32ffabfffe33ff89273331ff8a4d302c3363ff5a332c322c332c322c3063ff5a332d322c332d32ffe7ffb234ff6c005affb1ff433134ff9c3429ff74ffaf67ff3a27ff433132ff9c3229ff183333ff742fffaf67ffc729ff48ffb235ff6c007afff233352927ff4333ffabff39ffe830ff3b3630ff3f3630ff52ff8e36ffb8302c004c2d3132342c004c3132342c00ffe8ffc93131ffe934ff372dffc93131ff523429ff2c004c3135ff5a3135305aff2dff39ff8036ff372d3638ff3b3735ff3f313030ff52ff8e3132ffb82d31362c004c31362c00ff20ff07ff8e3132ffb8302c354c2d31362c00ff8039ff3730ff3b3136ff3f3335ffe93130ff372dffca313030ffe939ff37ffca313030ff2d3e3cff55ff3927fffe36fff3ffa3ff8f2c3563ffcb2c357aff77313429ff772d313429ff7730ff7cff773134ff7cff772d3134ff7cffacff3927fffe37ff8bffb82d32302c006330ff8f2c352c363063352cffcb7afff631352c3429fff633ffa329ff74ff15ffaf67ffbb20ff0965282d002c2d0029ff48ffb238ff59ff20fffe3927ffbb20ff76312c312920ff6d29ff2c007aff6765206174747269627574654e616d653d27642720747970653d27786d6cff6b206475723d27347327206b657954696d65733d27303b302e343b302e353b302e363b31272076616c7565733d2720002000207a3b2000207a20ff082fff553e3c2fff1cff433136ffcc38ffa2ff1600ffa2ff0a3430ff803138ff3700ff3b00ff3f00ff89273230ff8a4dffa3fff1ffba2d362c31302d36ffe72f656c6c697073653e3cffaf67ffce32ffd1ff2dffce31ffd1ff74ff152fffaf757365ff0a343127ff1478333927ff017374726f6b652d77696474683a32ff0dff043137293b66696c6c3a7472616e73706172656e74ff2dff162d002920ff096528002927ff3274ff27ff3a27ff073135ffcc382927ff3aff4867ff1600ff7cff48ff973430ff74ff973431ffea67ff16302c00ffa2ff16ffa3ffa2fff7ffd3ffacff0a343227ffd3ff18343227ff3aff0867ff39ff4930ffa2ff0a343327ffbbff20ffd4ffd4ff91ff3927ff0bff6dfff43433ffeaff1567fff7ff073231ffd6005affacff0a343427ff073232ffd600ff183434ffea2fffaf2f7376673e003d234323083f23084023084623084423084723084523083023003e00083123004200080200002100ffbc01272d2310210bff9200012c23001301000e210301211cffb3112120ff24092128ff24082108ff240d200e08090a1c1000131100ffee0dff2e016d2b230bffb01dffb32b2118ff240c1c0b00132b00ffee0cff2e01b3030a0201f9200e090809030902023f200b090a0f030f020285131110ffee0d0813110b0220020908ff2e02cb0308020311132b0bffee0cff2e0357132b0b022002090cff2e039e2201000080ff2e03ef210701211dffb32d2130ff2408202d0f0800200b0900ff2e0436210601211dffb32c202c0a0800200b0a00ff2e047d2138ffbc04c4210eff92000221fff8ff36fff8000920020109ff2e050b20020901ff2e05522140ffbc05992f23022200ffadff000121000020ffbfff2e05f022ffadff0000012200ffadff000020ffbfff98333333ff2e06872158ff24ff98db7093ff98e38fabff2e06de2148ffbc07252150ffbc076c2160ff24ff98505050ff2e07bb2118ff581e2120ff581f2150ff58202128ff5827231f27092164ff2a40ffd70a091f000b010008ff4e0a011e000c08000821ffc01eff79271fff730901ffc01e002a2148ff58ff06000b1e0029ff4e251e2a2901200c210affffff9dff4e0a011eff730a09ffc01f0028251f282727200d2132000a0d0008ff780a000a0cff4bff781effffff4b219600090d0008ff781e000a0cff9d0408020adc2104ffeb0b592132fff90a211effff0009210700090d0008ffec090005ffd8041d090bffec0b0003ffd8021d0901050908050403020108020ba0ff1b11ff830c89211effffffd90c0800091d0900ffc10ad8219600090dffd90d080008ff786e0009fffa0bffda0afffa0a040a020cac0409020ad8ff786e000a09ff4bffda0909ff4b040a020cd1ffb01cff400ce6211effddffff00001dff361a000a01ff4b2196ffdd00090dff3614000aff830d2f2102ffeb0e3f2146fff908090c08001dff4b040d020e620a0c0800ffc10ada040c020ad82105ff73090dff0c0e621d0c00ffc10cd12101ffeb0e642164022132013a020120ffa60e9a210aff9200022101001dff3601002002ff830f952137ff2aff3614ff1e1affb015ff1d0a2108ff5811211eff2a10012114ff1e13231a13090a091a012100000a1100000c010008ffec110026ff8211010a131aff730901ffc01100252100000a1100ff730a09ffc013002421000425042625110a1c251a1a24130a1b081c1b2158ff58082118ff810e2132ff2a20ff9e142104ff2a28ff9e1dff4e251125260108192513241a1a08172129ff2a08ff9e000919000f2110ff81000a170018ffef0f1c000dffef181b000c231c0d08ffb40c1bffbd1b0c09ffb40d1cff99231c0805231bfff00d0803230cff440d0c2130ff8110ff9a0f19000bff9a18170009230d0b08ff3e10ff79090cffbd0c090aff3e10ff790b0dff7d0d0805230cfff00b08032309ff440b092118ff2a38ff9e15230b1908ffb51709ffbd09170affb5190bff7d0b08052309fff01908032317ff441917020fdc2148ff81083a1c19080a3a1b17080c080a0c2150ff81092158ff8108ffde1c190012ffde1b170010230a1221230c10223a210f09082200000195042104ff2a60012115ff0e370403ffbfff06ffae163a22180918ffef160a000dffef180c000b230a0d08ffb40b0cffbd0c0b09ffb40d0aff99230a0805230cfff00d0803230bff440d0b2122ff2a40ff9e0fff9a1612000cff9a18100008230d0c09ff3e0fff79080bfffb0b080aff3e0fff790c0dff7d0d0905230bfff00c09032308ff440c08230c1209ffb51008fffb08100affb5120cff7d0c09052308fff01209032310ff4412100210f5ff4e08011a06261a252411132138ff580b23111e0823131f0a213cff2a30ffd70a1f13ff4a020a1e11ff210a0a00090a1f13ff210a0800080a1e11ff21090a00013a02080b002311000a3a09010b00231300042164003a0802ffc01e00082164003a0109ffc01f0002060a0408021e1fff4e062a28292701271d29051d2a031d1e010605270328011f1d08051d0a031d1101060502030401131d25051d26032100001d0001060524031a011a0212642101ff9f12e1212508210dff2a40ffa0ffae10213cffa1130e2104ff9f133204100213a12164ffa113a8ffc10cd12105ff9f13ae2106ffa113dcffc1141cff1b2cff831440081c1b2114000a210005210f0009220004210f0009210003210f000922ff441917021462ff1b2dff8314802108ffed172148000a17ff0c14af2103ff9f14d4ffdf0adaff9301200a040a020ad8215000091000080408020ada1d0a00ffc10ad80408020cd12102ff9f154bffdf0cd1ff1b2bff8315c1041a0215ee2132000a17ff0c162fffc1166f210f003800012a23001a01ff25169a211e00091eff9d2105000a1fff0c16d1ff1b02ff83182d211e000a1aff0c1868ffb016ff1d14ff54191fffe01930ff54198a2140ff2a28ffa00a21b409216408216401220000013a000c0100000c0800000b0900000b0aff0c199f2110ffed0d1d0d0cff7e4801001101112103ff2a18ffa0082120ffed091d0802ffb064ff213a02090012ff470c0019ff47120004ff4e260c04191201120f010fff470d0016ff471200ffe12616120dffbf0e010e1d0808ffb064ff213a0908000bff470b0015ff470d0003ff4e260d15030b010b0a010aff470c0005ff470b0013ff7e26050b0c1301000801080219a6ff72ffa718ff7e080100021a162102ffbe042101ffbe02ffb001ffbe00060c0419ffbf021a162101ffbe042102ffbeffe10616040dffbf021a16ff4e060d15030b010b021a16ff7e06050b0c130100ffa718ff72021a1dff541ac62108ff2a30ffa0090409021afa2108ff2a38ffa0080408021b01ffb017ff1dffa61b082108012117ff1dffa61b0fff4e090d09000901ffe20108000912ffb6ff831b93ff4e090109ffffffe20b08000901ffb6ff831c03ff541ce2ffe01cefff541db30410021e35ffb018ff1d0009100002290210270a2100030a101002ff4e0a0a10000703ffbf021eb22111ff2a18012118ff1e0c2108012118ff1d0d2102ff2a10012118ff1e00090a00022902102709ff820d08ff3e0cff79090aff210a08000b230a0908ff3e0cff560a0d00ff4a002100070a0a1006ff820b05230aff79011004230d0b032309ff790110020a0910000507ffa9020d00021efc2e2302ff1b02ff831f3c2110ffb7091d09082105ff420b08ff4b2118012119ff0e35ff831f7b2111ff7f12ff2a30012119ff1e0a2196ff06000b09000d2120ffb70c2128ffb70b230d0c08ff3e0aff560a0b00ff4a08ff820b09ff3e0aff790c0dff99230d0805ff82fff00c080e230b00112100ffe30c0b021fcb2108ffb70f2111092102ff94ff95062109ff420b0e00032109ff42fffc1bffb019ff1d0a2102ffe511092101ff94ff95ffe30c0b02201b2103ffe511092103ff94ff9506214bff06000b0e0003214bff0600fffc77ff4e0801102109001d000c210b000a10000dff820cffa80d10ffbd100d092114ff06012100000a0c00ff99ff82081123100012230c080e230d000f0611120e0f0c0d210b000a100009210900230c00ffa8090dff4a0a230d090b2114ff06082109010a010cff730a0bffc00c0a05230d000421090123010a0323090002210901ffa902010921090121ffc00100ffa81009ff4a0a2309100b2114ff0608ffb009000a0100ff730a0b000021090123010a0523090004ff820a0323100002ff4effa90201100221332100042114002504110e0c000a2114fffd09210100090a0005ffe60a09000bffe6090a0003210b08213cff19000a0900022100042150002504110e0cff3650fffd00050a09050b03ffbf022197";
// bytes memory dataPack = hex"";
// ^-- Move to Solidity Function
        assembly {
// START ---    

            function copyBytes(pTo, pFrom, count) {
                for {} gt(count, 0) {count := sub(count,1)} {
                    mstore8(pTo, mload(pFrom))
                    pFrom := add(pFrom,1)
                    pTo := add(pTo,1)
                }
            }

            function decompressDataPack(pCompressed) -> pDataPack {
                let pDict := mload(0x40)
                let pMem := add(pDict, 1024)

                /** modes:
                 *  0: load dictionary 
                 *  1: load dataPack
                 */
                let mode := 0
                let remainingBytesCompressed := 0
                let entrySizeExpanded := 0
                let iEntry := sub(0, 1)

                for {} true {} {

                    // mode 0: Load dictionary
                    if iszero(mode) {
                        if iszero(remainingBytesCompressed){
                            // Finalize last entry
                            if not(lt(iEntry,0)){
                                mstore(add(pDict,iEntry), entrySizeExpanded)
                            }

                            remainingBytesCompressed := and(0xff, mload(pCompressed))               pCompressed := add(pCompressed, 1)
                            entrySizeExpanded := 0

                            // Reached start of data pack
                            if iszero(remainingBytesCompressed) {
                                // Start data pack
                                pDataPack := 0x40
                                mode := 1

                                // main size = 4 bytes
                                remainingBytesCompressed := and(0xffffffff, mload(pCompressed))     pCompressed := add(pCompressed, 4)
                                continue
                            }

                            // Store entry info
                            iEntry := add(iEntry, 1)
                            // Skip over entry size value
                            pMem := add(pMem, 0x20)
                        }
                    }

                    // If done
                    if iszero(remainingBytesCompressed) {
                        break
                    }

                    // Process compressed byte
                    let b := and(0xff, mload(pCompressed))                  pCompressed := add(pCompressed, 1)
                    remainingBytesCompressed := sub(remainingBytesCompressed, 1)

                    // If dictionary entry
                    if eq(b, 0xff) {
                        b := and(0xff, mload(pCompressed))                  pCompressed := add(pCompressed, 1)

                        // Copy dictionary value
                        let pEntry := mload(add(pDict,b))
                        let entrySize := mload(pEntry)

                        copyBytes(pMem, add(pEntry, 0x20), entrySize)       pMem := add(pMem, entrySize)
                        continue
                    }

                    // If raw byte
                    mstore(pMem, b)     pMem := add(pMem, 1)
                }

                // Move free memory pointer to end of dataPack
                mstore(0x40, pMem)
            }

            function getRvsValue(bitShift) -> value {
                let rvs := mload(add(mload(0x40),0x00))
                value := and(0xff, shr(bitShift, rvs))
            }
    

            // Select Breed Data from rvs value
            function selectBreed() -> breedData {
                let rvs_breed        := getRvsValue(0x00)
                let rvs_body         := getRvsValue(0x08)
                let rvs_face         := getRvsValue(0x10)
                let rvs_palette      := getRvsValue(0x18)
                let rvs_eyeColor     := getRvsValue(0x68)

                
                if lt(rvs_breed, 51) { 
                    // Breed: black
                    // {"name":"black","odds":51,"b_body":[0,4,5,6],"b_face":[0,1,2,3,4,5,6,7,8,9],"b_palettes":[0],"b_eyes":[0,1,2,3],"b_tabbyFaceOdds":0}
                    breedData := 0x00000000000000000103
                    let m := 0
                    let mask := 0xff

                    
                    // body: [0,4,5,6]
                    m := mod(rvs_body, 4)
                    mask := not(shl(0x20, 0xff))
                        // 1 + 3 = 4 <=> 3 + 3 = 6                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 3))) }
                    
                    // face: [0,1,2,3,4,5,6,7,8,9]
                    m := mod(rvs_face, 10)
                    mask := not(shl(0x28, 0xff))
                        // 1 + 0 = 1 <=> 9 + 0 = 9                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 0))) }
                    
                    // eyes: [0,1,2,3]
                    m := mod(rvs_eyeColor, 4)
                    mask := not(shl(0x38, 0xff))
                        // 1 + 0 = 1 <=> 3 + 0 = 3                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x38, add(m, 0))) }
                    
                    // eyesHeterochromia: [1,2]
                    m := mod(rvs_eyeColor, 2)
                    mask := not(shl(0x40, 0xff))
                        // 1 + 1 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x40, add(m, 1))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 77) { 
                    // Breed: white
                    // {"name":"white","odds":26,"b_body":[0,6],"b_face":[0,10,11,12],"b_palettes":[1],"b_eyes":[0,1,2],"b_tabbyFaceOdds":0}
                    breedData := 0x01000000000001000113
                    let m := 0
                    let mask := 0xff

                    
                    // body: [0,6]
                    m := mod(rvs_body, 2)
                    mask := not(shl(0x20, 0xff))
                        // 1 + 5 = 6                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 5))) }
                    
                    // face: [0,10,11,12]
                    m := mod(rvs_face, 4)
                    mask := not(shl(0x28, 0xff))
                        // 1 + 9 = 10 <=> 3 + 9 = 12                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 9))) }
                    
                    // eyes: [0,1,2]
                    m := mod(rvs_eyeColor, 3)
                    mask := not(shl(0x38, 0xff))
                        // 1 + 0 = 1 <=> 2 + 0 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x38, add(m, 0))) }
                    
                    // eyesHeterochromia: [1,2]
                    m := mod(rvs_eyeColor, 2)
                    mask := not(shl(0x40, 0xff))
                        // 1 + 1 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x40, add(m, 1))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 177) { 
                    // Breed: tabby
                    // {"name":"tabby","odds":100,"b_body":[1,2,3,4,5,6,7],"b_face":[1,2,3,4,5,6,7,8,9],"b_palettes":[2,3,4],"b_eyes":[0,1,2],"b_tabbyFaceOdds":255}
                    breedData := 0x02ff0000010102000103
                    let m := 0
                    let mask := 0xff

                    
                    // body: [1,2,3,4,5,6,7]
                    m := mod(rvs_body, 7)
                    mask := not(shl(0x20, 0xff))
                        // 1 + 1 = 2 <=> 6 + 1 = 7                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 1))) }
                    
                    // face: [1,2,3,4,5,6,7,8,9]
                    m := mod(rvs_face, 9)
                    mask := not(shl(0x28, 0xff))
                        // 1 + 1 = 2 <=> 8 + 1 = 9                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 1))) }
                    
                    // palettes: [2,3,4]
                    m := mod(rvs_palette, 3)
                    mask := not(shl(0x30, 0xff))
                        // 1 + 2 = 3 <=> 2 + 2 = 4                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x30, add(m, 2))) }
                    
                    // eyes: [0,1,2]
                    m := mod(rvs_eyeColor, 3)
                    mask := not(shl(0x38, 0xff))
                        // 1 + 0 = 1 <=> 2 + 0 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x38, add(m, 0))) }
                    
                    // eyesHeterochromia: [1,2]
                    m := mod(rvs_eyeColor, 2)
                    mask := not(shl(0x40, 0xff))
                        // 1 + 1 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x40, add(m, 1))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 197) { 
                    // Breed: shorthair
                    // {"name":"shorthair","odds":20,"b_body":[0,4,5,6],"b_face":[0,1,4,6,7,8],"b_palettes":[5],"b_eyes":[3],"b_tabbyFaceOdds":0}
                    breedData := 0x03000000000005030003
                    let m := 0
                    let mask := 0xff

                    
                    // body: [0,4,5,6]
                    m := mod(rvs_body, 4)
                    mask := not(shl(0x20, 0xff))
                        // 1 + 3 = 4 <=> 3 + 3 = 6                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 3))) }
                    
                    // face: [0,1,4,6,7,8]
                    m := mod(rvs_face, 6)
                    mask := not(shl(0x28, 0xff))
                        // 1 + 0 = 1                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 0))) }
                        // 2 + 2 = 4                
                        if gt(m, 1)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 2))) }
                        // 3 + 3 = 6 <=> 5 + 3 = 8                
                        if gt(m, 2)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 3))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 214) { 
                    // Breed: calico
                    // {"name":"calico","odds":17,"b_body":[6],"b_face":[1,12],"b_palettes":[6],"b_eyes":[0,1,2],"b_tabbyFaceOdds":0}
                    breedData := 0x0400000006010600013b
                    let m := 0
                    let mask := 0xff

                    
                    // face: [1,12]
                    m := mod(rvs_face, 2)
                    mask := not(shl(0x28, 0xff))
                        // 1 + 11 = 12                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 11))) }
                    
                    // eyes: [0,1,2]
                    m := mod(rvs_eyeColor, 3)
                    mask := not(shl(0x38, 0xff))
                        // 1 + 0 = 1 <=> 2 + 0 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x38, add(m, 0))) }
                    
                    // eyesHeterochromia: [1,2]
                    m := mod(rvs_eyeColor, 2)
                    mask := not(shl(0x40, 0xff))
                        // 1 + 1 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x40, add(m, 1))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 224) { 
                    // Breed: siamese
                    // {"name":"siamese","odds":10,"b_body":[0,6],"b_face":[0,8],"b_palettes":[7],"b_eyes":[0,1,2],"b_tabbyFaceOdds":0}
                    breedData := 0x05000000000007000113
                    let m := 0
                    let mask := 0xff

                    
                    // body: [0,6]
                    m := mod(rvs_body, 2)
                    mask := not(shl(0x20, 0xff))
                        // 1 + 5 = 6                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 5))) }
                    
                    // face: [0,8]
                    m := mod(rvs_face, 2)
                    mask := not(shl(0x28, 0xff))
                        // 1 + 7 = 8                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 7))) }
                    
                    // eyes: [0,1,2]
                    m := mod(rvs_eyeColor, 3)
                    mask := not(shl(0x38, 0xff))
                        // 1 + 0 = 1 <=> 2 + 0 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x38, add(m, 0))) }
                    
                    // eyesHeterochromia: [1,2]
                    m := mod(rvs_eyeColor, 2)
                    mask := not(shl(0x40, 0xff))
                        // 1 + 1 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x40, add(m, 1))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 229) { 
                    // Breed: sphynx
                    // {"name":"sphynx","odds":5,"b_body":[0],"b_face":[0],"b_palettes":[11],"b_eyes":[0,1,2],"b_head":15,"b_ear":11,"b_tabbyFaceOdds":0}
                    breedData := 0x06000f0b00000b000102
                    let m := 0
                    let mask := 0xff

                    
                    // eyes: [0,1,2]
                    m := mod(rvs_eyeColor, 3)
                    mask := not(shl(0x38, 0xff))
                        // 1 + 0 = 1 <=> 2 + 0 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x38, add(m, 0))) }
                    
                    // eyesHeterochromia: [1,2]
                    m := mod(rvs_eyeColor, 2)
                    mask := not(shl(0x40, 0xff))
                        // 1 + 1 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x40, add(m, 1))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 234) { 
                    // Breed: sandcat
                    // {"name":"sandcat","odds":5,"b_body":[3,8],"b_face":[6],"b_palettes":[12],"b_eyes":[0,1],"b_head":16,"b_ear":12,"b_tabbyFaceOdds":255}
                    breedData := 0x07ff100c03060c000103
                    let m := 0
                    let mask := 0xff

                    
                    // body: [3,8]
                    m := mod(rvs_body, 2)
                    mask := not(shl(0x20, 0xff))
                        // 1 + 7 = 8                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 7))) }
                    
                    // eyes: [0,1]
                    m := mod(rvs_eyeColor, 2)
                    mask := not(shl(0x38, 0xff))
                        // 1 + 0 = 1                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x38, add(m, 0))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 239) { 
                    // Breed: toyger
                    // {"name":"toyger","odds":5,"b_body":[3,8],"b_face":[6],"b_palettes":[13],"b_eyes":[0,1,2],"b_head":17,"b_ear":13,"b_tabbyFaceOdds":255}
                    breedData := 0x08ff110d03060d000103
                    let m := 0
                    let mask := 0xff

                    
                    // body: [3,8]
                    m := mod(rvs_body, 2)
                    mask := not(shl(0x20, 0xff))
                        // 1 + 7 = 8                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 7))) }
                    
                    // eyes: [0,1,2]
                    m := mod(rvs_eyeColor, 3)
                    mask := not(shl(0x38, 0xff))
                        // 1 + 0 = 1 <=> 2 + 0 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x38, add(m, 0))) }
                    
                    // eyesHeterochromia: [1,2]
                    m := mod(rvs_eyeColor, 2)
                    mask := not(shl(0x40, 0xff))
                        // 1 + 1 = 2                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x40, add(m, 1))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 251) { 
                    // Breed: alien
                    // {"name":"alien","odds":12,"b_body":[1,2,3,4,5,6,8],"b_face":[1,2,3,4,5,6,7,8,9],"b_palettes":[8,9],"b_eyes":[4],"b_tabbyFaceOdds":127}
                    breedData := 0x097f0000010108040001
                    let m := 0
                    let mask := 0xff

                    
                    // body: [1,2,3,4,5,6,8]
                    m := mod(rvs_body, 7)
                    mask := not(shl(0x20, 0xff))
                        // 1 + 1 = 2 <=> 5 + 1 = 6                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 1))) }
                        // 6 + 2 = 8                
                        if gt(m, 5)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 2))) }
                    
                    // face: [1,2,3,4,5,6,7,8,9]
                    m := mod(rvs_face, 9)
                    mask := not(shl(0x28, 0xff))
                        // 1 + 1 = 2 <=> 8 + 1 = 9                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 1))) }
                    
                    // palettes: [8,9]
                    m := mod(rvs_palette, 2)
                    mask := not(shl(0x30, 0xff))
                        // 1 + 8 = 9                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x30, add(m, 8))) }
                    

                    leave
                }
                
                if lt(rvs_breed, 256) { 
                    // Breed: zombie
                    // {"name":"zombie","odds":5,"b_body":[1,2,3,4,5,6,7,8],"b_face":[2,3,4,5,6,9],"b_palettes":[10],"b_eyes":[5],"b_tabbyFaceOdds":127}
                    breedData := 0x0a7f000001020a050005
                    let m := 0
                    let mask := 0xff

                    
                    // body: [1,2,3,4,5,6,7,8]
                    m := mod(rvs_body, 8)
                    mask := not(shl(0x20, 0xff))
                        // 1 + 1 = 2 <=> 7 + 1 = 8                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x20, add(m, 1))) }
                    
                    // face: [2,3,4,5,6,9]
                    m := mod(rvs_face, 6)
                    mask := not(shl(0x28, 0xff))
                        // 1 + 2 = 3 <=> 4 + 2 = 6                
                        if gt(m, 0)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 2))) }
                        // 5 + 4 = 9                
                        if gt(m, 4)  { breedData := add(or(breedData, mask), shl(0x28, add(m, 4))) }
                    

                    leave
                }
                
            }

            // Breed Data
            
            function getBreedData_i_breed(breedData) -> index {
                index := and(0xff, shr(0x00, breedData))
            }
            
            function getBreedData_b_tabbyFaceOdds(breedData) -> index {
                index := and(0xff, shr(0x08, breedData))
            }
            
            function getBreedData_b_head(breedData) -> index {
                index := and(0xff, shr(0x10, breedData))
            }
            
            function getBreedData_b_ear(breedData) -> index {
                index := and(0xff, shr(0x18, breedData))
            }
            
            function getBreedData_i_body(breedData) -> index {
                index := and(0xff, shr(0x20, breedData))
            }
            
            function getBreedData_i_face(breedData) -> index {
                index := and(0xff, shr(0x28, breedData))
            }
            
            function getBreedData_i_palette(breedData) -> index {
                index := and(0xff, shr(0x30, breedData))
            }
            
            function getBreedData_i_eyeColorMain(breedData) -> index {
                index := and(0xff, shr(0x38, breedData))
            }
            
            function getBreedData_i_eyeColorHeterochromia(breedData) -> index {
                index := and(0xff, shr(0x40, breedData))
            }
            
            function getBreedData_breedFlags(breedData) -> index {
                index := and(0xff, shr(0x48, breedData))
            }
            

            // Breed Flags
            
            function getBreedData_f_whiskers(breedData) -> index {
                index := and(0x1, shr(0x48, breedData))
            }
            
            function getBreedData_f_tongue(breedData) -> index {
                index := and(0x1, shr(0x49, breedData))
            }
            
            function getBreedData_f_zombieEyes(breedData) -> index {
                index := and(0x1, shr(0x4a, breedData))
            }
            
            function getBreedData_f_swapMarkColors(breedData) -> index {
                index := and(0x1, shr(0x4b, breedData))
            }
            
            function getBreedData_f_useBodyColorForCorner(breedData) -> index {
                index := and(0x1, shr(0x4c, breedData))
            }
            
            function getBreedData_f_calico(breedData) -> index {
                index := and(0x1, shr(0x4d, breedData))
            }
            
// END Data Functions ---

// Write Function ---

            // 8 or 6 chars
            function writeOutput_color(rgba) {                
                let p := mload(0x00)

                mstore8(p, '#')     p := add(p, 1)

                // Handle rgba extra byte
                // Note: rgba must have r > 0 to detect rgba
                if gt(rgba, 0xFFFFFF) {
                    mstore8(p, and(0xff, shr(24, rgba)))    p := add(p, 1)
                }
                
                // Handle rgb (or gba)
                mstore8(p, and(0xff, shr(16, rgba)))    p := add(p, 1)
                mstore8(p, and(0xff, shr( 8, rgba)))    p := add(p, 1)
                mstore8(p, and(0xff, shr( 0, rgba)))    p := add(p, 1)

                mstore(0x00, p)
            }

            // 5 or 4 chars
            function writeOutput_int(v) {
                let p := mload(0x00)

                if slt(0,v) {
                    mstore8(p, '-')    p := add(p, 1)
                    v := sub(0, v)
                }
                
                // Note: Only up to 9999
                mstore8(p, add('0',mod(10, div(v, 1000))))      p := add(p, 1)
                mstore8(p, add('0',mod(10, div(v, 100 ))))      p := add(p, 1)
                mstore8(p, add('0',mod(10, div(v, 10  ))))      p := add(p, 1)
                mstore8(p, add('0',mod(10, div(v, 1   ))))      p := add(p, 1)

                mstore(0x00, p)
            }

            function writeOutput(str) {
                let p := mload(0x00)

                for { let i := 0 } true { i := add(8,i) }{
                    let b := and(0xff, shr(i, str))
                    if iszero(b) { leave }

                    mstore8(p, b)      p := add(p, 1)
                    p := add(p, 1)
                }

                mstore(0x00, p)
            }


// Helper Functions ---
            function average(a,b) -> v {
                v := div(add(a,b),2)
            }
            function constrain(a,min,max) -> v {
                v := a
                if slt(a,min) { v := min }
                if sgt(a,max) { v := max }
            }
            function ceil_100(a) -> v {
                v := mul(div(a,100),100)
                if slt(v,a) {
                    v := add(100, v)
                }
            }
            function lerp_100(a,b,t100) -> v {
                v := add(
                    mul(a,sub(100,t100)),
                    mul(b,t100))

                v := div(v, 100)
            }
            // const bezierPoint_100 = (a: number, b: number, c: number, d: number, t100: number) => {
            //     const tInv = 100 - t100;
            //     return (a *     tInv / 100 * tInv / 100 * tInv / 100)
            //         +  (b * 3 * tInv / 100 * tInv / 100 * t100 / 100)
            //         +  (c * 3 * tInv / 100 * t100 / 100 * t100 / 100)
            //         +  (d *     t100 / 100 * t100 / 100 * t100 / 100)
            //         ;
            // };
            function bezierPoint_100(a,b,c,d,t100) -> v {
                let tInv := sub(100, t100)
                v := 0
                v := add(v,         mul(a, mul(tInv, mul(tInv, tInv)))      )
                v := add(v, mul(3,  mul(b, mul(tInv, mul(tInv, t100)))  )   )
                v := add(v, mul(3,  mul(c, mul(tInv, mul(t100, t100)))  )   )
                v := add(v,         mul(d, mul(t100, mul(t100, t100)))      )

                v := div(v, 1000000)
            }
            
            function ternary(cond, valIfTrue, valIfFalse) -> v {
                v := valIfFalse
                if cond {
                    v := valIfTrue
                }
            }

            function intToStringInVar(s, pos, v) -> sNew, posNew {
                if slt(0,v) {
                    s := or(s, shl(pos, '-'))                               pos := add(pos, 8)
                    v := sub(0, v)
                }
                
                // Note: Only up to 9999
                s := or(s, shl(pos, add('0',mod(10, div(v, 1000)))))        pos := add(pos, 8)
                s := or(s, shl(pos, add('0',mod(10, div(v, 100 )))))        pos := add(pos, 8)
                s := or(s, shl(pos, add('0',mod(10, div(v, 10  )))))        pos := add(pos, 8)
                s := or(s, shl(pos, add('0',mod(10, div(v, 1   )))))        pos := add(pos, 8)

                sNew := s
                posNew := pos
            }

            // const vertex = (a,b) => `M${a},${b}`;
            function vertex(a,b) -> s {
                s := 0
                let pos := 0

                s := or(s, shl(pos, 'M'))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, a)
                s := or(s, shl(pos, ','))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, b)
            }

            // const bezierVertex = (a,b,c,d,e,f) => `C${a},${b} ${c},${d} ${e},${f}`;
            function bezierVertex(a,b,c,d,e,f) -> s {
                s := 0
                let pos := 0

                s := or(s, shl(pos, 'C'))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, a)
                s := or(s, shl(pos, ','))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, b)

                s := or(s, shl(pos, ' '))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, c)
                s := or(s, shl(pos, ','))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, d)

                s := or(s, shl(pos, ' '))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, e)
                s := or(s, shl(pos, ','))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, f)
            }

            // const line = (a,b,c,d) => `M${a},${b} L${c},${d} l.1,.1`;
            function line(a,b,c,d) -> s {
                s := 0
                let pos := 0

                s := or(s, shl(pos, 'M'))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, a)
                s := or(s, shl(pos, ','))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, b)

                s := or(s, shl(pos, 'L'))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, c)
                s := or(s, shl(pos, ','))                               pos := add(pos, 8)
                s, pos := intToStringInVar(s, pos, d)

                s := or(s, shl(pos, 'l.1,.1')                  )        pos := add(pos, 48)
            }

            // const bezier = (a,b,c,d,e,f,g,h) => `M${a},${b} C${c},${d} ${e},${f} ${g},${h}`;
            function writeOutput_bezier(a,b,c,d,e,f,g,h) {
                writeOutput(vertex(a,b))
                writeOutput(bezierVertex(c,d,e,f,g,h))
            }
            function writeOutput_vertex(a,b) {
                writeOutput(vertex(a,b))
            }
            function writeOutput_bezierVertex(a,b,c,d,e,f) {
                writeOutput(bezierVertex(a,b,c,d,e,f))
            }
            function writeOutput_line(a,b,c,d) {
                writeOutput(line(a,b,c,d))
            }

              // Prototype
        function generateSvgFromData() {
            let pOps := mload(0x00)
            let pVars := mload(0x20)

            for {} true {} {
                let op := and(0xff, pOps)        pOps := add(pOps, 1)

                switch op
                case 0x00 { leave }
                // Store var from var bits
                case 0x01 {
                    let dVarIn := and(0xffff, pOps)         pOps := add(pOps, 2)
                    let bitOffset := and(0xff, pOps)        pOps := add(pOps, 1)
                    let bitSize := and(0xff, pOps)          pOps := add(pOps, 1)
                    let dVarOut := and(0xffff, pOps)        pOps := add(pOps, 2)
                    // and(0x1, shr(0x4c, breedData))

                    let bitMask := sub(shl(bitSize, 0x1),1)
                    mstore(add(pVars, dVarOut), and(bitMask, shr(bitOffset, mload(add(pVars, dVarIn)))))
                }
                // writeOutput
                case 0x10 { 
                    let vString := and(0xffff, pOps)     pOps := add(pOps, 2)
                    writeOutput(vString)
                }
                // writeOutput_text
                case 0x11 { 
                    let iTextStart := and(0xffff, pOps)     pOps := add(pOps, 2)
                    writeOutput_text(iTextStart)
                }
                // writeOutput_int
                case 0x12 { 
                    let iValue := and(0xffff, pOps)         pOps := add(pOps, 2)
                    writeOutput_int(iValue)
                }
                // writeOutput_color from var value
                case 0x13 { 
                    let iVar := and(0xffff, pOps)           pOps := add(pOps, 2)
                    let iColor := mload(add(pVars, iVar))
                    writeOutput_color(getColor(iColor))
                }
                // writeOutput_bezier
                case 0x14 { 
                    let varA := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varB := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varC := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varD := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varE := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varF := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varG := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varH := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    writeOutput_bezier(varA, varB, varC, varD, varE, varF, varG, varH)
                }
                // math +
                case 0x20 { 
                    let varA := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varB := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let dVarOut := add(pVars, pOps)         pOps := add(pOps, 2)
                    mstore(add(pVars, dVarOut), add(varA, varB))
                }
                case 0x21 { 
                    let varA := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varB := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let dVarOut := add(pVars, pOps)         pOps := add(pOps, 2)
                    mstore(add(pVars, dVarOut), sub(varA, varB))
                }
                case 0x22 { 
                    let varA := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varB := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let dVarOut := add(pVars, pOps)         pOps := add(pOps, 2)
                    mstore(add(pVars, dVarOut), mul(varA, varB))
                }
                case 0x23 { 
                    let varA := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let varB := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let dVarOut := add(pVars, pOps)         pOps := add(pOps, 2)
                    mstore(add(pVars, dVarOut), sdiv(varA, varB))
                }
                case 0x24 { 
                    let varA := mload(add(pVars, pOps))     pOps := add(pOps, 2)
                    let dVarOut := add(pVars, pOps)         pOps := add(pOps, 2)
                    mstore(add(pVars, dVarOut), not(varA))
                }
            }
        }


// Memory Functions
        function getMemoryWordAddress(iWord) -> pWord {
            pWord := add(mload(0x40),0x80)
        }
        function loadMemoryWord(iWord) -> value {
            value := mload(add(mload(0x40),0x80))
        }
        function getColor_bits(bitShift, wColorValue) -> color {
            color := getColor(and(0xff, shr(bitShift, loadMemoryWord(wColorValue) )))
        }
        function getFieldData_bitFlag(bitShift, wValue) -> value {
            value := and(0x01, shr(bitShift,loadMemoryWord(wValue)))
        }
        function getFieldData_byte(bitShift, wValue) -> value {
            value := and(0xff, shr(bitShift,loadMemoryWord(wValue)))
        }
        function getFieldData_sub_bits(offset, bitSize, bitShift, wValue) -> value {
            value := sub(and(0xff, shr(bitShift,loadMemoryWord(wValue))), offset)
        }
        function getFieldData_sub_mul_bits(offset, scale, bitSize, bitShift, wValue) -> value {
            value := sub(mul(scale, and(0xff, shr(bitShift,loadMemoryWord(wValue)))), offset)
        }
        function varStore(iSlot, value) {
            mstore(add(getMemoryWordAddress(128), mul(32,iSlot)), value)
        }
        function varLoad(iSlot) -> value {
            value := mload(add(getMemoryWordAddress(128), mul(32,iSlot)))
        }


// --- ------------ ---
// --- START OUTPUT ---
// --- ------------ ---

// DataPack 
// bytes memory dataPackCompressed = hex"01ff08207374796c653d27086c696e656172477208ff02616469656e74073a75726c28237808207472616e73666f07012164000c010008ff0166696c6cff0404272f3e3c087472616e736c6174062069643d277806ff05726d3d27050000040002073b7374726f6b6504003c0000083e3c73746f70ff0108ff0f73746f702d6308ff106f6c6f723a230800ff082fff033e3c0820786c696e6b3a6808ff137265663d2723082f673e3c2f673e3c06ff0bff09652808ff11ff12ff03ff0a08ff08757365ff147806ff06000b0800083d272d3330302720072101012100002008636c69705061746805ff0e35010007ff0e36030201000666696c74657207273e3c7061746805000b01000008206f706163697479087363616c65282d310801211aff0e330100080002ff1b0201ff0c08ff0d2d7769647468063d27363030270820636c69702d706108ff2874683d277572050321080221086c6c69707365ff07052720643d2707ff082f673e3c670400030002083e3c72656374207808ff2fff1a79ff1a7708ff3069647468ff2708ff3120686569676808272063793d270027082150010a010e08270800ff1900090e0000030001210729272063783d2706ff296c28237805ff223d270007ff0bff232c312907ff332072783d2707ff0d2d6c696e6507ff340eff190821042164000c06272072793d2706ff0e3401ff2508ff0166696c6c3a6e0801210a000c01000007ff3274ff27ff07070002060504030204021a1601063a726f756e64062132ff06000b03273e3c0527ff16302c05ff2109080004ff0c0ad807ff416f6e65ff0d07293bff1fff043203210001082720ff1c556e697408ff4f733d2775736508ff5072537061636508ff2dff39ff20ff0708ff3c6a6f696eff46080414020ad8041702047061746804ff360000056174696f6e05012114ff1d07ff514f6e55736503302c2d0827ff01636f6c6f7208ff5b2d696e74657208ff5c706f6cff572d08ff5dff1f733a735208ff5e4742ff48666508ff5f47617573736908ff60616e426c757208ff6120737464446508ff627669ff573d27082720726573756c7408ff643d27626c757208ff65ff082fff1f3e08ff48616e696d617408272072657065617408ff68436f756e743d08ff6927696e64656608ff6a696e6974652708ff59ff2020643d2708726f74617465280008ff3d64001dff562908140100001dff353a08ff3dff3664002914080111ff450fff450e08ff71ff450aff450805000b08000004ff08ff150327ff17067363616c652806ff183336ff49060408020ada210300010a07ff183239ff492007302c352c2d3630072920ff232c312907ff210a0a000023072100000a0cff5607001dff0c199f2105ff4865ff2b05012115ff1d04ff4e23010301ff0c083d27687474703a2f08ff842f7777772e7708ff85332e6f72672f08ff663cff1fff0a3208ff67654d6f74696f08ff886e206475723d0873ff6b20ff553d270827ff0735ff4d3529083429ff0dff04342908ff8cff53ff3c636108ff8d70ff46ff263a082c36302c352c363008ff04323329ff263a08ff4cff90302e3827080038ff368000180108212802210a013a0208082139ff19000b0f080000090900ff7f0006ff12ff03ff0a06757365ff147806ff2e0641220006ff210a09000006ff7001ff353a0527ff110023052927ff38330500001dff4b05012115ff1e0501211dff4005012116ff1e05000910ff0c0429ff486703302c30072720786d6c6e7307ff18333127ff1607012102000cff8307021a18ff72021a07082114ff06010a040605040304464646460429ff086704ff08ff5504ff00ff00040009080003673e3c0321ff3605ff082fff1c05ff1cff0a3305ff0e34010005ff3e1dff7905ff3e15ff7905ff3603000c05012119ff1d03ff2c4d04ff263a3104ff5a313004ff16002904ff24ff2e04ff4a082304000c09000302010003000023030400020330303003ff7531082076657273696f6e083d2731303025272008ff8632ffc22f737608ff01ff1fff0432340863ff5a352c332c35083130ff3b3131ff3f083736ff3b3730ff3f08ff7b2c352c2d363008ff9c38ffabff383308ffbbff486369726308ffcd6c6520723d27083527ff0bff76302e08ffcf31352927ff0708ffd03139ff4d372908ff04323029ffb92e08ff4cffd235ff2c0008ff91ff0bff6dffac0829ff0dff0432312908ffd5ff53ffb9ff2c08012114ff1eff0601082102000b0a00ffae080008ff930120003a08040b020ada211e000808210101ff3e200008ffdb000a01ff362a08ffdc000b0100ff19082164010a0108003a082105ffa11546ffc108041402192d0417020802210400090dff5608ffb601ff4bff4e090806050d0605040e11080b0c0001050dffa90800190aff25206221082109082128ff1900052c305aff0805ff8034ff3705ff0865ff2b0527ff3aff740501211cff40052104ff420b05012116ff1d040220020a04ff6eff6f0300042307ffc82c332c306307ffb13e3c67ff3807ff8bffb800633607ff082fffafff9707302c31ff5a373007ff18333727ff1607ff16ffa329ff20071bff0e410000320702ff4e3a0201200709ff9d2196ffae07ff21090900092307ffe411010b022007002510120f0d0003ff0a330300090c0000001617ff00deb81e1b1aded2cff00afafa100f0f604f870000009d9df0161f2d6a6aa0ededede9928b121212050505f6f6f6d9b4f3383838d4c2ff007326822e253cb17b5d70aeff00d5ddecfcfcfc4986e964a4f7e0edff000f408a5f5fce1f27321b294b2a3f6f9a847edbd2d26354557c6e6adfc7f53d3d3dd4b2f5573e70f0f0f0415d81c9d1decedff0021c3040354e6e9797dd182c498e8ef0402f7523232f73635ed5d0cde7dcda6a514d685550c1a7dc2d24261c12135757571f1a19171617dee2e73c84e29696f3621e6b40406d262626c6d0e1ced6e320252e9ba8bf34455f2d35434459792929299a4c5eeeb8ff00efdff001fef0ff00be73d3eab1fbbe6dd5522e5c944da829183e572960361b34ff00f4b8dfdcceff00f8ebc0a46df8eba0b19b59615538b191683f2224352a18231e158f6a5669a27cd6dece4171504558376a9a7a44573520231f313a341f2e24d8d8f3e9e9f2ebebff00b6b6eccecef39788d37979b4a8a8f040405e7575a9f5f5f5b4c7e4d7e0ef8a9dc1a3b8d78288ba3e3e6056567b27273a58586f7594f0dccade1d24491f2538bb91d4151537808080ff00f9d6aee9f9a3faca669cff000209ef00372c00003d5b175601490000332300003f581c50014e05002f061a3f47561960064f0100342000003b562f5f054d03003214005f005a19640446050036307259634f265b054d0500342b400036582559034f00003831003f225c15630646080d3b25001a00541466194904003221b94c4850375b1156030038304000404f2159004b070035252e1e1f54295c0246050f38250000395418611d50060d37247264005529631446050f3728000078532758184a02003232b02b78531f440b4d0b002d1e64003b5128570b6201003220000040573562045003650a501957253117320734281b650a501e322e1000321446141d650d4d1e392c110132114500177d0a4c1e2c220a0e320035201d830a491e37320b0d340a32161e650a501e471c1d1d321132251c650651342c220a0e320027331900063f14003603167c3e4633190c0c3f2c3a0018173e323339195f064c402c220a0d0000332819650a502357251a0532053a281b480d501243362412910e542a19650a501e53202f08340a5019198906541a4d362e0e2d253725190a08043c12151404280c080414120f150528060805280712140528080d056411051501260908045a121015052811080600120a1408250b0a063211021404250c0d045a16001402280908002810111303280908043c0e101305280c080432120f15042800090432021615022806050446030f1408280c0001640f11160b281e0c1c151e1d160f0d0d1e07018a43080a0b00d5430a0508016243060f0c00d5160e050b0078000e0a0c012b03080b0d00d5260f0a0a01001303080d013258000e0d211e6404071204211e640407120300006604071404000066040714030a090807ffa90301ffbf0d131211100f0e0d0c030a030b1f1e1d1c1b1a19181715161514101027262524232217202120000c3231302f2e2d2c2b292a29283d3c3b3a393837363533343328434241401b1a013f01173e17004b4a064849484647464445442857565554535251504f4d4e4d4c6261605f5e5d5c5b5a5859584c0a6c066b6a696867666465646377767574737271706f6d6e6d14807f067e7d7c7b7a1a7879782806068786068584834f8182811488898a8b068c000103050204081009000102060c10302024284080c03c3f786d6cffc43d27312e302720656e636f64696e673d275554462d3827207374616e64616c6f6e653d276e6f273f3e3c737667207769647468ffc5686569676874ffc576696577426f783d27302030203330302033303027ffc43d27312e31ffa43a786c696e6bff86313939392f786c696e6bffa4ffc667ffa43a737667ffc667ff48646566733e3cff03ff0a31ff7532ff7533ff7534ff7535ff7536ff7537ff7538ff7539ffc330ffc331ff9b3031ffc2303830ff963132ffc333ffc334ffc335ffc336ffc337ffc338ff9bffaa46460023ffc2ffc2ff963139ff9bffaa46463030ff12ff03ff110023333333333333ff963230ff9b4442373039330023453338464142ff963231ff753232ff753233ff9b353035303530ff12ff1fff0a3234ff63302030ff8735ff63302e3520302e35ff8736ff63352035ff8737ff63332033ff663c2f64656673ff4331ffabff163135302e302c3135302e302920ff7631ffa2ffc729ff89273137ff8a4d322c35fff1ff5a352d332c352d33ffe7ff1cff0a3238ff6c4d002c004c005afff232382927ff4332ffabff39ff20ff0a323927ff4cff043529ffb934ff2c00ff7a323729ff7a353429ff7a383129ff7a31303829ff523729ffb8005affacff073829ffb8005aff2dff39ff4867fffe30ff20fffe31fff3302c31352c36302c32302c36302c323063302c352d36ffba2d36ffba7affa5202d342c20313829ffa5202d382c333629ffa52d31322c353429fff4333027ff3aff523429ffb8004800ffe830272063793d27313635272072783d2700ff3f3530ff74ffafff55ff073131ff4d362927ff38323829ffb82d39ff5a3563ffa32c34ff5a34302c39ff5a34306335ffa32c39302c34302c39302c343063ffa32c31302c35302c31302c3730632d32302cff5a37302c33ffba302c3330632d33302cff5a38ff5a33ffbaff5a333063ff5a32fff52c31ff5a37307aff74ffaf67ff0bff76002c31ffa23e3cffafffb232ff6c005335ffa32cffa35affb1ff433133ff9c32ffabfffe33ff89273331ff8a4d302c3363ff5a332c322c332c322c3063ff5a332d322c332d32ffe7ffb234ff6c005affb1ff433134ff9c3429ff74ffaf67ff3a27ff433132ff9c3229ff183333ff742fffaf67ffc729ff48ffb235ff6c007afff233352927ff4333ffabff39ffe830ff3b3630ff3f3630ff52ff8e36ffb8302c004c2d3132342c004c3132342c00ffe8ffc93131ffe934ff372dffc93131ff523429ff2c004c3135ff5a3135305aff2dff39ff8036ff372d3638ff3b3735ff3f313030ff52ff8e3132ffb82d31362c004c31362c00ff20ff07ff8e3132ffb8302c354c2d31362c00ff8039ff3730ff3b3136ff3f3335ffe93130ff372dffca313030ffe939ff37ffca313030ff2d3e3cff55ff3927fffe36fff3ffa3ff8f2c3563ffcb2c357aff77313429ff772d313429ff7730ff7cff773134ff7cff772d3134ff7cffacff3927fffe37ff8bffb82d32302c006330ff8f2c352c363063352cffcb7afff631352c3429fff633ffa329ff74ff15ffaf67ffbb20ff0965282d002c2d0029ff48ffb238ff59ff20fffe3927ffbb20ff76312c312920ff6d29ff2c007aff6765206174747269627574654e616d653d27642720747970653d27786d6cff6b206475723d27347327206b657954696d65733d27303b302e343b302e353b302e363b31272076616c7565733d2720002000207a3b2000207a20ff082fff553e3c2fff1cff433136ffcc38ffa2ff1600ffa2ff0a3430ff803138ff3700ff3b00ff3f00ff89273230ff8a4dffa3fff1ffba2d362c31302d36ffe72f656c6c697073653e3cffaf67ffce32ffd1ff2dffce31ffd1ff74ff152fffaf757365ff0a343127ff1478333927ff017374726f6b652d77696474683a32ff0dff043137293b66696c6c3a7472616e73706172656e74ff2dff162d002920ff096528002927ff3274ff27ff3a27ff073135ffcc382927ff3aff4867ff1600ff7cff48ff973430ff74ff973431ffea67ff16302c00ffa2ff16ffa3ffa2fff7ffd3ffacff0a343227ffd3ff18343227ff3aff0867ff39ff4930ffa2ff0a343327ffbbff20ffd4ffd4ff91ff3927ff0bff6dfff43433ffeaff1567fff7ff073231ffd6005affacff0a343427ff073232ffd600ff183434ffea2fffaf2f7376673e003d234323083f23084023084623084423084723084523083023003e00083123004200080200002100ffbc01272d2310210bff9200012c23001301000e210301211cffb3112120ff24092128ff24082108ff240d200e08090a1c1000131100ffee0dff2e016d2b230bffb01dffb32b2118ff240c1c0b00132b00ffee0cff2e01b3030a0201f9200e090809030902023f200b090a0f030f020285131110ffee0d0813110b0220020908ff2e02cb0308020311132b0bffee0cff2e0357132b0b022002090cff2e039e2201000080ff2e03ef210701211dffb32d2130ff2408202d0f0800200b0900ff2e0436210601211dffb32c202c0a0800200b0a00ff2e047d2138ffbc04c4210eff92000221fff8ff36fff8000920020109ff2e050b20020901ff2e05522140ffbc05992f23022200ffadff000121000020ffbfff2e05f022ffadff0000012200ffadff000020ffbfff98333333ff2e06872158ff24ff98db7093ff98e38fabff2e06de2148ffbc07252150ffbc076c2160ff24ff98505050ff2e07bb2118ff581e2120ff581f2150ff58202128ff5827231f27092164ff2a40ffd70a091f000b010008ff4e0a011e000c08000821ffc01eff79271fff730901ffc01e002a2148ff58ff06000b1e0029ff4e251e2a2901200c210affffff9dff4e0a011eff730a09ffc01f0028251f282727200d2132000a0d0008ff780a000a0cff4bff781effffff4b219600090d0008ff781e000a0cff9d0408020adc2104ffeb0b592132fff90a211effff0009210700090d0008ffec090005ffd8041d090bffec0b0003ffd8021d0901050908050403020108020ba0ff1b11ff830c89211effffffd90c0800091d0900ffc10ad8219600090dffd90d080008ff786e0009fffa0bffda0afffa0a040a020cac0409020ad8ff786e000a09ff4bffda0909ff4b040a020cd1ffb01cff400ce6211effddffff00001dff361a000a01ff4b2196ffdd00090dff3614000aff830d2f2102ffeb0e3f2146fff908090c08001dff4b040d020e620a0c0800ffc10ada040c020ad82105ff73090dff0c0e621d0c00ffc10cd12101ffeb0e642164022132013a020120ffa60e9a210aff9200022101001dff3601002002ff830f952137ff2aff3614ff1e1affb015ff1d0a2108ff5811211eff2a10012114ff1e13231a13090a091a012100000a1100000c010008ffec110026ff8211010a131aff730901ffc01100252100000a1100ff730a09ffc013002421000425042625110a1c251a1a24130a1b081c1b2158ff58082118ff810e2132ff2a20ff9e142104ff2a28ff9e1dff4e251125260108192513241a1a08172129ff2a08ff9e000919000f2110ff81000a170018ffef0f1c000dffef181b000c231c0d08ffb40c1bffbd1b0c09ffb40d1cff99231c0805231bfff00d0803230cff440d0c2130ff8110ff9a0f19000bff9a18170009230d0b08ff3e10ff79090cffbd0c090aff3e10ff790b0dff7d0d0805230cfff00b08032309ff440b092118ff2a38ff9e15230b1908ffb51709ffbd09170affb5190bff7d0b08052309fff01908032317ff441917020fdc2148ff81083a1c19080a3a1b17080c080a0c2150ff81092158ff8108ffde1c190012ffde1b170010230a1221230c10223a210f09082200000195042104ff2a60012115ff0e370403ffbfff06ffae163a22180918ffef160a000dffef180c000b230a0d08ffb40b0cffbd0c0b09ffb40d0aff99230a0805230cfff00d0803230bff440d0b2122ff2a40ff9e0fff9a1612000cff9a18100008230d0c09ff3e0fff79080bfffb0b080aff3e0fff790c0dff7d0d0905230bfff00c09032308ff440c08230c1209ffb51008fffb08100affb5120cff7d0c09052308fff01209032310ff4412100210f5ff4e08011a06261a252411132138ff580b23111e0823131f0a213cff2a30ffd70a1f13ff4a020a1e11ff210a0a00090a1f13ff210a0800080a1e11ff21090a00013a02080b002311000a3a09010b00231300042164003a0802ffc01e00082164003a0109ffc01f0002060a0408021e1fff4e062a28292701271d29051d2a031d1e010605270328011f1d08051d0a031d1101060502030401131d25051d26032100001d0001060524031a011a0212642101ff9f12e1212508210dff2a40ffa0ffae10213cffa1130e2104ff9f133204100213a12164ffa113a8ffc10cd12105ff9f13ae2106ffa113dcffc1141cff1b2cff831440081c1b2114000a210005210f0009220004210f0009210003210f000922ff441917021462ff1b2dff8314802108ffed172148000a17ff0c14af2103ff9f14d4ffdf0adaff9301200a040a020ad8215000091000080408020ada1d0a00ffc10ad80408020cd12102ff9f154bffdf0cd1ff1b2bff8315c1041a0215ee2132000a17ff0c162fffc1166f210f003800012a23001a01ff25169a211e00091eff9d2105000a1fff0c16d1ff1b02ff83182d211e000a1aff0c1868ffb016ff1d14ff54191fffe01930ff54198a2140ff2a28ffa00a21b409216408216401220000013a000c0100000c0800000b0900000b0aff0c199f2110ffed0d1d0d0cff7e4801001101112103ff2a18ffa0082120ffed091d0802ffb064ff213a02090012ff470c0019ff47120004ff4e260c04191201120f010fff470d0016ff471200ffe12616120dffbf0e010e1d0808ffb064ff213a0908000bff470b0015ff470d0003ff4e260d15030b010b0a010aff470c0005ff470b0013ff7e26050b0c1301000801080219a6ff72ffa718ff7e080100021a162102ffbe042101ffbe02ffb001ffbe00060c0419ffbf021a162101ffbe042102ffbeffe10616040dffbf021a16ff4e060d15030b010b021a16ff7e06050b0c130100ffa718ff72021a1dff541ac62108ff2a30ffa0090409021afa2108ff2a38ffa0080408021b01ffb017ff1dffa61b082108012117ff1dffa61b0fff4e090d09000901ffe20108000912ffb6ff831b93ff4e090109ffffffe20b08000901ffb6ff831c03ff541ce2ffe01cefff541db30410021e35ffb018ff1d0009100002290210270a2100030a101002ff4e0a0a10000703ffbf021eb22111ff2a18012118ff1e0c2108012118ff1d0d2102ff2a10012118ff1e00090a00022902102709ff820d08ff3e0cff79090aff210a08000b230a0908ff3e0cff560a0d00ff4a002100070a0a1006ff820b05230aff79011004230d0b032309ff790110020a0910000507ffa9020d00021efc2e2302ff1b02ff831f3c2110ffb7091d09082105ff420b08ff4b2118012119ff0e35ff831f7b2111ff7f12ff2a30012119ff1e0a2196ff06000b09000d2120ffb70c2128ffb70b230d0c08ff3e0aff560a0b00ff4a08ff820b09ff3e0aff790c0dff99230d0805ff82fff00c080e230b00112100ffe30c0b021fcb2108ffb70f2111092102ff94ff95062109ff420b0e00032109ff42fffc1bffb019ff1d0a2102ffe511092101ff94ff95ffe30c0b02201b2103ffe511092103ff94ff9506214bff06000b0e0003214bff0600fffc77ff4e0801102109001d000c210b000a10000dff820cffa80d10ffbd100d092114ff06012100000a0c00ff99ff82081123100012230c080e230d000f0611120e0f0c0d210b000a100009210900230c00ffa8090dff4a0a230d090b2114ff06082109010a010cff730a0bffc00c0a05230d000421090123010a0323090002210901ffa902010921090121ffc00100ffa81009ff4a0a2309100b2114ff0608ffb009000a0100ff730a0b000021090123010a0523090004ff820a0323100002ff4effa90201100221332100042114002504110e0c000a2114fffd09210100090a0005ffe60a09000bffe6090a0003210b08213cff19000a0900022100042150002504110e0cff3650fffd00050a09050b03ffbf022197";
// bytes memory dataPack = hex"";
// ^-- Move to Solidity Function




            // Text
            function writeOutput_text(iTextStart) {
                let p := mload(0x00)

                // Write text 1 byte at a time
                for { let iText := iTextStart } true { iText := add(1, iText) } {
                    let t := and(0xff, mload(add(
                        loadMemoryWord(4), // DataPack[text]
                        iText)))
                    
                    if iszero(t) {
                        break
                    }

                    mstore(p, t)
                    p := add(1, p)
                }

                mstore(0x00, p)
            }
    
    

    
            // Colors
            function getColor(iColor) -> color {
                color := and(0xffffff, mload(add(
                        loadMemoryWord(3), // DataPack[colors]
                        mul(3,iColor))))
            }
    


            // head - Select Data
            function selectData_head(breedData) -> data {
                
                let rvs_head         := getBreedData_b_head(breedData) 
                if not(rvs_head) { rvs_head := getRvsValue(0x20) }
                let iValue := mod(15, rvs_head)
                

                // Load the data for the selected head
                data := mload(add(
                        add(loadMemoryWord(2), 0), // DataPack[head]
                        iValue))
                // Keep 96 bits (8 bits * 12 fields)
                data := shr(160, shl(160, data))

                
                // [0]: 00372c00003d5b1756014900
                // {"name":"round","fhy":-55,"tplx":73,"tply":-29,"chkx":86,"chky":23,"chny":91,"chkc_100":1,"chko_100":0,"chnc_100":-100,"chno_100":44,"bw_100":55.00000000000001,"eeo_100":0}
                //        fhy:   -55 = 0x00 - 55
                //       tplx:    73 = 0x49
                //       tply:   -29 = 0x01 - 30
                //       chkx:    86 = 0x56
                //       chky:    23 = 0x17
                //       chny:    91 = 0x5b
                //   chkc_100:     1 = 0x3d - 60
                //   chko_100:     0 = 0x00
                //   chnc_100:  -100 = 0x00 - 100
                //   chno_100:    44 = 0x2c
                //     bw_100:    55 = 0x37
                //    eeo_100:     0 = 0x00
                
                // [1]: 00332300003f581c50014e05
                // {"name":"oval","fhy":-50,"tplx":78,"tply":-29,"chkx":80,"chky":28,"chny":88,"chkc_100":3,"chko_100":0,"chnc_100":-100,"chno_100":35,"bw_100":51,"eeo_100":0}
                //        fhy:   -50 = 0x05 - 55
                //       tplx:    78 = 0x4e
                //       tply:   -29 = 0x01 - 30
                //       chkx:    80 = 0x50
                //       chky:    28 = 0x1c
                //       chny:    88 = 0x58
                //   chkc_100:     3 = 0x3f - 60
                //   chko_100:     0 = 0x00
                //   chnc_100:  -100 = 0x00 - 100
                //   chno_100:    35 = 0x23
                //     bw_100:    51 = 0x33
                //    eeo_100:     0 = 0x00
                
                // [2]: 002f061a3f47561960064f01
                // {"name":"diamond","fhy":-54,"tplx":79,"tply":-24,"chkx":96,"chky":25,"chny":86,"chkc_100":11,"chko_100":63,"chnc_100":-74,"chno_100":6,"bw_100":47,"eeo_100":0}
                //        fhy:   -54 = 0x01 - 55
                //       tplx:    79 = 0x4f
                //       tply:   -24 = 0x06 - 30
                //       chkx:    96 = 0x60
                //       chky:    25 = 0x19
                //       chny:    86 = 0x56
                //   chkc_100:    11 = 0x47 - 60
                //   chko_100:    63 = 0x3f
                //   chnc_100:   -74 = 0x1a - 100
                //   chno_100:     6 = 0x06
                //     bw_100:    47 = 0x2f
                //    eeo_100:     0 = 0x00
                
                // [3]: 00342000003b562f5f054d03
                // {"name":"squarish","fhy":-52,"tplx":77,"tply":-25,"chkx":95,"chky":47,"chny":86,"chkc_100":-1,"chko_100":0,"chnc_100":-100,"chno_100":32,"bw_100":52,"eeo_100":0}
                //        fhy:   -52 = 0x03 - 55
                //       tplx:    77 = 0x4d
                //       tply:   -25 = 0x05 - 30
                //       chkx:    95 = 0x5f
                //       chky:    47 = 0x2f
                //       chny:    86 = 0x56
                //   chkc_100:    -1 = 0x3b - 60
                //   chko_100:     0 = 0x00
                //   chnc_100:  -100 = 0x00 - 100
                //   chno_100:    32 = 0x20
                //     bw_100:    52 = 0x34
                //    eeo_100:     0 = 0x00
                
                // [4]: 003214005f005a1964044605
                // {"name":"fluffy","fhy":-50,"tplx":70,"tply":-26,"chkx":100,"chky":25,"chny":90,"chkc_100":-60,"chko_100":95,"chnc_100":-100,"chno_100":20,"bw_100":50,"eeo_100":0}
                //        fhy:   -50 = 0x05 - 55
                //       tplx:    70 = 0x46
                //       tply:   -26 = 0x04 - 30
                //       chkx:   100 = 0x64
                //       chky:    25 = 0x19
                //       chny:    90 = 0x5a
                //   chkc_100:   -60 = 0x00 - 60
                //   chko_100:    95 = 0x5f
                //   chnc_100:  -100 = 0x00 - 100
                //   chno_100:    20 = 0x14
                //     bw_100:    50 = 0x32
                //    eeo_100:     0 = 0x00
                
                // [5]: 0036307259634f265b054d05
                // {"name":"scruffy","fhy":-50,"tplx":77,"tply":-25,"chkx":91,"chky":38,"chny":79,"chkc_100":39,"chko_100":89,"chnc_100":14.000000000000002,"chno_100":48,"bw_100":54,"eeo_100":0}
                //        fhy:   -50 = 0x05 - 55
                //       tplx:    77 = 0x4d
                //       tply:   -25 = 0x05 - 30
                //       chkx:    91 = 0x5b
                //       chky:    38 = 0x26
                //       chny:    79 = 0x4f
                //   chkc_100:    39 = 0x63 - 60
                //   chko_100:    89 = 0x59
                //   chnc_100:    14 = 0x72 - 100
                //   chno_100:    48 = 0x30
                //     bw_100:    54 = 0x36
                //    eeo_100:     0 = 0x00
                
                // [6]: 00342b400036582559034f00
                // {"name":"plain","fhy":-55,"tplx":79,"tply":-27,"chkx":89,"chky":37,"chny":88,"chkc_100":-6,"chko_100":0,"chnc_100":-36,"chno_100":43,"bw_100":52,"eeo_100":0}
                //        fhy:   -55 = 0x00 - 55
                //       tplx:    79 = 0x4f
                //       tply:   -27 = 0x03 - 30
                //       chkx:    89 = 0x59
                //       chky:    37 = 0x25
                //       chny:    88 = 0x58
                //   chkc_100:    -6 = 0x36 - 60
                //   chko_100:     0 = 0x00
                //   chnc_100:   -36 = 0x40 - 100
                //   chno_100:    43 = 0x2b
                //     bw_100:    52 = 0x34
                //    eeo_100:     0 = 0x00
                
                // [7]: 003831003f225c1563064608
                // {"name":"chonker","fhy":-47,"tplx":70,"tply":-24,"chkx":99,"chky":21,"chny":92,"chkc_100":-26,"chko_100":63,"chnc_100":-100,"chno_100":49,"bw_100":56.00000000000001,"eeo_100":0}
                //        fhy:   -47 = 0x08 - 55
                //       tplx:    70 = 0x46
                //       tply:   -24 = 0x06 - 30
                //       chkx:    99 = 0x63
                //       chky:    21 = 0x15
                //       chny:    92 = 0x5c
                //   chkc_100:   -26 = 0x22 - 60
                //   chko_100:    63 = 0x3f
                //   chnc_100:  -100 = 0x00 - 100
                //   chno_100:    49 = 0x31
                //     bw_100:    56 = 0x38
                //    eeo_100:     0 = 0x00
                
                // [8]: 0d3b25001a00541466194904
                // {"name":"slick","fhy":-51,"tplx":73,"tply":-5,"chkx":102,"chky":20,"chny":84,"chkc_100":-60,"chko_100":26,"chnc_100":-100,"chno_100":37,"bw_100":59,"eeo_100":13}
                //        fhy:   -51 = 0x04 - 55
                //       tplx:    73 = 0x49
                //       tply:    -5 = 0x19 - 30
                //       chkx:   102 = 0x66
                //       chky:    20 = 0x14
                //       chny:    84 = 0x54
                //   chkc_100:   -60 = 0x00 - 60
                //   chko_100:    26 = 0x1a
                //   chnc_100:  -100 = 0x00 - 100
                //   chno_100:    37 = 0x25
                //     bw_100:    59 = 0x3b
                //    eeo_100:    13 = 0x0d
                
                // [9]: 003221b94c4850375b115603
                // {"name":"rectangular","fhy":-52,"tplx":86,"tply":-13,"chkx":91,"chky":55,"chny":80,"chkc_100":12,"chko_100":76,"chnc_100":85,"chno_100":33,"bw_100":50,"eeo_100":0}
                //        fhy:   -52 = 0x03 - 55
                //       tplx:    86 = 0x56
                //       tply:   -13 = 0x11 - 30
                //       chkx:    91 = 0x5b
                //       chky:    55 = 0x37
                //       chny:    80 = 0x50
                //   chkc_100:    12 = 0x48 - 60
                //   chko_100:    76 = 0x4c
                //   chnc_100:    85 = 0xb9 - 100
                //   chno_100:    33 = 0x21
                //     bw_100:    50 = 0x32
                //    eeo_100:     0 = 0x00
                
                // [10]: 0038304000404f2159004b07
                // {"name":"teeny","fhy":-48,"tplx":75,"tply":-30,"chkx":89,"chky":33,"chny":79,"chkc_100":4,"chko_100":0,"chnc_100":-36,"chno_100":48,"bw_100":56.00000000000001,"eeo_100":0}
                //        fhy:   -48 = 0x07 - 55
                //       tplx:    75 = 0x4b
                //       tply:   -30 = 0x00 - 30
                //       chkx:    89 = 0x59
                //       chky:    33 = 0x21
                //       chny:    79 = 0x4f
                //   chkc_100:     4 = 0x40 - 60
                //   chko_100:     0 = 0x00
                //   chnc_100:   -36 = 0x40 - 100
                //   chno_100:    48 = 0x30
                //     bw_100:    56 = 0x38
                //    eeo_100:     0 = 0x00
                
                // [11]: 0035252e1e1f54295c024605
                // {"name":"cheeky","fhy":-50,"tplx":70,"tply":-28,"chkx":92,"chky":41,"chny":84,"chkc_100":-28.999999999999996,"chko_100":30,"chnc_100":-54,"chno_100":37,"bw_100":53,"eeo_100":0}
                //        fhy:   -50 = 0x05 - 55
                //       tplx:    70 = 0x46
                //       tply:   -28 = 0x02 - 30
                //       chkx:    92 = 0x5c
                //       chky:    41 = 0x29
                //       chny:    84 = 0x54
                //   chkc_100:   -29 = 0x1f - 60
                //   chko_100:    30 = 0x1e
                //   chnc_100:   -54 = 0x2e - 100
                //   chno_100:    37 = 0x25
                //     bw_100:    53 = 0x35
                //    eeo_100:     0 = 0x00
                
                // [12]: 0f38250000395418611d5006
                // {"name":"lemon","fhy":-49,"tplx":80,"tply":-1,"chkx":97,"chky":24,"chny":84,"chkc_100":-3,"chko_100":0,"chnc_100":-100,"chno_100":37,"bw_100":56.00000000000001,"eeo_100":15}
                //        fhy:   -49 = 0x06 - 55
                //       tplx:    80 = 0x50
                //       tply:    -1 = 0x1d - 30
                //       chkx:    97 = 0x61
                //       chky:    24 = 0x18
                //       chny:    84 = 0x54
                //   chkc_100:    -3 = 0x39 - 60
                //   chko_100:     0 = 0x00
                //   chnc_100:  -100 = 0x00 - 100
                //   chno_100:    37 = 0x25
                //     bw_100:    56 = 0x38
                //    eeo_100:    15 = 0x0f
                
                // [13]: 0d3724726400552963144605
                // {"name":"silky","fhy":-50,"tplx":70,"tply":-10,"chkx":99,"chky":41,"chny":85,"chkc_100":-60,"chko_100":100,"chnc_100":14.000000000000002,"chno_100":36,"bw_100":55.00000000000001,"eeo_100":13}
                //        fhy:   -50 = 0x05 - 55
                //       tplx:    70 = 0x46
                //       tply:   -10 = 0x14 - 30
                //       chkx:    99 = 0x63
                //       chky:    41 = 0x29
                //       chny:    85 = 0x55
                //   chkc_100:   -60 = 0x00 - 60
                //   chko_100:   100 = 0x64
                //   chnc_100:    14 = 0x72 - 100
                //   chno_100:    36 = 0x24
                //     bw_100:    55 = 0x37
                //    eeo_100:    13 = 0x0d
                
                // [14]: 0f3728000078532758184a02
                // {"name":"chubby","fhy":-53,"tplx":74,"tply":-6,"chkx":88,"chky":39,"chny":83,"chkc_100":60,"chko_100":0,"chnc_100":-100,"chno_100":40,"bw_100":55.00000000000001,"eeo_100":15}
                //        fhy:   -53 = 0x02 - 55
                //       tplx:    74 = 0x4a
                //       tply:    -6 = 0x18 - 30
                //       chkx:    88 = 0x58
                //       chky:    39 = 0x27
                //       chny:    83 = 0x53
                //   chkc_100:    60 = 0x78 - 60
                //   chko_100:     0 = 0x00
                //   chnc_100:  -100 = 0x00 - 100
                //   chno_100:    40 = 0x28
                //     bw_100:    55 = 0x37
                //    eeo_100:    15 = 0x0f
                
                // [15]: 003232b02b78531f440b4d0b
                // {"name":"skinny","fhy":-44,"tplx":77,"tply":-19,"chkx":68,"chky":31,"chny":83,"chkc_100":60,"chko_100":43,"chnc_100":76,"chno_100":50,"bw_100":50,"eeo_100":0}
                //        fhy:   -44 = 0x0b - 55
                //       tplx:    77 = 0x4d
                //       tply:   -19 = 0x0b - 30
                //       chkx:    68 = 0x44
                //       chky:    31 = 0x1f
                //       chny:    83 = 0x53
                //   chkc_100:    60 = 0x78 - 60
                //   chko_100:    43 = 0x2b
                //   chnc_100:    76 = 0xb0 - 100
                //   chno_100:    50 = 0x32
                //     bw_100:    50 = 0x32
                //    eeo_100:     0 = 0x00
                
                // [16]: 002d1e64003b5128570b6201
                // {"name":"wide","fhy":-54,"tplx":98,"tply":-19,"chkx":87,"chky":40,"chny":81,"chkc_100":-1,"chko_100":0,"chnc_100":0,"chno_100":30,"bw_100":45,"eeo_100":0}
                //        fhy:   -54 = 0x01 - 55
                //       tplx:    98 = 0x62
                //       tply:   -19 = 0x0b - 30
                //       chkx:    87 = 0x57
                //       chky:    40 = 0x28
                //       chny:    81 = 0x51
                //   chkc_100:    -1 = 0x3b - 60
                //   chko_100:     0 = 0x00
                //   chnc_100:     0 = 0x64 - 100
                //   chno_100:    30 = 0x1e
                //     bw_100:    45 = 0x2d
                //    eeo_100:     0 = 0x00
                
                // [17]: 003220000040573562045003
                // {"name":"blocky","fhy":-52,"tplx":80,"tply":-26,"chkx":98,"chky":53,"chny":87,"chkc_100":4,"chko_100":0,"chnc_100":-100,"chno_100":32,"bw_100":50,"eeo_100":0}
                //        fhy:   -52 = 0x03 - 55
                //       tplx:    80 = 0x50
                //       tply:   -26 = 0x04 - 30
                //       chkx:    98 = 0x62
                //       chky:    53 = 0x35
                //       chny:    87 = 0x57
                //   chkc_100:     4 = 0x40 - 60
                //   chko_100:     0 = 0x00
                //   chnc_100:  -100 = 0x00 - 100
                //   chno_100:    32 = 0x20
                //     bw_100:    50 = 0x32
                //    eeo_100:     0 = 0x00
                
            }
            
            // ear - Select Data
            function selectData_ear(breedData) -> data {
                
                let rvs_ear          := getBreedData_b_ear(breedData) 
                if not(rvs_ear) { rvs_ear := getRvsValue(0x28) }
                let iValue := mod(11, rvs_ear)
                

                // Load the data for the selected ear
                data := mload(add(
                        add(loadMemoryWord(2), 216), // DataPack[ear]
                        iValue))
                // Keep 104 bits (8 bits * 13 fields)
                data := shr(152, shl(152, data))

                
                // [0]: 650a501957253117320734281b
                // {"name":"plain","eso_100":27,"etox":-1,"etoy":52,"eb_100":7.000000000000001,"ebr_100":0,"esc_100":19,"etc_100":49,"eec_100":13,"eitc_100":53,"esi_100":25,"eti_100":80,"eei_100":10,"eito_100":0}
                //    eso_100:    27 = 0x1b
                //       etox:    -1 = 0x28 - 41
                //       etoy:    52 = 0x34
                //     eb_100:     7 = 0x07
                //    ebr_100:     0 = 0x32 - 50
                //    esc_100:    19 = 0x17 - 4
                //    etc_100:    49 = 0x31
                //    eec_100:    13 = 0x25 - 24
                //   eitc_100:    53 = 0x57 - 34
                //    esi_100:    25 = 0x19
                //    eti_100:    80 = 0x50
                //    eei_100:    10 = 0x0a
                //   eito_100:     0 = 0x65 * 4 - 405
                
                // [1]: 650a501e322e1000321446141d
                // {"name":"upright","eso_100":28.999999999999996,"etox":-21,"etoy":70,"eb_100":20,"ebr_100":0,"esc_100":-4,"etc_100":16,"eec_100":22,"eitc_100":16,"esi_100":30,"eti_100":80,"eei_100":10,"eito_100":0}
                //    eso_100:    29 = 0x1d
                //       etox:   -21 = 0x14 - 41
                //       etoy:    70 = 0x46
                //     eb_100:    20 = 0x14
                //    ebr_100:     0 = 0x32 - 50
                //    esc_100:    -4 = 0x00 - 4
                //    etc_100:    16 = 0x10
                //    eec_100:    22 = 0x2e - 24
                //   eitc_100:    16 = 0x32 - 34
                //    esi_100:    30 = 0x1e
                //    eti_100:    80 = 0x50
                //    eei_100:    10 = 0x0a
                //   eito_100:     0 = 0x65 * 4 - 405
                
                // [2]: 650d4d1e392c11013211450017
                // {"name":"alert","eso_100":23,"etox":-41,"etoy":69,"eb_100":17,"ebr_100":0,"esc_100":-3,"etc_100":17,"eec_100":20,"eitc_100":23,"esi_100":30,"eti_100":77,"eei_100":13,"eito_100":0}
                //    eso_100:    23 = 0x17
                //       etox:   -41 = 0x00 - 41
                //       etoy:    69 = 0x45
                //     eb_100:    17 = 0x11
                //    ebr_100:     0 = 0x32 - 50
                //    esc_100:    -3 = 0x01 - 4
                //    etc_100:    17 = 0x11
                //    eec_100:    20 = 0x2c - 24
                //   eitc_100:    23 = 0x39 - 34
                //    esi_100:    30 = 0x1e
                //    eti_100:    77 = 0x4d
                //    eei_100:    13 = 0x0d
                //   eito_100:     0 = 0x65 * 4 - 405
                
                // [3]: 7d0a4c1e2c220a0e320035201d
                // {"name":"pointy","eso_100":28.999999999999996,"etox":-9,"etoy":53,"eb_100":0,"ebr_100":0,"esc_100":10,"etc_100":10,"eec_100":10,"eitc_100":10,"esi_100":30,"eti_100":76,"eei_100":10,"eito_100":95}
                //    eso_100:    29 = 0x1d
                //       etox:    -9 = 0x20 - 41
                //       etoy:    53 = 0x35
                //     eb_100:     0 = 0x00
                //    ebr_100:     0 = 0x32 - 50
                //    esc_100:    10 = 0x0e - 4
                //    etc_100:    10 = 0x0a
                //    eec_100:    10 = 0x22 - 24
                //   eitc_100:    10 = 0x2c - 34
                //    esi_100:    30 = 0x1e
                //    eti_100:    76 = 0x4c
                //    eei_100:    10 = 0x0a
                //   eito_100:    95 = 0x7d * 4 - 405
                
                // [4]: 830a491e37320b0d340a32161e
                // {"name":"teeny","eso_100":30,"etox":-19,"etoy":50,"eb_100":10,"ebr_100":2,"esc_100":9,"etc_100":11,"eec_100":26,"eitc_100":21,"esi_100":30,"eti_100":73,"eei_100":10,"eito_100":119}
                //    eso_100:    30 = 0x1e
                //       etox:   -19 = 0x16 - 41
                //       etoy:    50 = 0x32
                //     eb_100:    10 = 0x0a
                //    ebr_100:     2 = 0x34 - 50
                //    esc_100:     9 = 0x0d - 4
                //    etc_100:    11 = 0x0b
                //    eec_100:    26 = 0x32 - 24
                //   eitc_100:    21 = 0x37 - 34
                //    esi_100:    30 = 0x1e
                //    eti_100:    73 = 0x49
                //    eei_100:    10 = 0x0a
                //   eito_100:   119 = 0x83 * 4 - 405
                
                // [5]: 650a501e471c1d1d321132251c
                // {"name":"curved","eso_100":28.000000000000004,"etox":-4,"etoy":50,"eb_100":17,"ebr_100":0,"esc_100":25,"etc_100":28.999999999999996,"eec_100":4,"eitc_100":37,"esi_100":30,"eti_100":80,"eei_100":10,"eito_100":0}
                //    eso_100:    28 = 0x1c
                //       etox:    -4 = 0x25 - 41
                //       etoy:    50 = 0x32
                //     eb_100:    17 = 0x11
                //    ebr_100:     0 = 0x32 - 50
                //    esc_100:    25 = 0x1d - 4
                //    etc_100:    29 = 0x1d
                //    eec_100:     4 = 0x1c - 24
                //   eitc_100:    37 = 0x47 - 34
                //    esi_100:    30 = 0x1e
                //    eti_100:    80 = 0x50
                //    eei_100:    10 = 0x0a
                //   eito_100:     0 = 0x65 * 4 - 405
                
                // [6]: 650651342c220a0e3200273319
                // {"name":"slanted","eso_100":25,"etox":10,"etoy":39,"eb_100":0,"ebr_100":0,"esc_100":10,"etc_100":10,"eec_100":10,"eitc_100":10,"esi_100":52,"eti_100":81,"eei_100":6,"eito_100":0}
                //    eso_100:    25 = 0x19
                //       etox:    10 = 0x33 - 41
                //       etoy:    39 = 0x27
                //     eb_100:     0 = 0x00
                //    ebr_100:     0 = 0x32 - 50
                //    esc_100:    10 = 0x0e - 4
                //    etc_100:    10 = 0x0a
                //    eec_100:    10 = 0x22 - 24
                //   eitc_100:    10 = 0x2c - 34
                //    esi_100:    52 = 0x34
                //    eti_100:    81 = 0x51
                //    eei_100:     6 = 0x06
                //   eito_100:     0 = 0x65 * 4 - 405
                
                // [7]: 00063f14003603167c3e463319
                // {"name":"folded","eso_100":25,"etox":10,"etoy":70,"eb_100":62,"ebr_100":74,"esc_100":18,"etc_100":3,"eec_100":30,"eitc_100":-34,"esi_100":20,"eti_100":63,"eei_100":6,"eito_100":-405}
                //    eso_100:    25 = 0x19
                //       etox:    10 = 0x33 - 41
                //       etoy:    70 = 0x46
                //     eb_100:    62 = 0x3e
                //    ebr_100:    74 = 0x7c - 50
                //    esc_100:    18 = 0x16 - 4
                //    etc_100:     3 = 0x03
                //    eec_100:    30 = 0x36 - 24
                //   eitc_100:   -34 = 0x00 - 34
                //    esi_100:    20 = 0x14
                //    eti_100:    63 = 0x3f
                //    eei_100:     6 = 0x06
                //   eito_100:  -405 = 0x00 * 4 - 405
                
                // [8]: 0c0c3f2c3a0018173e32333919
                // {"name":"floppy","eso_100":25,"etox":16,"etoy":51,"eb_100":50,"ebr_100":12,"esc_100":19,"etc_100":24,"eec_100":-24,"eitc_100":24,"esi_100":44,"eti_100":63,"eei_100":12,"eito_100":-357}
                //    eso_100:    25 = 0x19
                //       etox:    16 = 0x39 - 41
                //       etoy:    51 = 0x33
                //     eb_100:    50 = 0x32
                //    ebr_100:    12 = 0x3e - 50
                //    esc_100:    19 = 0x17 - 4
                //    etc_100:    24 = 0x18
                //    eec_100:   -24 = 0x00 - 24
                //   eitc_100:    24 = 0x3a - 34
                //    esi_100:    44 = 0x2c
                //    eti_100:    63 = 0x3f
                //    eei_100:    12 = 0x0c
                //   eito_100:  -357 = 0x0c * 4 - 405
                
                // [9]: 5f064c402c220a0d0000332819
                // {"name":"sideways","eso_100":25,"etox":-1,"etoy":51,"eb_100":0,"ebr_100":-50,"esc_100":9,"etc_100":10,"eec_100":10,"eitc_100":10,"esi_100":64,"eti_100":76,"eei_100":6,"eito_100":-24}
                //    eso_100:    25 = 0x19
                //       etox:    -1 = 0x28 - 41
                //       etoy:    51 = 0x33
                //     eb_100:     0 = 0x00
                //    ebr_100:   -50 = 0x00 - 50
                //    esc_100:     9 = 0x0d - 4
                //    etc_100:    10 = 0x0a
                //    eec_100:    10 = 0x22 - 24
                //   eitc_100:    10 = 0x2c - 34
                //    esi_100:    64 = 0x40
                //    eti_100:    76 = 0x4c
                //    eei_100:     6 = 0x06
                //   eito_100:   -24 = 0x5f * 4 - 405
                
                // [10]: 650a502357251a0532053a281b
                // {"name":"perky","eso_100":27,"etox":-1,"etoy":58,"eb_100":5,"ebr_100":0,"esc_100":1,"etc_100":26,"eec_100":13,"eitc_100":53,"esi_100":35,"eti_100":80,"eei_100":10,"eito_100":0}
                //    eso_100:    27 = 0x1b
                //       etox:    -1 = 0x28 - 41
                //       etoy:    58 = 0x3a
                //     eb_100:     5 = 0x05
                //    ebr_100:     0 = 0x32 - 50
                //    esc_100:     1 = 0x05 - 4
                //    etc_100:    26 = 0x1a
                //    eec_100:    13 = 0x25 - 24
                //   eitc_100:    53 = 0x57 - 34
                //    esi_100:    35 = 0x23
                //    eti_100:    80 = 0x50
                //    eei_100:    10 = 0x0a
                //   eito_100:     0 = 0x65 * 4 - 405
                
                // [11]: 480d501243362412910e542a19
                // {"name":"sphynx","eso_100":25,"etox":1,"etoy":84,"eb_100":14.000000000000002,"ebr_100":95,"esc_100":14.000000000000002,"etc_100":36,"eec_100":30,"eitc_100":33,"esi_100":18,"eti_100":80,"eei_100":13,"eito_100":-119}
                //    eso_100:    25 = 0x19
                //       etox:     1 = 0x2a - 41
                //       etoy:    84 = 0x54
                //     eb_100:    14 = 0x0e
                //    ebr_100:    95 = 0x91 - 50
                //    esc_100:    14 = 0x12 - 4
                //    etc_100:    36 = 0x24
                //    eec_100:    30 = 0x36 - 24
                //   eitc_100:    33 = 0x43 - 34
                //    esi_100:    18 = 0x12
                //    eti_100:    80 = 0x50
                //    eei_100:    13 = 0x0d
                //   eito_100:  -119 = 0x48 * 4 - 405
                
                // [12]: 650a501e53202f08340a501919
                // {"name":"wide","eso_100":25,"etox":-16,"etoy":80,"eb_100":10,"ebr_100":2,"esc_100":4,"etc_100":47,"eec_100":8,"eitc_100":49,"esi_100":30,"eti_100":80,"eei_100":10,"eito_100":0}
                //    eso_100:    25 = 0x19
                //       etox:   -16 = 0x19 - 41
                //       etoy:    80 = 0x50
                //     eb_100:    10 = 0x0a
                //    ebr_100:     2 = 0x34 - 50
                //    esc_100:     4 = 0x08 - 4
                //    etc_100:    47 = 0x2f
                //    eec_100:     8 = 0x20 - 24
                //   eitc_100:    49 = 0x53 - 34
                //    esi_100:    30 = 0x1e
                //    eti_100:    80 = 0x50
                //    eei_100:    10 = 0x0a
                //   eito_100:     0 = 0x65 * 4 - 405
                
                // [13]: 8906541a4d362e0e2d25372519
                // {"name":"round","eso_100":25,"etox":-4,"etoy":55,"eb_100":37,"ebr_100":-5,"esc_100":10,"etc_100":46,"eec_100":30,"eitc_100":43,"esi_100":26,"eti_100":84,"eei_100":6,"eito_100":143}
                //    eso_100:    25 = 0x19
                //       etox:    -4 = 0x25 - 41
                //       etoy:    55 = 0x37
                //     eb_100:    37 = 0x25
                //    ebr_100:    -5 = 0x2d - 50
                //    esc_100:    10 = 0x0e - 4
                //    etc_100:    46 = 0x2e
                //    eec_100:    30 = 0x36 - 24
                //   eitc_100:    43 = 0x4d - 34
                //    esi_100:    26 = 0x1a
                //    eti_100:    84 = 0x54
                //    eei_100:     6 = 0x06
                //   eito_100:   143 = 0x89 * 4 - 405
                
            }
            
            // eye - Select Data
            function selectData_eye(breedData) -> data {
                
                let rvs_eye          := getRvsValue(0x30)
                let iValue := mod(14, rvs_eye)
                

                // Load the data for the selected eye
                data := mload(add(
                        add(loadMemoryWord(2), 398), // DataPack[eye]
                        iValue))
                // Keep 72 bits (8 bits * 9 fields)
                data := shr(184, shl(184, data))

                
                // [0]: 0a08043c1215140428
                // {"name":"round","eyox":40,"eyoy":4,"eyw":20,"eyt":18,"eyb":18,"eyr_100":-4,"eypox":-4,"eypoy":0,"no":-3}
                //       eyox:    40 = 0x28
                //       eyoy:     4 = 0x04
                //        eyw:    20 = 0x14
                //        eyt:    18 = 0x15 - 3
                //        eyb:    18 = 0x12
                //    eyr_100:    -4 = 0x3c - 64
                //      eypox:    -4 = 0x04 - 8
                //      eypoy:     0 = 0x08 - 8
                //         no:    -3 = 0x0a - 13
                
                // [1]: 0c080414120f150528
                // {"name":"fierce","eyox":40,"eyoy":5,"eyw":21,"eyt":12,"eyb":18,"eyr_100":-44,"eypox":-4,"eypoy":0,"no":-1}
                //       eyox:    40 = 0x28
                //       eyoy:     5 = 0x05
                //        eyw:    21 = 0x15
                //        eyt:    12 = 0x0f - 3
                //        eyb:    18 = 0x12
                //    eyr_100:   -44 = 0x14 - 64
                //      eypox:    -4 = 0x04 - 8
                //      eypoy:     0 = 0x08 - 8
                //         no:    -1 = 0x0c - 13
                
                // [2]: 060805280712140528
                // {"name":"squinting","eyox":40,"eyoy":5,"eyw":20,"eyt":15,"eyb":7,"eyr_100":-24,"eypox":-3,"eypoy":0,"no":-7}
                //       eyox:    40 = 0x28
                //       eyoy:     5 = 0x05
                //        eyw:    20 = 0x14
                //        eyt:    15 = 0x12 - 3
                //        eyb:     7 = 0x07
                //    eyr_100:   -24 = 0x28 - 64
                //      eypox:    -3 = 0x05 - 8
                //      eypoy:     0 = 0x08 - 8
                //         no:    -7 = 0x06 - 13
                
                // [3]: 080d05641105150126
                // {"name":"sullen","eyox":38,"eyoy":1,"eyw":21,"eyt":2,"eyb":17,"eyr_100":36,"eypox":-3,"eypoy":5,"no":-5}
                //       eyox:    38 = 0x26
                //       eyoy:     1 = 0x01
                //        eyw:    21 = 0x15
                //        eyt:     2 = 0x05 - 3
                //        eyb:    17 = 0x11
                //    eyr_100:    36 = 0x64 - 64
                //      eypox:    -3 = 0x05 - 8
                //      eypoy:     5 = 0x0d - 8
                //         no:    -5 = 0x08 - 13
                
                // [4]: 0908045a1210150528
                // {"name":"meek","eyox":40,"eyoy":5,"eyw":21,"eyt":13,"eyb":18,"eyr_100":26,"eypox":-4,"eypoy":0,"no":-4}
                //       eyox:    40 = 0x28
                //       eyoy:     5 = 0x05
                //        eyw:    21 = 0x15
                //        eyt:    13 = 0x10 - 3
                //        eyb:    18 = 0x12
                //    eyr_100:    26 = 0x5a - 64
                //      eypox:    -4 = 0x04 - 8
                //      eypoy:     0 = 0x08 - 8
                //         no:    -4 = 0x09 - 13
                
                // [5]: 11080600120a140825
                // {"name":"stern","eyox":37,"eyoy":8,"eyw":20,"eyt":7,"eyb":18,"eyr_100":-64,"eypox":-2,"eypoy":0,"no":4}
                //       eyox:    37 = 0x25
                //       eyoy:     8 = 0x08
                //        eyw:    20 = 0x14
                //        eyt:     7 = 0x0a - 3
                //        eyb:    18 = 0x12
                //    eyr_100:   -64 = 0x00 - 64
                //      eypox:    -2 = 0x06 - 8
                //      eypoy:     0 = 0x08 - 8
                //         no:     4 = 0x11 - 13
                
                // [6]: 0b0a06321102140425
                // {"name":"mean","eyox":37,"eyoy":4,"eyw":20,"eyt":-1,"eyb":17,"eyr_100":-14.000000000000002,"eypox":-2,"eypoy":2,"no":-2}
                //       eyox:    37 = 0x25
                //       eyoy:     4 = 0x04
                //        eyw:    20 = 0x14
                //        eyt:    -1 = 0x02 - 3
                //        eyb:    17 = 0x11
                //    eyr_100:   -14 = 0x32 - 64
                //      eypox:    -2 = 0x06 - 8
                //      eypoy:     2 = 0x0a - 8
                //         no:    -2 = 0x0b - 13
                
                // [7]: 0c0d045a1600140228
                // {"name":"droopy","eyox":40,"eyoy":2,"eyw":20,"eyt":-3,"eyb":22,"eyr_100":26,"eypox":-4,"eypoy":5,"no":-1}
                //       eyox:    40 = 0x28
                //       eyoy:     2 = 0x02
                //        eyw:    20 = 0x14
                //        eyt:    -3 = 0x00 - 3
                //        eyb:    22 = 0x16
                //    eyr_100:    26 = 0x5a - 64
                //      eypox:    -4 = 0x04 - 8
                //      eypoy:     5 = 0x0d - 8
                //         no:    -1 = 0x0c - 13
                
                // [8]: 090800281011130328
                // {"name":"cross","eyox":40,"eyoy":3,"eyw":19,"eyt":14,"eyb":16,"eyr_100":-24,"eypox":-8,"eypoy":0,"no":-4}
                //       eyox:    40 = 0x28
                //       eyoy:     3 = 0x03
                //        eyw:    19 = 0x13
                //        eyt:    14 = 0x11 - 3
                //        eyb:    16 = 0x10
                //    eyr_100:   -24 = 0x28 - 64
                //      eypox:    -8 = 0x00 - 8
                //      eypoy:     0 = 0x08 - 8
                //         no:    -4 = 0x09 - 13
                
                // [9]: 0908043c0e10130528
                // {"name":"almond","eyox":40,"eyoy":5,"eyw":19,"eyt":13,"eyb":14,"eyr_100":-4,"eypox":-4,"eypoy":0,"no":-4}
                //       eyox:    40 = 0x28
                //       eyoy:     5 = 0x05
                //        eyw:    19 = 0x13
                //        eyt:    13 = 0x10 - 3
                //        eyb:    14 = 0x0e
                //    eyr_100:    -4 = 0x3c - 64
                //      eypox:    -4 = 0x04 - 8
                //      eypoy:     0 = 0x08 - 8
                //         no:    -4 = 0x09 - 13
                
                // [10]: 0c080432120f150428
                // {"name":"doe","eyox":40,"eyoy":4,"eyw":21,"eyt":12,"eyb":18,"eyr_100":-14.000000000000002,"eypox":-4,"eypoy":0,"no":-1}
                //       eyox:    40 = 0x28
                //       eyoy:     4 = 0x04
                //        eyw:    21 = 0x15
                //        eyt:    12 = 0x0f - 3
                //        eyb:    18 = 0x12
                //    eyr_100:   -14 = 0x32 - 64
                //      eypox:    -4 = 0x04 - 8
                //      eypoy:     0 = 0x08 - 8
                //         no:    -1 = 0x0c - 13
                
                // [11]: 000904320216150228
                // {"name":"glaring","eyox":40,"eyoy":2,"eyw":21,"eyt":19,"eyb":2,"eyr_100":-14.000000000000002,"eypox":-4,"eypoy":1,"no":-13}
                //       eyox:    40 = 0x28
                //       eyoy:     2 = 0x02
                //        eyw:    21 = 0x15
                //        eyt:    19 = 0x16 - 3
                //        eyb:     2 = 0x02
                //    eyr_100:   -14 = 0x32 - 64
                //      eypox:    -4 = 0x04 - 8
                //      eypoy:     1 = 0x09 - 8
                //         no:   -13 = 0x00 - 13
                
                // [12]: 06050446030f140828
                // {"name":"sleepy","eyox":40,"eyoy":8,"eyw":20,"eyt":12,"eyb":3,"eyr_100":6,"eypox":-4,"eypoy":-3,"no":-7}
                //       eyox:    40 = 0x28
                //       eyoy:     8 = 0x08
                //        eyw:    20 = 0x14
                //        eyt:    12 = 0x0f - 3
                //        eyb:     3 = 0x03
                //    eyr_100:     6 = 0x46 - 64
                //      eypox:    -4 = 0x04 - 8
                //      eypoy:    -3 = 0x05 - 8
                //         no:    -7 = 0x06 - 13
                
                // [13]: 0c0001640f11160b28
                // {"name":"pleading","eyox":40,"eyoy":11,"eyw":22,"eyt":14,"eyb":15,"eyr_100":36,"eypox":-7,"eypoy":-8,"no":-1}
                //       eyox:    40 = 0x28
                //       eyoy:    11 = 0x0b
                //        eyw:    22 = 0x16
                //        eyt:    14 = 0x11 - 3
                //        eyb:    15 = 0x0f
                //    eyr_100:    36 = 0x64 - 64
                //      eypox:    -7 = 0x01 - 8
                //      eypoy:    -8 = 0x00 - 8
                //         no:    -1 = 0x0c - 13
                
            }
            
            // pupil - Select Data
            function selectData_pupil(breedData) -> data {
                
                let rvs_pupil        := getRvsValue(0x38)
                let iValue := mod(6, rvs_pupil)
                

                // Load the data for the selected pupil
                data := mload(add(
                        add(loadMemoryWord(2), 524), // DataPack[pupil]
                        iValue))
                // Keep 16 bits (8 bits * 2 fields)
                data := shr(240, shl(240, data))

                
                // [0]: 1e0c
                // {"name":"thin","eypw":12,"eyph":30}
                //       eypw:    12 = 0x0c
                //       eyph:    30 = 0x1e
                
                // [1]: 1c15
                // {"name":"big","eypw":21,"eyph":28}
                //       eypw:    21 = 0x15
                //       eyph:    28 = 0x1c
                
                // [2]: 1e1d
                // {"name":"huge","eypw":29,"eyph":30}
                //       eypw:    29 = 0x1d
                //       eyph:    30 = 0x1e
                
                // [3]: 160f
                // {"name":"normal","eypw":15,"eyph":22}
                //       eypw:    15 = 0x0f
                //       eyph:    22 = 0x16
                
                // [4]: 0d0d
                // {"name":"small","eypw":13,"eyph":13}
                //       eypw:    13 = 0x0d
                //       eyph:    13 = 0x0d
                
                // [5]: 1e07
                // {"name":"thinnest","eypw":7,"eyph":30}
                //       eypw:     7 = 0x07
                //       eyph:    30 = 0x1e
                
            }
            
            // mouth - Select Data
            function selectData_mouth(breedData) -> data {
                
                let rvs_mouth        := getRvsValue(0x40)
                let iValue := mod(9, rvs_mouth)
                

                // Load the data for the selected mouth
                data := mload(add(
                        add(loadMemoryWord(2), 536), // DataPack[mouth]
                        iValue))
                // Keep 48 bits (8 bits * 6 fields)
                data := shr(208, shl(208, data))

                
                // [0]: 018a43080a0b
                // {"name":"neutral","mh":11,"mox":10,"moy":6,"mc_100":50,"tngo_100":500,"tng":true}
                //         mh:    11 = 0x0b
                //        mox:    10 = 0x0a
                //        moy:     6 = 0x08 - 2
                //     mc_100:    50 = 0x43 - 17
                //   tngo_100:   500 = 0x8a * 4 - 50
                //        tng:     1 = 0x01
                
                // [1]: 00d5430a0508
                // {"name":"pursed","mh":8,"mox":5,"moy":8,"mc_100":50,"tngo_100":800,"tng":false}
                //         mh:     8 = 0x08
                //        mox:     5 = 0x05
                //        moy:     8 = 0x0a - 2
                //     mc_100:    50 = 0x43 - 17
                //   tngo_100:   800 = 0xd5 * 4 - 50
                //        tng:     0 = 0x00
                
                // [2]: 016243060f0c
                // {"name":"pleased","mh":12,"mox":15,"moy":4,"mc_100":50,"tngo_100":340,"tng":true}
                //         mh:    12 = 0x0c
                //        mox:    15 = 0x0f
                //        moy:     4 = 0x06 - 2
                //     mc_100:    50 = 0x43 - 17
                //   tngo_100:   340 = 0x62 * 4 - 50
                //        tng:     1 = 0x01
                
                // [3]: 00d5160e050b
                // {"name":"pouting","mh":11,"mox":5,"moy":12,"mc_100":5,"tngo_100":800,"tng":false}
                //         mh:    11 = 0x0b
                //        mox:     5 = 0x05
                //        moy:    12 = 0x0e - 2
                //     mc_100:     5 = 0x16 - 17
                //   tngo_100:   800 = 0xd5 * 4 - 50
                //        tng:     0 = 0x00
                
                // [4]: 0078000e0a0c
                // {"name":"drooping","mh":12,"mox":10,"moy":12,"mc_100":-17,"tngo_100":430,"tng":false}
                //         mh:    12 = 0x0c
                //        mox:    10 = 0x0a
                //        moy:    12 = 0x0e - 2
                //     mc_100:   -17 = 0x00 - 17
                //   tngo_100:   430 = 0x78 * 4 - 50
                //        tng:     0 = 0x00
                
                // [5]: 012b03080b0d
                // {"name":"displeased","mh":13,"mox":11,"moy":6,"mc_100":-14.000000000000002,"tngo_100":120,"tng":true}
                //         mh:    13 = 0x0d
                //        mox:    11 = 0x0b
                //        moy:     6 = 0x08 - 2
                //     mc_100:   -14 = 0x03 - 17
                //   tngo_100:   120 = 0x2b * 4 - 50
                //        tng:     1 = 0x01
                
                // [6]: 00d5260f0a0a
                // {"name":"impartial","mh":10,"mox":10,"moy":13,"mc_100":21,"tngo_100":800,"tng":false}
                //         mh:    10 = 0x0a
                //        mox:    10 = 0x0a
                //        moy:    13 = 0x0f - 2
                //     mc_100:    21 = 0x26 - 17
                //   tngo_100:   800 = 0xd5 * 4 - 50
                //        tng:     0 = 0x00
                
                // [7]: 01001303080d
                // {"name":"dull","mh":13,"mox":8,"moy":1,"mc_100":2,"tngo_100":-50,"tng":true}
                //         mh:    13 = 0x0d
                //        mox:     8 = 0x08
                //        moy:     1 = 0x03 - 2
                //     mc_100:     2 = 0x13 - 17
                //   tngo_100:   -50 = 0x00 * 4 - 50
                //        tng:     1 = 0x01
                
                // [8]: 013258000e0d
                // {"name":"smiling","mh":13,"mox":14,"moy":-2,"mc_100":71,"tngo_100":150,"tng":true}
                //         mh:    13 = 0x0d
                //        mox:    14 = 0x0e
                //        moy:    -2 = 0x00 - 2
                //     mc_100:    71 = 0x58 - 17
                //   tngo_100:   150 = 0x32 * 4 - 50
                //        tng:     1 = 0x01
                
            }
            
            // whisker - Select Data
            function selectData_whisker(breedData) -> data {
                
                let rvs_whisker      := getRvsValue(0x48)
                let iValue := mod(4, rvs_whisker)
                

                // Load the data for the selected whisker
                data := mload(add(
                        add(loadMemoryWord(2), 590), // DataPack[whisker]
                        iValue))
                // Keep 56 bits (8 bits * 7 fields)
                data := shr(200, shl(200, data))

                
                // [0]: 211e6404071204
                // {"name":"downward","whl":4,"wha_100":18,"whox":7,"whoy":4,"wheox":100,"wheoy":30,"whc_100":15}
                //        whl:     4 = 0x04
                //    wha_100:    18 = 0x12
                //       whox:     7 = 0x07
                //       whoy:     4 = 0x04
                //      wheox:   100 = 0x64
                //      wheoy:    30 = 0x1e
                //    whc_100:    15 = 0x21 - 18
                
                // [1]: 211e6404071203
                // {"name":"downwardShort","whl":3,"wha_100":18,"whox":7,"whoy":4,"wheox":100,"wheoy":30,"whc_100":15}
                //        whl:     3 = 0x03
                //    wha_100:    18 = 0x12
                //       whox:     7 = 0x07
                //       whoy:     4 = 0x04
                //      wheox:   100 = 0x64
                //      wheoy:    30 = 0x1e
                //    whc_100:    15 = 0x21 - 18
                
                // [2]: 00006604071404
                // {"name":"upward","whl":4,"wha_100":20,"whox":7,"whoy":4,"wheox":102,"wheoy":0,"whc_100":-18}
                //        whl:     4 = 0x04
                //    wha_100:    20 = 0x14
                //       whox:     7 = 0x07
                //       whoy:     4 = 0x04
                //      wheox:   102 = 0x66
                //      wheoy:     0 = 0x00
                //    whc_100:   -18 = 0x00 - 18
                
                // [3]: 00006604071403
                // {"name":"upwardShort","whl":3,"wha_100":20,"whox":7,"whoy":4,"wheox":102,"wheoy":0,"whc_100":-18}
                //        whl:     3 = 0x03
                //    wha_100:    20 = 0x14
                //       whox:     7 = 0x07
                //       whoy:     4 = 0x04
                //      wheox:   102 = 0x66
                //      wheoy:     0 = 0x00
                //    whc_100:   -18 = 0x00 - 18
                
            }
            
            // palette - Select Data
            function selectData_palette(breedData) -> data {
                
                let rvs_palette      := getRvsValue(0x18)
                let iValue := mod(4, rvs_palette)
                

                // Load the data for the selected palette
                data := mload(add(
                        add(loadMemoryWord(2), 618), // DataPack[palette]
                        iValue))
                // Keep 104 bits (8 bits * 13 fields)
                data := shr(152, shl(152, data))

                
                // [0]: 0a090807060504030301020100
                // {"name":"black","c_bg":"#b8deff","c_body":"#1a1b1e","c_neck":"#cfd2de","c_face":"#1a1b1e","c_prim":"#fafafa","c_sec":"#fafafa","c_ear":"#0f0f10","c_earIn":"#874f60","c_eyeline":"#000000","c_nose":"#f09d9d","c_noseIn":"#2d1f16","c_mouth":"#a06a6a","c_whiskers":"#ededed"}
                //       c_bg:     0 = 0x00
                //     c_body:     1 = 0x01
                //     c_neck:     2 = 0x02
                //     c_face:     1 = 0x01
                //     c_prim:     3 = 0x03
                //      c_sec:     3 = 0x03
                //      c_ear:     4 = 0x04
                //    c_earIn:     5 = 0x05
                //  c_eyeline:     6 = 0x06
                //     c_nose:     7 = 0x07
                //   c_noseIn:     8 = 0x08
                //    c_mouth:     9 = 0x09
                // c_whiskers:    10 = 0x0a
                
                // [1]: 0d131211100f0e0d0c030a030b
                // {"name":"white","c_bg":"#8b92e9","c_body":"#fafafa","c_neck":"#ededed","c_face":"#fafafa","c_prim":"#121212","c_sec":"#050505","c_ear":"#f6f6f6","c_earIn":"#f3b4d9","c_eyeline":"#383838","c_nose":"#ffc2d4","c_noseIn":"#822673","c_mouth":"#3c252e","c_whiskers":"#050505"}
                //       c_bg:    11 = 0x0b
                //     c_body:     3 = 0x03
                //     c_neck:    10 = 0x0a
                //     c_face:     3 = 0x03
                //     c_prim:    12 = 0x0c
                //      c_sec:    13 = 0x0d
                //      c_ear:    14 = 0x0e
                //    c_earIn:    15 = 0x0f
                //  c_eyeline:    16 = 0x10
                //     c_nose:    17 = 0x11
                //   c_noseIn:    18 = 0x12
                //    c_mouth:    19 = 0x13
                // c_whiskers:    13 = 0x0d
                
                // [2]: 1f1e1d1c1b1a19181715161514
                // {"name":"ginger","c_bg":"#5d7bb1","c_body":"#ffae70","c_neck":"#ecddd5","c_face":"#ffae70","c_prim":"#fcfcfc","c_sec":"#e98649","c_ear":"#f7a464","c_earIn":"#ffede0","c_eyeline":"#8a400f","c_nose":"#ce5f5f","c_noseIn":"#32271f","c_mouth":"#4b291b","c_whiskers":"#6f3f2a"}
                //       c_bg:    20 = 0x14
                //     c_body:    21 = 0x15
                //     c_neck:    22 = 0x16
                //     c_face:    21 = 0x15
                //     c_prim:    23 = 0x17
                //      c_sec:    24 = 0x18
                //      c_ear:    25 = 0x19
                //    c_earIn:    26 = 0x1a
                //  c_eyeline:    27 = 0x1b
                //     c_nose:    28 = 0x1c
                //   c_noseIn:    29 = 0x1d
                //    c_mouth:    30 = 0x1e
                // c_whiskers:    31 = 0x1f
                
                // [3]: 10102726252423221720212000
                // {"name":"gray","c_bg":"#b8deff","c_body":"#7e849a","c_neck":"#d2d2db","c_face":"#7e849a","c_prim":"#fcfcfc","c_sec":"#555463","c_ear":"#6a6e7c","c_earIn":"#f5c7df","c_eyeline":"#3d3d3d","c_nose":"#f5b2d4","c_noseIn":"#703e57","c_mouth":"#383838","c_whiskers":"#383838"}
                //       c_bg:     0 = 0x00
                //     c_body:    32 = 0x20
                //     c_neck:    33 = 0x21
                //     c_face:    32 = 0x20
                //     c_prim:    23 = 0x17
                //      c_sec:    34 = 0x22
                //      c_ear:    35 = 0x23
                //    c_earIn:    36 = 0x24
                //  c_eyeline:    37 = 0x25
                //     c_nose:    38 = 0x26
                //   c_noseIn:    39 = 0x27
                //    c_mouth:    16 = 0x10
                // c_whiskers:    16 = 0x10
                
                // [4]: 0c3231302f2e2d2c2b292a2928
                // {"name":"brown","c_bg":"#f0f0f0","c_body":"#815d41","c_neck":"#ded1c9","c_face":"#815d41","c_prim":"#f2dfce","c_sec":"#40301c","c_ear":"#6e4e35","c_earIn":"#dd9797","c_eyeline":"#492c18","c_nose":"#f08e8e","c_noseIn":"#752f40","c_mouth":"#2f2323","c_whiskers":"#121212"}
                //       c_bg:    40 = 0x28
                //     c_body:    41 = 0x29
                //     c_neck:    42 = 0x2a
                //     c_face:    41 = 0x29
                //     c_prim:    43 = 0x2b
                //      c_sec:    44 = 0x2c
                //      c_ear:    45 = 0x2d
                //    c_earIn:    46 = 0x2e
                //  c_eyeline:    47 = 0x2f
                //     c_nose:    48 = 0x30
                //   c_noseIn:    49 = 0x31
                //    c_mouth:    50 = 0x32
                // c_whiskers:    12 = 0x0c
                
                // [5]: 3d3c3b3a393837363533343328
                // {"name":"british blue","c_bg":"#f0f0f0","c_body":"#5e6373","c_neck":"#cdd0d5","c_face":"#5e6373","c_prim":"#dadce7","c_sec":"#4d516a","c_ear":"#505568","c_earIn":"#dca7c1","c_eyeline":"#26242d","c_nose":"#13121c","c_noseIn":"#575757","c_mouth":"#191a1f","c_whiskers":"#171617"}
                //       c_bg:    40 = 0x28
                //     c_body:    51 = 0x33
                //     c_neck:    52 = 0x34
                //     c_face:    51 = 0x33
                //     c_prim:    53 = 0x35
                //      c_sec:    54 = 0x36
                //      c_ear:    55 = 0x37
                //    c_earIn:    56 = 0x38
                //  c_eyeline:    57 = 0x39
                //     c_nose:    58 = 0x3a
                //   c_noseIn:    59 = 0x3b
                //    c_mouth:    60 = 0x3c
                // c_whiskers:    61 = 0x3d
                
                // [6]: 434241401b1a013f01173e1700
                // {"name":"calico","c_bg":"#b8deff","c_body":"#fcfcfc","c_neck":"#e7e2de","c_face":"#fcfcfc","c_prim":"#1a1b1e","c_sec":"#e2843c","c_ear":"#1a1b1e","c_earIn":"#ffede0","c_eyeline":"#8a400f","c_nose":"#f39696","c_noseIn":"#6b1e62","c_mouth":"#6d4040","c_whiskers":"#262626"}
                //       c_bg:     0 = 0x00
                //     c_body:    23 = 0x17
                //     c_neck:    62 = 0x3e
                //     c_face:    23 = 0x17
                //     c_prim:     1 = 0x01
                //      c_sec:    63 = 0x3f
                //      c_ear:     1 = 0x01
                //    c_earIn:    26 = 0x1a
                //  c_eyeline:    27 = 0x1b
                //     c_nose:    64 = 0x40
                //   c_noseIn:    65 = 0x41
                //    c_mouth:    66 = 0x42
                // c_whiskers:    67 = 0x43
                
                // [7]: 4b4a0648494846474644454428
                // {"name":"creamy","c_bg":"#f0f0f0","c_body":"#e1d0c6","c_neck":"#e3d6ce","c_face":"#e1d0c6","c_prim":"#2e2520","c_sec":"#bfa89b","c_ear":"#2e2520","c_earIn":"#5f4534","c_eyeline":"#43352d","c_nose":"#5f4534","c_noseIn":"#000000","c_mouth":"#795944","c_whiskers":"#292929"}
                //       c_bg:    40 = 0x28
                //     c_body:    68 = 0x44
                //     c_neck:    69 = 0x45
                //     c_face:    68 = 0x44
                //     c_prim:    70 = 0x46
                //      c_sec:    71 = 0x47
                //      c_ear:    70 = 0x46
                //    c_earIn:    72 = 0x48
                //  c_eyeline:    73 = 0x49
                //     c_nose:    72 = 0x48
                //   c_noseIn:     6 = 0x06
                //    c_mouth:    74 = 0x4a
                // c_whiskers:    75 = 0x4b
                
                // [8]: 57565554535251504f4d4e4d4c
                // {"name":"pink","c_bg":"#5e4c9a","c_body":"#ffb8ee","c_neck":"#f1dfef","c_face":"#ffb8ee","c_prim":"#fff0fe","c_sec":"#d373be","c_ear":"#fbb1ea","c_earIn":"#d56dbe","c_eyeline":"#5c2e52","c_nose":"#a84d94","c_noseIn":"#3e1829","c_mouth":"#602957","c_whiskers":"#341b36"}
                //       c_bg:    76 = 0x4c
                //     c_body:    77 = 0x4d
                //     c_neck:    78 = 0x4e
                //     c_face:    77 = 0x4d
                //     c_prim:    79 = 0x4f
                //      c_sec:    80 = 0x50
                //      c_ear:    81 = 0x51
                //    c_earIn:    82 = 0x52
                //  c_eyeline:    83 = 0x53
                //     c_nose:    84 = 0x54
                //   c_noseIn:    85 = 0x55
                //    c_mouth:    86 = 0x56
                // c_whiskers:    87 = 0x57
                
                // [9]: 6261605f5e5d5c5b5a5859584c
                // {"name":"cyan","c_bg":"#5e4c9a","c_body":"#b8f4ff","c_neck":"#cedcdf","c_face":"#b8f4ff","c_prim":"#ebf8ff","c_sec":"#6da4c0","c_ear":"#a0ebf8","c_earIn":"#599bb1","c_eyeline":"#385561","c_nose":"#6891b1","c_noseIn":"#24223f","c_mouth":"#182a35","c_whiskers":"#151e23"}
                //       c_bg:    76 = 0x4c
                //     c_body:    88 = 0x58
                //     c_neck:    89 = 0x59
                //     c_face:    88 = 0x58
                //     c_prim:    90 = 0x5a
                //      c_sec:    91 = 0x5b
                //      c_ear:    92 = 0x5c
                //    c_earIn:    93 = 0x5d
                //  c_eyeline:    94 = 0x5e
                //     c_nose:    95 = 0x5f
                //   c_noseIn:    96 = 0x60
                //    c_mouth:    97 = 0x61
                // c_whiskers:    98 = 0x62
                
                // [10]: 0a6c066b6a6968676664656463
                // {"name":"green","c_bg":"#566a8f","c_body":"#7ca269","c_neck":"#ceded6","c_face":"#7ca269","c_prim":"#507141","c_sec":"#375845","c_ear":"#7a9a6a","c_earIn":"#355744","c_eyeline":"#1f2320","c_nose":"#343a31","c_noseIn":"#000000","c_mouth":"#242e1f","c_whiskers":"#ededed"}
                //       c_bg:    99 = 0x63
                //     c_body:   100 = 0x64
                //     c_neck:   101 = 0x65
                //     c_face:   100 = 0x64
                //     c_prim:   102 = 0x66
                //      c_sec:   103 = 0x67
                //      c_ear:   104 = 0x68
                //    c_earIn:   105 = 0x69
                //  c_eyeline:   106 = 0x6a
                //     c_nose:   107 = 0x6b
                //   c_noseIn:     6 = 0x06
                //    c_mouth:   108 = 0x6c
                // c_whiskers:    10 = 0x0a
                
                // [11]: 77767574737271706f6d6e6d14
                // {"name":"fleshy","c_bg":"#5d7bb1","c_body":"#f3d8d8","c_neck":"#f2e9e9","c_face":"#f3d8d8","c_prim":"#ffebeb","c_sec":"#ecb6b6","c_ear":"#f3cece","c_earIn":"#d38897","c_eyeline":"#b47979","c_nose":"#f0a8a8","c_noseIn":"#5e4040","c_mouth":"#a97575","c_whiskers":"#f5f5f5"}
                //       c_bg:    20 = 0x14
                //     c_body:   109 = 0x6d
                //     c_neck:   110 = 0x6e
                //     c_face:   109 = 0x6d
                //     c_prim:   111 = 0x6f
                //      c_sec:   112 = 0x70
                //      c_ear:   113 = 0x71
                //    c_earIn:   114 = 0x72
                //  c_eyeline:   115 = 0x73
                //     c_nose:   116 = 0x74
                //   c_noseIn:   117 = 0x75
                //    c_mouth:   118 = 0x76
                // c_whiskers:   119 = 0x77
                
                // [12]: 807f067e7d7c7b7a1a78797828
                // {"name":"sand","c_bg":"#f0f0f0","c_body":"#e4c7b4","c_neck":"#efe0d7","c_face":"#e4c7b4","c_prim":"#ffede0","c_sec":"#c19d8a","c_ear":"#d7b8a3","c_earIn":"#ba8882","c_eyeline":"#603e3e","c_nose":"#7b5656","c_noseIn":"#000000","c_mouth":"#3a2727","c_whiskers":"#6f5858"}
                //       c_bg:    40 = 0x28
                //     c_body:   120 = 0x78
                //     c_neck:   121 = 0x79
                //     c_face:   120 = 0x78
                //     c_prim:    26 = 0x1a
                //      c_sec:   122 = 0x7a
                //      c_ear:   123 = 0x7b
                //    c_earIn:   124 = 0x7c
                //  c_eyeline:   125 = 0x7d
                //     c_nose:   126 = 0x7e
                //   c_noseIn:     6 = 0x06
                //    c_mouth:   127 = 0x7f
                // c_whiskers:   128 = 0x80
                
                // [13]: 06068786068584834f81828114
                // {"name":"toyger","c_bg":"#5d7bb1","c_body":"#f09475","c_neck":"#decadc","c_face":"#f09475","c_prim":"#fff0fe","c_sec":"#49241d","c_ear":"#38251f","c_earIn":"#d491bb","c_eyeline":"#000000","c_nose":"#371515","c_noseIn":"#808080","c_mouth":"#000000","c_whiskers":"#000000"}
                //       c_bg:    20 = 0x14
                //     c_body:   129 = 0x81
                //     c_neck:   130 = 0x82
                //     c_face:   129 = 0x81
                //     c_prim:    79 = 0x4f
                //      c_sec:   131 = 0x83
                //      c_ear:   132 = 0x84
                //    c_earIn:   133 = 0x85
                //  c_eyeline:     6 = 0x06
                //     c_nose:   134 = 0x86
                //   c_noseIn:   135 = 0x87
                //    c_mouth:     6 = 0x06
                // c_whiskers:     6 = 0x06
                
            }
            
            // eyeColor - Select Data
            function selectData_eyeColor(iValue) -> data {
                

                // Load the data for the selected eyeColor
                data := mload(add(
                        add(loadMemoryWord(2), 800), // DataPack[eyeColor]
                        iValue))
                // Keep 8 bits (8 bits * 1 fields)
                data := shr(248, shl(248, data))

                
                // [0]: 88
                // {"name":"blue","c_eye":"#d6f9ff"}
                //      c_eye:   136 = 0x88
                
                // [1]: 89
                // {"name":"yellow","c_eye":"#f9e9ae"}
                //      c_eye:   137 = 0x89
                
                // [2]: 8a
                // {"name":"green","c_eye":"#cafaa3"}
                //      c_eye:   138 = 0x8a
                
                // [3]: 8b
                // {"name":"orange","c_eye":"#ff9c66"}
                //      c_eye:   139 = 0x8b
                
                // [4]: 06
                // {"name":"black","c_eye":"#000000"}
                //      c_eye:     6 = 0x06
                
                // [5]: 8c
                // {"name":"white","c_eye":"#ef0902"}
                //      c_eye:   140 = 0x8c
                
            }
            
            // bodyParts - Select Data
            function selectData_bodyParts(iValue) -> data {
                

                // Load the data for the selected bodyParts
                data := mload(add(
                        add(loadMemoryWord(2), 806), // DataPack[bodyParts]
                        iValue))
                // Keep 5 bits (1 bits * 5 fields)
                data := shr(251, shl(251, data))

                
                // [0]: 00
                // {"name":"0","bodyParts_tabby":false,"bodyParts_belly":false,"bodyParts_necktie":false,"bodyParts_corners":false,"bodyParts_stripes":false}
                // bodyParts_tabby:     0 = 0x00
                // bodyParts_belly:     0 = 0x00
                // bodyParts_necktie:     0 = 0x00
                // bodyParts_corners:     0 = 0x00
                // bodyParts_stripes:     0 = 0x00
                
                // [1]: 01
                // {"name":"1","bodyParts_tabby":true,"bodyParts_belly":false,"bodyParts_necktie":false,"bodyParts_corners":false,"bodyParts_stripes":false}
                // bodyParts_tabby:     1 = 0x01
                // bodyParts_belly:     0 = 0x00
                // bodyParts_necktie:     0 = 0x00
                // bodyParts_corners:     0 = 0x00
                // bodyParts_stripes:     0 = 0x00
                
                // [2]: 03
                // {"name":"3","bodyParts_tabby":true,"bodyParts_belly":true,"bodyParts_necktie":false,"bodyParts_corners":false,"bodyParts_stripes":false}
                // bodyParts_tabby:     1 = 0x01
                // bodyParts_belly:     1 = 0x01
                // bodyParts_necktie:     0 = 0x00
                // bodyParts_corners:     0 = 0x00
                // bodyParts_stripes:     0 = 0x00
                
                // [3]: 05
                // {"name":"5","bodyParts_tabby":true,"bodyParts_belly":false,"bodyParts_necktie":true,"bodyParts_corners":false,"bodyParts_stripes":false}
                // bodyParts_tabby:     1 = 0x01
                // bodyParts_belly:     0 = 0x00
                // bodyParts_necktie:     1 = 0x01
                // bodyParts_corners:     0 = 0x00
                // bodyParts_stripes:     0 = 0x00
                
                // [4]: 02
                // {"name":"2","bodyParts_tabby":false,"bodyParts_belly":true,"bodyParts_necktie":false,"bodyParts_corners":false,"bodyParts_stripes":false}
                // bodyParts_tabby:     0 = 0x00
                // bodyParts_belly:     1 = 0x01
                // bodyParts_necktie:     0 = 0x00
                // bodyParts_corners:     0 = 0x00
                // bodyParts_stripes:     0 = 0x00
                
                // [5]: 04
                // {"name":"4","bodyParts_tabby":false,"bodyParts_belly":false,"bodyParts_necktie":true,"bodyParts_corners":false,"bodyParts_stripes":false}
                // bodyParts_tabby:     0 = 0x00
                // bodyParts_belly:     0 = 0x00
                // bodyParts_necktie:     1 = 0x01
                // bodyParts_corners:     0 = 0x00
                // bodyParts_stripes:     0 = 0x00
                
                // [6]: 08
                // {"name":"8","bodyParts_tabby":false,"bodyParts_belly":false,"bodyParts_necktie":false,"bodyParts_corners":true,"bodyParts_stripes":false}
                // bodyParts_tabby:     0 = 0x00
                // bodyParts_belly:     0 = 0x00
                // bodyParts_necktie:     0 = 0x00
                // bodyParts_corners:     1 = 0x01
                // bodyParts_stripes:     0 = 0x00
                
                // [7]: 10
                // {"name":"16","bodyParts_tabby":false,"bodyParts_belly":false,"bodyParts_necktie":false,"bodyParts_corners":false,"bodyParts_stripes":true}
                // bodyParts_tabby:     0 = 0x00
                // bodyParts_belly:     0 = 0x00
                // bodyParts_necktie:     0 = 0x00
                // bodyParts_corners:     0 = 0x00
                // bodyParts_stripes:     1 = 0x01
                
                // [8]: 09
                // {"name":"9","bodyParts_tabby":true,"bodyParts_belly":false,"bodyParts_necktie":false,"bodyParts_corners":true,"bodyParts_stripes":false}
                // bodyParts_tabby:     1 = 0x01
                // bodyParts_belly:     0 = 0x00
                // bodyParts_necktie:     0 = 0x00
                // bodyParts_corners:     1 = 0x01
                // bodyParts_stripes:     0 = 0x00
                
            }
            
            // faceParts - Select Data
            function selectData_faceParts(iValue) -> data {
                

                // Load the data for the selected faceParts
                data := mload(add(
                        add(loadMemoryWord(2), 815), // DataPack[faceParts]
                        iValue))
                // Keep 8 bits (1 bits * 8 fields)
                data := shr(248, shl(248, data))

                
                // [0]: 00
                // {"name":"0","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":false,"faceParts_chin":false,"faceParts_triangle":false,"faceParts_whiskers":false,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     0 = 0x00
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [1]: 01
                // {"name":"1","faceParts_mask":true,"faceParts_round":false,"faceParts_nose":false,"faceParts_chin":false,"faceParts_triangle":false,"faceParts_whiskers":false,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     1 = 0x01
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     0 = 0x00
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [2]: 02
                // {"name":"2","faceParts_mask":false,"faceParts_round":true,"faceParts_nose":false,"faceParts_chin":false,"faceParts_triangle":false,"faceParts_whiskers":false,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     1 = 0x01
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     0 = 0x00
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [3]: 06
                // {"name":"6","faceParts_mask":false,"faceParts_round":true,"faceParts_nose":true,"faceParts_chin":false,"faceParts_triangle":false,"faceParts_whiskers":false,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     1 = 0x01
                // faceParts_nose:     1 = 0x01
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     0 = 0x00
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [4]: 0c
                // {"name":"12","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":true,"faceParts_chin":true,"faceParts_triangle":false,"faceParts_whiskers":false,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     1 = 0x01
                // faceParts_chin:     1 = 0x01
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     0 = 0x00
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [5]: 10
                // {"name":"16","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":false,"faceParts_chin":false,"faceParts_triangle":true,"faceParts_whiskers":false,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     1 = 0x01
                // faceParts_whiskers:     0 = 0x00
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [6]: 30
                // {"name":"48","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":false,"faceParts_chin":false,"faceParts_triangle":true,"faceParts_whiskers":true,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     1 = 0x01
                // faceParts_whiskers:     1 = 0x01
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [7]: 20
                // {"name":"32","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":false,"faceParts_chin":false,"faceParts_triangle":false,"faceParts_whiskers":true,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     1 = 0x01
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [8]: 24
                // {"name":"36","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":true,"faceParts_chin":false,"faceParts_triangle":false,"faceParts_whiskers":true,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     1 = 0x01
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     1 = 0x01
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [9]: 28
                // {"name":"40","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":false,"faceParts_chin":true,"faceParts_triangle":false,"faceParts_whiskers":true,"faceParts_ear":false,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     1 = 0x01
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     1 = 0x01
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     0 = 0x00
                
                // [10]: 40
                // {"name":"64","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":false,"faceParts_chin":false,"faceParts_triangle":false,"faceParts_whiskers":false,"faceParts_ear":true,"faceParts_temple":false}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     0 = 0x00
                // faceParts_ear:     1 = 0x01
                // faceParts_temple:     0 = 0x00
                
                // [11]: 80
                // {"name":"128","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":false,"faceParts_chin":false,"faceParts_triangle":false,"faceParts_whiskers":false,"faceParts_ear":false,"faceParts_temple":true}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     0 = 0x00
                // faceParts_ear:     0 = 0x00
                // faceParts_temple:     1 = 0x01
                
                // [12]: c0
                // {"name":"192","faceParts_mask":false,"faceParts_round":false,"faceParts_nose":false,"faceParts_chin":false,"faceParts_triangle":false,"faceParts_whiskers":false,"faceParts_ear":true,"faceParts_temple":true}
                // faceParts_mask:     0 = 0x00
                // faceParts_round:     0 = 0x00
                // faceParts_nose:     0 = 0x00
                // faceParts_chin:     0 = 0x00
                // faceParts_triangle:     0 = 0x00
                // faceParts_whiskers:     0 = 0x00
                // faceParts_ear:     1 = 0x01
                // faceParts_temple:     1 = 0x01
                
            }
            
    
        // Decompress dataPack
        let pDataPackUncompressed := decompressDataPack(dataPackCompressed)
        mstore(getMemoryWordAddress(1), pDataPackUncompressed)
        
        // Store inputs:
        // rvs
        mstore(getMemoryWordAddress(0), _rvs)
        // data memory address
        // mstore(getMemoryWordAddress(1), dataPack)
        
        // Set Data Pack Address Values
        mstore(getMemoryWordAddress(3), add(loadMemoryWord(1), 0))
        mstore(getMemoryWordAddress(2), add(loadMemoryWord(1), 423))
        mstore(getMemoryWordAddress(4), add(loadMemoryWord(1), 1251))
    

        // Setup pOutputNext - First 32bits is length
        mstore(0x00, add(0x20, getMemoryWordAddress(4096)))

        // Main Function ---
        function generateSvgInner() {

            // Place pVars after output (leaving plenty of space for max string length)
            let pVars := getMemoryWordAddress(128)
            
            let slot0 := 0
            let slot1 := 0
            let slot2 := 0
            let slot3 := 0
            let slot4 := 0
            let slot5 := 0
            let slot6 := 0
            let slot7 := 0
            let slot8 := 0
            let slot9 := 0
            let slot10 := 0
            let slot11 := 0
            let slot12 := 0
            let slot13 := 0
            let slot14 := 0
            let slot15 := 0
            let slot16 := 0
            let slot17 := 0
            let slot18 := 0
            let slot19 := 0
            let slot20 := 0
            let slot21 := 0
            let slot22 := 0
            let slot23 := 0
            let slot24 := 0
            let slot25 := 0
            let slot26 := 0
            let slot27 := 0
            let slot28 := 0
            let slot29 := 0
            let slot30 := 0
            let slot31 := 0
            let slot32 := 0
            let slot33 := 0
            let slot34 := 0
            let slot35 := 0
            let slot36 := 0
            let slot37 := 0
            let slot38 := 0
            let slot39 := 0
            let slot40 := 0
            let slot41 := 0
            let slot42 := 0
            let slot43 := 0
            let slot44 := 0
            let slot45 := 0
            let slot46 := 0
            let slot47 := 0
            let slot48 := 0
            let slot49 := 0
            let slot50 := 0
            let slot51 := 0
            let slot52 := 0
            let slot53 := 0
            let slot54 := 0
            let slot55 := 0
            let slot56 := 0
            let slot57 := 0
            let slot58 := 0
            let slot59 := 0
            let slot60 := 0
            let slot61 := 0
            let slot62 := 0
            let slot63 := 0
            let slot64 := 0
            let slot65 := 0
            let slot66 := 0
            let slot67 := 0
            let slot68 := 0
            let slot69 := 0
            let slot70 := 0
            let slot71 := 0
            let slot72 := 0
            let slot73 := 0
            let slot74 := 0
            let slot75 := 0
            let slot76 := 0
            let slot77 := 0
            let slot78 := 0
            let slot79 := 0
            let slot80 := 0
            let slot81 := 0
            let slot82 := 0
            let slot83 := 0
            let slot84 := 0
            let slot85 := 0
            let slot86 := 0
            let slot87 := 0
            let slot88 := 0
            let slot89 := 0
            let slot90 := 0
            let slot91 := 0
            let slot92 := 0
            let slot93 := 0
            let slot94 := 0
            let slot95 := 0
            let slot96 := 0
            let slot97 := 0
            let slot98 := 0
            let slot99 := 0
            let slot100 := 0
            let slot101 := 0
            let slot102 := 0
            let slot103 := 0
            let slot104 := 0
            let slot105 := 0
            let slot106 := 0
            let slot107 := 0
            let slot108 := 0
            let slot109 := 0
            let slot110 := 0
            let slot111 := 0
            let slot112 := 0
            let slot113 := 0
            let slot114 := 0
            let slot115 := 0
            let slot116 := 0
            let slot117 := 0
            let slot118 := 0
            let slot119 := 0
            let slot120 := 0
            let slot121 := 0
            let slot122 := 0
            let slot123 := 0
            let slot124 := 0
            let slot125 := 0
            let slot126 := 0
            let slot127 := 0
            let slot128 := 0
            let slot129 := 0
            let slot130 := 0
            let slot131 := 0
            let slot132 := 0
            let slot133 := 0
            let slot134 := 0
            let slot135 := 0
            let slot136 := 0
            let slot137 := 0
            let slot138 := 0
            let slot139 := 0
            let slot140 := 0
            let slot141 := 0
            let slot142 := 0
            let slot143 := 0
            let slot144 := 0
            let slot145 := 0
            let slot146 := 0
            let slot147 := 0
            let slot148 := 0
            let slot149 := 0
            let slot150 := 0
            let slot151 := 0
            let slot152 := 0
            let slot153 := 0
            let slot154 := 0
            let slot155 := 0
            let slot156 := 0
            let slot157 := 0
            let slot158 := 0
            let slot159 := 0
            let slot160 := 0
            let slot161 := 0
            let slot162 := 0
            let slot163 := 0
            let slot164 := 0
            let slot165 := 0
            let slot166 := 0
            let slot167 := 0
            let slot168 := 0
            let slot169 := 0
            let slot170 := 0
            let slot171 := 0
            let slot172 := 0
            let slot173 := 0
            let slot174 := 0
            let slot175 := 0
            let slot176 := 0
            let slot177 := 0
            let slot178 := 0
            let slot179 := 0
            let slot180 := 0
            let slot181 := 0
            let slot182 := 0
            let slot183 := 0
            let slot184 := 0
            let slot185 := 0
            let slot186 := 0
            let slot187 := 0
            let slot188 := 0
            let slot189 := 0
            let slot190 := 0
            let slot191 := 0
            let slot192 := 0
            let slot193 := 0
            let slot194 := 0
            let slot195 := 0
            let slot196 := 0
            let slot197 := 0
            let slot198 := 0
            let slot199 := 0
            let slot200 := 0
            let slot201 := 0
            let slot202 := 0
            let slot203 := 0
            let slot204 := 0
            let slot205 := 0
            let slot206 := 0
            let slot207 := 0
            let slot208 := 0
            let slot209 := 0
            let slot210 := 0
            let slot211 := 0
            let slot212 := 0
            let slot213 := 0
            let slot214 := 0
            let slot215 := 0
            let slot216 := 0
            let slot217 := 0
            let slot218 := 0
            let slot219 := 0
            let slot220 := 0
            let slot221 := 0
            let slot222 := 0
            let slot223 := 0
            let slot224 := 0
            let slot225 := 0
            let slot226 := 0
            let slot227 := 0
            let slot228 := 0
            let slot229 := 0
            let slot230 := 0
            let slot231 := 0
            let slot232 := 0
            let slot233 := 0
            let slot234 := 0
            let slot235 := 0
            let slot236 := 0
            let slot237 := 0
            let slot238 := 0
            let slot239 := 0
            let slot240 := 0
            let slot241 := 0
            let slot242 := 0
            let slot243 := 0
            let slot244 := 0
            let slot245 := 0
            let slot246 := 0
            let slot247 := 0
            let slot248 := 0
            let slot249 := 0
            let slot250 := 0
            let slot251 := 0
            let slot252 := 0
            let slot253 := 0
            let slot254 := 0
            
            /* targetArgIndexRev:0 opcode:3d  23 */slot35 := selectBreed()
            /* targetArgIndexRev:undefined opcode:43 23 08 */slot8 := selectData_head(slot35)
            /* targetArgIndexRev:undefined opcode:3f 23 08 */slot8 := selectData_ear(slot35)
            /* targetArgIndexRev:undefined opcode:40 23 08 */slot8 := selectData_eye(slot35)
            /* targetArgIndexRev:undefined opcode:46 23 08 */slot8 := selectData_pupil(slot35)
            /* targetArgIndexRev:undefined opcode:44 23 08 */slot8 := selectData_mouth(slot35)
            /* targetArgIndexRev:undefined opcode:47 23 08 */slot8 := selectData_whisker(slot35)
            /* targetArgIndexRev:undefined opcode:45 23 08 */slot8 := selectData_palette(slot35)
            // /* targetArgIndexRev:0 opcode:30 23 00 */slot0 := getBreedData_i_body(slot35)
            // /* targetArgIndexRev:undefined opcode:3e 00 08 */slot8 := selectData_bodyParts(slot0)
            // /* targetArgIndexRev:0 opcode:31 23 00 */slot0 := getBreedData_i_face(slot35)
            // /* targetArgIndexRev:undefined opcode:42 00 08 */slot8 := selectData_faceParts(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0000 */writeOutput_text(0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 00 */slot0 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0127 */writeOutput_text(295)
            // /* targetArgIndexRev:0 opcode:2d 23 10 */slot16 := getBreedData_f_useBodyColorForCorner(slot35)
            // /* targetArgIndexRev:0 opcode:21 0b 00 */slot0 := 0x0b
            // /* targetArgIndexRev:1 opcode:38 00 01 */slot1 := getRvsValue(slot0)
            // /* targetArgIndexRev:0 opcode:21 80 00 */slot0 := 0x80
            // /* targetArgIndexRev:1 opcode:18 0100 01 */slot1 := slt(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:2c 23 00 */slot0 := getBreedData_f_swapMarkColors(slot35)
            // /* targetArgIndexRev:2 opcode:13 0100 0e */slot14 := and(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 03 01 */slot1 := 0x03
            // /* targetArgIndexRev:0 opcode:21 1c 00 */slot0 := 0x1c
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:34 0100 11 */slot17 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 20 01 */slot1 := 0x20
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 09 */slot9 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 28 01 */slot1 := 0x28
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:33 0100 08 */slot8 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 08 01 */slot1 := 0x08
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 0d */slot13 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:20 0e0809 0a */slot10 := ternary(slot14, slot9, slot8)
            // /* targetArgIndexRev:0 opcode:1c 10 00 */slot0 := not(slot16)
            // /* targetArgIndexRev:2 opcode:13 1100 02 */slot2 := and(slot17, slot0)
            // /* targetArgIndexRev:0 opcode:20 020a0d 00 */slot0 := ternary(slot2, slot13, slot10)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 016d */writeOutput_text(365)
            // /* targetArgIndexRev:0 opcode:2b 23 0b */slot11 := getBreedData_f_calico(slot35)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 1d 00 */slot0 := 0x1d
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:34 0100 2b */slot43 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 18 01 */slot1 := 0x18
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 0c */slot12 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:1c 0b 00 */slot0 := not(slot11)
            // /* targetArgIndexRev:2 opcode:13 2b00 02 */slot2 := and(slot43, slot0)
            // /* targetArgIndexRev:0 opcode:20 020a0c 00 */slot0 := ternary(slot2, slot12, slot10)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 01b3 */writeOutput_text(435)
            // /* targetArgIndexRev:undefined opcode:03 0a */writeOutput_color(slot10)
            // /* targetArgIndexRev:undefined opcode:02 01f9 */writeOutput_text(505)
            // /* targetArgIndexRev:0 opcode:20 0e0908 09 */slot9 := ternary(slot14, slot8, slot9)
            // /* targetArgIndexRev:undefined opcode:03 09 */writeOutput_color(slot9)
            // /* targetArgIndexRev:undefined opcode:02 023f */writeOutput_text(575)
            // /* targetArgIndexRev:0 opcode:20 0b090a 0f */slot15 := ternary(slot11, slot10, slot9)
            // /* targetArgIndexRev:undefined opcode:03 0f */writeOutput_color(slot15)
            // /* targetArgIndexRev:undefined opcode:02 0285 */writeOutput_text(645)
            // /* targetArgIndexRev:2 opcode:13 1110 02 */slot2 := and(slot17, slot16)
            // /* targetArgIndexRev:0 opcode:20 020a0d 08 */slot8 := ternary(slot2, slot13, slot10)
            // /* targetArgIndexRev:2 opcode:13 110b 02 */slot2 := and(slot17, slot11)
            // /* targetArgIndexRev:0 opcode:20 020908 00 */slot0 := ternary(slot2, slot8, slot9)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 02cb */writeOutput_text(715)
            // /* targetArgIndexRev:undefined opcode:03 08 */writeOutput_color(slot8)
            // /* targetArgIndexRev:undefined opcode:02 0311 */writeOutput_text(785)
            // /* targetArgIndexRev:2 opcode:13 2b0b 02 */slot2 := and(slot43, slot11)
            // /* targetArgIndexRev:0 opcode:20 020a0c 00 */slot0 := ternary(slot2, slot12, slot10)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0357 */writeOutput_text(855)
            // /* targetArgIndexRev:2 opcode:13 2b0b 02 */slot2 := and(slot43, slot11)
            // /* targetArgIndexRev:0 opcode:20 02090c 00 */slot0 := ternary(slot2, slot12, slot9)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 039e */writeOutput_text(926)
            // /* targetArgIndexRev:0 opcode:22 01000080 00 */slot0 := 0x01000080
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 03ef */writeOutput_text(1007)
            // /* targetArgIndexRev:1 opcode:21 07 01 */slot1 := 0x07
            // /* targetArgIndexRev:0 opcode:21 1d 00 */slot0 := 0x1d
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 2d */slot45 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 30 01 */slot1 := 0x30
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 08 */slot8 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:20 2d0f08 00 */slot0 := ternary(slot45, slot8, slot15)
            // /* targetArgIndexRev:0 opcode:20 0b0900 00 */slot0 := ternary(slot11, slot0, slot9)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0436 */writeOutput_text(1078)
            // /* targetArgIndexRev:1 opcode:21 06 01 */slot1 := 0x06
            // /* targetArgIndexRev:0 opcode:21 1d 00 */slot0 := 0x1d
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 2c */slot44 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:20 2c0a08 00 */slot0 := ternary(slot44, slot8, slot10)
            // /* targetArgIndexRev:0 opcode:20 0b0a00 00 */slot0 := ternary(slot11, slot0, slot10)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 047d */writeOutput_text(1149)
            // /* targetArgIndexRev:1 opcode:21 38 01 */slot1 := 0x38
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 00 */slot0 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 04c4 */writeOutput_text(1220)
            // /* targetArgIndexRev:0 opcode:21 0e 00 */slot0 := 0x0e
            // /* targetArgIndexRev:1 opcode:38 00 01 */slot1 := getRvsValue(slot0)
            // /* targetArgIndexRev:0 opcode:21 80 00 */slot0 := 0x80
            // /* targetArgIndexRev:2 opcode:18 0100 02 */slot2 := slt(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 1b 00 */slot0 := 0x1b
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:41 00 00 */slot0 := selectData_eyeColor(slot0)
            // /* targetArgIndexRev:1 opcode:32 00 01 */slot1 := getColor(slot0)
            // /* targetArgIndexRev:0 opcode:21 1b 00 */slot0 := 0x1b
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:41 00 00 */slot0 := selectData_eyeColor(slot0)
            // /* targetArgIndexRev:0 opcode:32 00 09 */slot9 := getColor(slot0)
            // /* targetArgIndexRev:0 opcode:20 020109 00 */slot0 := ternary(slot2, slot9, slot1)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 050b */writeOutput_text(1291)
            // /* targetArgIndexRev:0 opcode:20 020901 00 */slot0 := ternary(slot2, slot1, slot9)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0552 */writeOutput_text(1362)
            // /* targetArgIndexRev:1 opcode:21 40 01 */slot1 := 0x40
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 00 */slot0 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0599 */writeOutput_text(1433)
            // /* targetArgIndexRev:2 opcode:2f 23 02 */slot2 := getBreedData_f_zombieEyes(slot35)
            // /* targetArgIndexRev:1 opcode:22 00ffffff 01 */slot1 := 0xffffff
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 05f0 */writeOutput_text(1520)
            // /* targetArgIndexRev:1 opcode:22 ffffff00 01 */slot1 := 0xffffff00
            // /* targetArgIndexRev:0 opcode:22 00ffffff 00 */slot0 := 0xffffff
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0641 */writeOutput_text(1601)
            // /* targetArgIndexRev:0 opcode:22 00333333 00 */slot0 := 0x333333
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0687 */writeOutput_text(1671)
            // /* targetArgIndexRev:1 opcode:21 58 01 */slot1 := 0x58
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 00 */slot0 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0641 */writeOutput_text(1601)
            // /* targetArgIndexRev:0 opcode:22 00db7093 00 */slot0 := 0xdb7093
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0641 */writeOutput_text(1601)
            // /* targetArgIndexRev:0 opcode:22 00e38fab 00 */slot0 := 0xe38fab
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 06de */writeOutput_text(1758)
            // /* targetArgIndexRev:1 opcode:21 48 01 */slot1 := 0x48
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 00 */slot0 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0725 */writeOutput_text(1829)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 00 */slot0 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 076c */writeOutput_text(1900)
            // /* targetArgIndexRev:1 opcode:21 60 01 */slot1 := 0x60
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:33 0100 00 */slot0 := getColor_bits(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0641 */writeOutput_text(1601)
            // /* targetArgIndexRev:0 opcode:22 00505050 00 */slot0 := 0x505050
            // /* targetArgIndexRev:undefined opcode:03 00 */writeOutput_color(slot0)
            // /* targetArgIndexRev:undefined opcode:02 07bb */writeOutput_text(1979)
            // /* targetArgIndexRev:1 opcode:21 18 01 */slot1 := 0x18
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 1e */slot30 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 20 01 */slot1 := 0x20
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 1f */slot31 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 20 */slot32 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 28 01 */slot1 := 0x28
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 27 */slot39 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:23 1f27 09 */slot9 := average(slot31, slot39)
            // /* targetArgIndexRev:3 opcode:21 64 03 */slot3 := 0x64
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 40 01 */slot1 := 0x40
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:36 03020100 01 */slot1 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0100 01 */slot1 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 091f 00 */slot0 := sub(slot9, slot31)
            // /* targetArgIndexRev:1 opcode:0b 0100 08 */slot8 := mul(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:0a 011e 00 */slot0 := sub(slot1, slot30)
            // /* targetArgIndexRev:1 opcode:0c 0800 08 */slot8 := sdiv(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:1 opcode:23 1e00 01 */slot1 := average(slot30, slot0)
            // /* targetArgIndexRev:0 opcode:0a 271f 00 */slot0 := sub(slot39, slot31)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0100 00 */slot0 := add(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:23 1e00 2a */slot42 := average(slot30, slot0)
            // /* targetArgIndexRev:1 opcode:21 48 01 */slot1 := 0x48
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 01 */slot1 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:0b 1e00 29 */slot41 := mul(slot30, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:1 opcode:25 1e2a290120 0c */slot12 := bezierPoint_100(slot30, slot42, slot41, slot1, slot32)
            // /* targetArgIndexRev:0 opcode:21 0a 00 */slot0 := 0x0a
            // /* targetArgIndexRev:0 opcode:09 0c00 00 */slot0 := add(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:0a 011e 00 */slot0 := sub(slot1, slot30)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0900 00 */slot0 := sub(slot9, slot0)
            // /* targetArgIndexRev:3 opcode:23 1f00 28 */slot40 := average(slot31, slot0)
            // /* targetArgIndexRev:1 opcode:25 1f28272720 0d */slot13 := bezierPoint_100(slot31, slot40, slot39, slot39, slot32)
            // /* targetArgIndexRev:0 opcode:21 32 00 */slot0 := 0x32
            // /* targetArgIndexRev:0 opcode:0a 0d00 08 */slot8 := sub(slot13, slot0)
            // /* targetArgIndexRev:undefined opcode:04 08 */writeOutput_int(slot8)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:0 opcode:21 0a 00 */slot0 := 0x0a
            // /* targetArgIndexRev:0 opcode:0a 0c00 00 */slot0 := sub(slot12, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 08 */writeOutput_int(slot8)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:0 opcode:21 1e 00 */slot0 := 0x1e
            // /* targetArgIndexRev:0 opcode:09 0c00 00 */slot0 := add(slot12, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:0 opcode:21 96 00 */slot0 := 0x96
            // /* targetArgIndexRev:0 opcode:09 0d00 08 */slot8 := add(slot13, slot0)
            // /* targetArgIndexRev:undefined opcode:04 08 */writeOutput_int(slot8)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:0 opcode:21 1e 00 */slot0 := 0x1e
            // /* targetArgIndexRev:0 opcode:0a 0c00 00 */slot0 := sub(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 08 */writeOutput_int(slot8)
            // /* targetArgIndexRev:undefined opcode:02 0adc */writeOutput_text(2780)
            // /* targetArgIndexRev:1 opcode:21 04 01 */slot1 := 0x04
            // /* targetArgIndexRev:0 opcode:21 1c 00 */slot0 := 0x1c
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 02 */slot2 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0b59 */writeOutput_text(2905)
            // /* targetArgIndexRev:2 opcode:21 32 02 */slot2 := 0x32
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:1 opcode:3a 020120 0a */slot10 := lerp_100(slot2, slot1, slot32)
            // /* targetArgIndexRev:0 opcode:21 1e 00 */slot0 := 0x1e
            // /* targetArgIndexRev:1 opcode:09 0c00 09 */slot9 := add(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:21 07 00 */slot0 := 0x07
            // /* targetArgIndexRev:1 opcode:09 0d00 08 */slot8 := add(slot13, slot0)
            // /* targetArgIndexRev:1 opcode:21 04 01 */slot1 := 0x04
            // /* targetArgIndexRev:0 opcode:21 0a 00 */slot0 := 0x0a
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:5 opcode:0b 0900 05 */slot5 := mul(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:21 02 00 */slot0 := 0x02
            // /* targetArgIndexRev:0 opcode:0b 0a00 00 */slot0 := mul(slot10, slot0)
            // /* targetArgIndexRev:4 opcode:09 0800 04 */slot4 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:1d 09 0b */slot11 := sub(0, slot9)
            // /* targetArgIndexRev:1 opcode:21 04 01 */slot1 := 0x04
            // /* targetArgIndexRev:0 opcode:21 0a 00 */slot0 := 0x0a
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:0b 0b00 03 */slot3 := mul(slot11, slot0)
            // /* targetArgIndexRev:0 opcode:21 02 00 */slot0 := 0x02
            // /* targetArgIndexRev:0 opcode:0b 0a00 00 */slot0 := mul(slot10, slot0)
            // /* targetArgIndexRev:2 opcode:09 0800 02 */slot2 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:1d 09 01 */slot1 := sub(0, slot9)
            // /* targetArgIndexRev:undefined opcode:05 0908050403020108 */writeOutput_bezier(slot9, slot8, slot5, slot4, slot3, slot2, slot1, slot8)
            // /* targetArgIndexRev:undefined opcode:02 0ba0 */writeOutput_text(2976)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 110100 00 */slot0 := ternary(slot17, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0c89 */writeOutput_text(3209)
            // /* targetArgIndexRev:0 opcode:21 1e 00 */slot0 := 0x1e
            // /* targetArgIndexRev:1 opcode:09 0c00 08 */slot8 := add(slot12, slot0)
            // /* targetArgIndexRev:2 opcode:21 28 02 */slot2 := 0x28
            // /* targetArgIndexRev:1 opcode:21 0a 01 */slot1 := 0x0a
            // /* targetArgIndexRev:0 opcode:3a 020120 00 */slot0 := lerp_100(slot2, slot1, slot32)
            // /* targetArgIndexRev:0 opcode:3a 0c0800 09 */slot9 := lerp_100(slot12, slot8, slot0)
            // /* targetArgIndexRev:0 opcode:1d 09 00 */slot0 := sub(0, slot9)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:0 opcode:21 96 00 */slot0 := 0x96
            // /* targetArgIndexRev:1 opcode:09 0d00 08 */slot8 := add(slot13, slot0)
            // /* targetArgIndexRev:2 opcode:21 28 02 */slot2 := 0x28
            // /* targetArgIndexRev:1 opcode:21 0a 01 */slot1 := 0x0a
            // /* targetArgIndexRev:0 opcode:3a 020120 00 */slot0 := lerp_100(slot2, slot1, slot32)
            // /* targetArgIndexRev:0 opcode:3a 0d0800 08 */slot8 := lerp_100(slot13, slot8, slot0)
            // /* targetArgIndexRev:undefined opcode:04 08 */writeOutput_int(slot8)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:0 opcode:21 6e 00 */slot0 := 0x6e
            // /* targetArgIndexRev:0 opcode:09 0900 00 */slot0 := add(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:0 opcode:21 96 00 */slot0 := 0x96
            // /* targetArgIndexRev:0 opcode:09 0800 0b */slot11 := add(slot8, slot0)
            // /* targetArgIndexRev:undefined opcode:04 0b */writeOutput_int(slot11)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:0 opcode:21 1e 00 */slot0 := 0x1e
            // /* targetArgIndexRev:0 opcode:0a 0900 00 */slot0 := sub(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:0 opcode:21 96 00 */slot0 := 0x96
            // /* targetArgIndexRev:0 opcode:09 0800 0a */slot10 := add(slot8, slot0)
            // /* targetArgIndexRev:undefined opcode:04 0a */writeOutput_int(slot10)
            // /* targetArgIndexRev:undefined opcode:02 0cac */writeOutput_text(3244)
            // /* targetArgIndexRev:undefined opcode:04 09 */writeOutput_int(slot9)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 08 */writeOutput_int(slot8)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:0 opcode:21 6e 00 */slot0 := 0x6e
            // /* targetArgIndexRev:0 opcode:0a 0900 00 */slot0 := sub(slot9, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 0b */writeOutput_int(slot11)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:0 opcode:21 1e 00 */slot0 := 0x1e
            // /* targetArgIndexRev:0 opcode:09 0900 00 */slot0 := add(slot9, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 0a */writeOutput_int(slot10)
            // /* targetArgIndexRev:undefined opcode:02 0cd1 */writeOutput_text(3281)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 1c 00 */slot0 := 0x1c
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 02 */slot2 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ce6 */writeOutput_text(3302)
            // /* targetArgIndexRev:1 opcode:21 1e 08 */slot8 := 0x1e
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 2000 00 */slot0 := sdiv(slot32, slot0)
            // /* targetArgIndexRev:1 opcode:0a 0100 01 */slot1 := sub(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 2a 00 */slot0 := 0x2a
            // /* targetArgIndexRev:1 opcode:0b 0100 01 */slot1 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0c00 00 */slot0 := add(slot12, slot0)
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 1a 00 */slot0 := 0x1a
            // /* targetArgIndexRev:0 opcode:0a 0100 00 */slot0 := sub(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:1 opcode:21 96 08 */slot8 := 0x96
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 2000 00 */slot0 := sdiv(slot32, slot0)
            // /* targetArgIndexRev:1 opcode:0a 0100 01 */slot1 := sub(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 2a 00 */slot0 := 0x2a
            // /* targetArgIndexRev:1 opcode:0b 0100 01 */slot1 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:09 0d00 01 */slot1 := add(slot13, slot0)
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:0a 0100 00 */slot0 := sub(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0d2f */writeOutput_text(3375)
            // /* targetArgIndexRev:1 opcode:21 02 01 */slot1 := 0x02
            // /* targetArgIndexRev:0 opcode:21 1c 00 */slot0 := 0x1c
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 02 */slot2 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0e3f */writeOutput_text(3647)
            // /* targetArgIndexRev:2 opcode:21 46 02 */slot2 := 0x46
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:3a 020120 08 */slot8 := lerp_100(slot2, slot1, slot32)
            // /* targetArgIndexRev:0 opcode:09 0c08 00 */slot0 := add(slot12, slot8)
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 0d */writeOutput_int(slot13)
            // /* targetArgIndexRev:undefined opcode:02 0e62 */writeOutput_text(3682)
            // /* targetArgIndexRev:0 opcode:0a 0c08 00 */slot0 := sub(slot12, slot8)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:undefined opcode:04 0c */writeOutput_int(slot12)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:0 opcode:21 05 00 */slot0 := 0x05
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0d00 00 */slot0 := add(slot13, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0e62 */writeOutput_text(3682)
            // /* targetArgIndexRev:0 opcode:1d 0c 00 */slot0 := sub(0, slot12)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0cd1 */writeOutput_text(3281)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 1c 00 */slot0 := 0x1c
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 02 */slot2 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0e64 */writeOutput_text(3684)
            // /* targetArgIndexRev:2 opcode:21 64 02 */slot2 := 0x64
            // /* targetArgIndexRev:1 opcode:21 32 01 */slot1 := 0x32
            // /* targetArgIndexRev:1 opcode:3a 020120 01 */slot1 := lerp_100(slot2, slot1, slot32)
            // /* targetArgIndexRev:0 opcode:21 02 00 */slot0 := 0x02
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0e9a */writeOutput_text(3738)
            // /* targetArgIndexRev:0 opcode:21 0a 00 */slot0 := 0x0a
            // /* targetArgIndexRev:1 opcode:38 00 01 */slot1 := getRvsValue(slot0)
            // /* targetArgIndexRev:0 opcode:21 80 00 */slot0 := 0x80
            // /* targetArgIndexRev:2 opcode:18 0100 02 */slot2 := slt(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 01 00 */slot0 := 0x01
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 01 00 */slot0 := 0x01
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0f95 */writeOutput_text(3989)
            // /* targetArgIndexRev:3 opcode:21 37 03 */slot3 := 0x37
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:36 03020100 1a */slot26 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 0a */slot10 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 08 01 */slot1 := 0x08
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 11 */slot17 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:21 1e 03 */slot3 := 0x1e
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 10 01 */slot1 := 0x10
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:36 03020100 13 */slot19 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:23 1a13 09 */slot9 := average(slot26, slot19)
            // /* targetArgIndexRev:1 opcode:0a 091a 01 */slot1 := sub(slot9, slot26)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:0a 1100 00 */slot0 := sub(slot17, slot0)
            // /* targetArgIndexRev:1 opcode:0c 0100 08 */slot8 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 04 01 */slot1 := 0x04
            // /* targetArgIndexRev:0 opcode:21 0a 00 */slot0 := 0x0a
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:0b 1100 26 */slot38 := mul(slot17, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:1 opcode:23 0111 01 */slot1 := average(slot1, slot17)
            // /* targetArgIndexRev:0 opcode:0a 131a 00 */slot0 := sub(slot19, slot26)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0100 00 */slot0 := add(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:23 1100 25 */slot37 := average(slot17, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:0a 1100 00 */slot0 := sub(slot17, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0900 00 */slot0 := sub(slot9, slot0)
            // /* targetArgIndexRev:2 opcode:23 1300 24 */slot36 := average(slot19, slot0)
            // /* targetArgIndexRev:4 opcode:21 00 04 */slot4 := 0
            // /* targetArgIndexRev:1 opcode:25 042625110a 1c */slot28 := bezierPoint_100(slot4, slot38, slot37, slot17, slot10)
            // /* targetArgIndexRev:0 opcode:25 1a1a24130a 1b */slot27 := bezierPoint_100(slot26, slot26, slot36, slot19, slot10)
            // /* targetArgIndexRev:undefined opcode:08 1c1b */writeOutput_vertex(slot28, slot27)
            // /* targetArgIndexRev:1 opcode:21 58 01 */slot1 := 0x58
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 08 */slot8 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 18 01 */slot1 := 0x18
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 0e */slot14 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:21 32 03 */slot3 := 0x32
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 20 01 */slot1 := 0x20
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:36 03020100 14 */slot20 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:3 opcode:21 04 03 */slot3 := 0x04
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 28 01 */slot1 := 0x28
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:36 03020100 1d */slot29 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:1 opcode:25 1125260108 19 */slot25 := bezierPoint_100(slot17, slot37, slot38, slot1, slot8)
            // /* targetArgIndexRev:1 opcode:25 13241a1a08 17 */slot23 := bezierPoint_100(slot19, slot36, slot26, slot26, slot8)
            // /* targetArgIndexRev:3 opcode:21 29 03 */slot3 := 0x29
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 08 01 */slot1 := 0x08
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:36 03020100 00 */slot0 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:2 opcode:09 1900 0f */slot15 := add(slot25, slot0)
            // /* targetArgIndexRev:1 opcode:21 10 01 */slot1 := 0x10
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 00 */slot0 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:0a 1700 18 */slot24 := sub(slot23, slot0)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:1 opcode:0a 010e 08 */slot8 := sub(slot1, slot14)
            // /* targetArgIndexRev:1 opcode:27 0e 01 */slot1 := ceil_100(slot14)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0800 08 */slot8 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:29 140100 00 */slot0 := constrain(slot20, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0e00 00 */slot0 := add(slot14, slot0)
            // /* targetArgIndexRev:0 opcode:3a 0f1c00 0d */slot13 := lerp_100(slot15, slot28, slot0)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:1 opcode:0a 010e 08 */slot8 := sub(slot1, slot14)
            // /* targetArgIndexRev:1 opcode:27 0e 01 */slot1 := ceil_100(slot14)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0800 08 */slot8 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:29 140100 00 */slot0 := constrain(slot20, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0e00 00 */slot0 := add(slot14, slot0)
            // /* targetArgIndexRev:1 opcode:3a 181b00 0c */slot12 := lerp_100(slot24, slot27, slot0)
            // /* targetArgIndexRev:1 opcode:23 1c0d 08 */slot8 := average(slot28, slot13)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1d00 01 */slot1 := sdiv(slot29, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0c1b 00 */slot0 := sub(slot12, slot27)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0800 08 */slot8 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:23 1b0c 09 */slot9 := average(slot27, slot12)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1d00 01 */slot1 := sdiv(slot29, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0d1c 00 */slot0 := sub(slot13, slot28)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0900 00 */slot0 := sub(slot9, slot0)
            // /* targetArgIndexRev:5 opcode:23 1c08 05 */slot5 := average(slot28, slot8)
            // /* targetArgIndexRev:4 opcode:23 1b00 04 */slot4 := average(slot27, slot0)
            // /* targetArgIndexRev:3 opcode:23 0d08 03 */slot3 := average(slot13, slot8)
            // /* targetArgIndexRev:2 opcode:23 0c00 02 */slot2 := average(slot12, slot0)
            // /* targetArgIndexRev:undefined opcode:06 050403020d0c */writeOutput_bezierVertex(slot5, slot4, slot3, slot2, slot13, slot12)
            // /* targetArgIndexRev:1 opcode:21 30 01 */slot1 := 0x30
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 10 */slot16 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:1 opcode:0a 010e 08 */slot8 := sub(slot1, slot14)
            // /* targetArgIndexRev:1 opcode:27 0e 01 */slot1 := ceil_100(slot14)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0800 08 */slot8 := mul(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:29 140100 01 */slot1 := constrain(slot20, slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0e00 00 */slot0 := add(slot14, slot0)
            // /* targetArgIndexRev:0 opcode:3a 0f1900 0b */slot11 := lerp_100(slot15, slot25, slot0)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:1 opcode:0a 010e 08 */slot8 := sub(slot1, slot14)
            // /* targetArgIndexRev:1 opcode:27 0e 01 */slot1 := ceil_100(slot14)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0800 08 */slot8 := mul(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:29 140100 01 */slot1 := constrain(slot20, slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0e00 00 */slot0 := add(slot14, slot0)
            // /* targetArgIndexRev:1 opcode:3a 181700 09 */slot9 := lerp_100(slot24, slot23, slot0)
            // /* targetArgIndexRev:1 opcode:23 0d0b 08 */slot8 := average(slot13, slot11)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1000 01 */slot1 := sdiv(slot16, slot0)
            // /* targetArgIndexRev:0 opcode:0a 090c 00 */slot0 := sub(slot9, slot12)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0800 08 */slot8 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:23 0c09 0a */slot10 := average(slot12, slot9)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1000 01 */slot1 := sdiv(slot16, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0b0d 00 */slot0 := sub(slot11, slot13)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0a00 00 */slot0 := sub(slot10, slot0)
            // /* targetArgIndexRev:5 opcode:23 0d08 05 */slot5 := average(slot13, slot8)
            // /* targetArgIndexRev:4 opcode:23 0c00 04 */slot4 := average(slot12, slot0)
            // /* targetArgIndexRev:3 opcode:23 0b08 03 */slot3 := average(slot11, slot8)
            // /* targetArgIndexRev:2 opcode:23 0900 02 */slot2 := average(slot9, slot0)
            // /* targetArgIndexRev:undefined opcode:06 050403020b09 */writeOutput_bezierVertex(slot5, slot4, slot3, slot2, slot11, slot9)
            // /* targetArgIndexRev:3 opcode:21 18 03 */slot3 := 0x18
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 38 01 */slot1 := 0x38
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:36 03020100 15 */slot21 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:23 0b19 08 */slot8 := average(slot11, slot25)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1500 01 */slot1 := sdiv(slot21, slot0)
            // /* targetArgIndexRev:0 opcode:0a 1709 00 */slot0 := sub(slot23, slot9)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0800 08 */slot8 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:23 0917 0a */slot10 := average(slot9, slot23)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1500 01 */slot1 := sdiv(slot21, slot0)
            // /* targetArgIndexRev:0 opcode:0a 190b 00 */slot0 := sub(slot25, slot11)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0a00 00 */slot0 := sub(slot10, slot0)
            // /* targetArgIndexRev:5 opcode:23 0b08 05 */slot5 := average(slot11, slot8)
            // /* targetArgIndexRev:4 opcode:23 0900 04 */slot4 := average(slot9, slot0)
            // /* targetArgIndexRev:3 opcode:23 1908 03 */slot3 := average(slot25, slot8)
            // /* targetArgIndexRev:2 opcode:23 1700 02 */slot2 := average(slot23, slot0)
            // /* targetArgIndexRev:undefined opcode:06 050403021917 */writeOutput_bezierVertex(slot5, slot4, slot3, slot2, slot25, slot23)
            // /* targetArgIndexRev:undefined opcode:02 0fdc */writeOutput_text(4060)
            // /* targetArgIndexRev:1 opcode:21 48 01 */slot1 := 0x48
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 08 */slot8 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:3a 1c1908 0a */slot10 := lerp_100(slot28, slot25, slot8)
            // /* targetArgIndexRev:0 opcode:3a 1b1708 0c */slot12 := lerp_100(slot27, slot23, slot8)
            // /* targetArgIndexRev:undefined opcode:08 0a0c */writeOutput_vertex(slot10, slot12)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 09 */slot9 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 58 01 */slot1 := 0x58
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 08 */slot8 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 64 01 */slot1 := 0x64
            // /* targetArgIndexRev:0 opcode:0a 0108 00 */slot0 := sub(slot1, slot8)
            // /* targetArgIndexRev:0 opcode:3a 1c1900 12 */slot18 := lerp_100(slot28, slot25, slot0)
            // /* targetArgIndexRev:1 opcode:21 64 01 */slot1 := 0x64
            // /* targetArgIndexRev:0 opcode:0a 0108 00 */slot0 := sub(slot1, slot8)
            // /* targetArgIndexRev:0 opcode:3a 1b1700 10 */slot16 := lerp_100(slot27, slot23, slot0)
            // /* targetArgIndexRev:2 opcode:23 0a12 21 */slot33 := average(slot10, slot18)
            // /* targetArgIndexRev:2 opcode:23 0c10 22 */slot34 := average(slot12, slot16)
            // /* targetArgIndexRev:1 opcode:3a 210f09 08 */slot8 := lerp_100(slot33, slot15, slot9)
            // /* targetArgIndexRev:4 opcode:22 00000195 04 */slot4 := 0x0195
            // /* targetArgIndexRev:3 opcode:21 04 03 */slot3 := 0x04
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 60 01 */slot1 := 0x60
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:37 0403020100 01 */slot1 := getFieldData_sub_mul_bits(slot4, slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:09 0800 16 */slot22 := add(slot8, slot0)
            // /* targetArgIndexRev:2 opcode:3a 221809 18 */slot24 := lerp_100(slot34, slot24, slot9)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:1 opcode:0a 010e 08 */slot8 := sub(slot1, slot14)
            // /* targetArgIndexRev:1 opcode:27 0e 01 */slot1 := ceil_100(slot14)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0800 08 */slot8 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:29 140100 00 */slot0 := constrain(slot20, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0e00 00 */slot0 := add(slot14, slot0)
            // /* targetArgIndexRev:0 opcode:3a 160a00 0d */slot13 := lerp_100(slot22, slot10, slot0)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:1 opcode:0a 010e 08 */slot8 := sub(slot1, slot14)
            // /* targetArgIndexRev:1 opcode:27 0e 01 */slot1 := ceil_100(slot14)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0800 08 */slot8 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:29 140100 00 */slot0 := constrain(slot20, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0e00 00 */slot0 := add(slot14, slot0)
            // /* targetArgIndexRev:1 opcode:3a 180c00 0b */slot11 := lerp_100(slot24, slot12, slot0)
            // /* targetArgIndexRev:1 opcode:23 0a0d 08 */slot8 := average(slot10, slot13)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1d00 01 */slot1 := sdiv(slot29, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0b0c 00 */slot0 := sub(slot11, slot12)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0800 08 */slot8 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:23 0c0b 09 */slot9 := average(slot12, slot11)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1d00 01 */slot1 := sdiv(slot29, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0d0a 00 */slot0 := sub(slot13, slot10)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0900 00 */slot0 := sub(slot9, slot0)
            // /* targetArgIndexRev:5 opcode:23 0a08 05 */slot5 := average(slot10, slot8)
            // /* targetArgIndexRev:4 opcode:23 0c00 04 */slot4 := average(slot12, slot0)
            // /* targetArgIndexRev:3 opcode:23 0d08 03 */slot3 := average(slot13, slot8)
            // /* targetArgIndexRev:2 opcode:23 0b00 02 */slot2 := average(slot11, slot0)
            // /* targetArgIndexRev:undefined opcode:06 050403020d0b */writeOutput_bezierVertex(slot5, slot4, slot3, slot2, slot13, slot11)
            // /* targetArgIndexRev:3 opcode:21 22 03 */slot3 := 0x22
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 40 01 */slot1 := 0x40
            // /* targetArgIndexRev:0 opcode:21 15 00 */slot0 := 0x15
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:36 03020100 0f */slot15 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:1 opcode:0a 010e 08 */slot8 := sub(slot1, slot14)
            // /* targetArgIndexRev:1 opcode:27 0e 01 */slot1 := ceil_100(slot14)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0800 08 */slot8 := mul(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:29 140100 01 */slot1 := constrain(slot20, slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0e00 00 */slot0 := add(slot14, slot0)
            // /* targetArgIndexRev:0 opcode:3a 161200 0c */slot12 := lerp_100(slot22, slot18, slot0)
            // /* targetArgIndexRev:1 opcode:21 50 01 */slot1 := 0x50
            // /* targetArgIndexRev:1 opcode:0a 010e 08 */slot8 := sub(slot1, slot14)
            // /* targetArgIndexRev:1 opcode:27 0e 01 */slot1 := ceil_100(slot14)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0800 08 */slot8 := mul(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:29 140100 01 */slot1 := constrain(slot20, slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:09 0e00 00 */slot0 := add(slot14, slot0)
            // /* targetArgIndexRev:1 opcode:3a 181000 08 */slot8 := lerp_100(slot24, slot16, slot0)
            // /* targetArgIndexRev:1 opcode:23 0d0c 09 */slot9 := average(slot13, slot12)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0f00 01 */slot1 := sdiv(slot15, slot0)
            // /* targetArgIndexRev:0 opcode:0a 080b 00 */slot0 := sub(slot8, slot11)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0900 09 */slot9 := add(slot9, slot0)
            // /* targetArgIndexRev:1 opcode:23 0b08 0a */slot10 := average(slot11, slot8)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0f00 01 */slot1 := sdiv(slot15, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0c0d 00 */slot0 := sub(slot12, slot13)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0a00 00 */slot0 := sub(slot10, slot0)
            // /* targetArgIndexRev:5 opcode:23 0d09 05 */slot5 := average(slot13, slot9)
            // /* targetArgIndexRev:4 opcode:23 0b00 04 */slot4 := average(slot11, slot0)
            // /* targetArgIndexRev:3 opcode:23 0c09 03 */slot3 := average(slot12, slot9)
            // /* targetArgIndexRev:2 opcode:23 0800 02 */slot2 := average(slot8, slot0)
            // /* targetArgIndexRev:undefined opcode:06 050403020c08 */writeOutput_bezierVertex(slot5, slot4, slot3, slot2, slot12, slot8)
            // /* targetArgIndexRev:1 opcode:23 0c12 09 */slot9 := average(slot12, slot18)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1500 01 */slot1 := sdiv(slot21, slot0)
            // /* targetArgIndexRev:0 opcode:0a 1008 00 */slot0 := sub(slot16, slot8)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0900 09 */slot9 := add(slot9, slot0)
            // /* targetArgIndexRev:1 opcode:23 0810 0a */slot10 := average(slot8, slot16)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 1500 01 */slot1 := sdiv(slot21, slot0)
            // /* targetArgIndexRev:0 opcode:0a 120c 00 */slot0 := sub(slot18, slot12)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0a00 00 */slot0 := sub(slot10, slot0)
            // /* targetArgIndexRev:5 opcode:23 0c09 05 */slot5 := average(slot12, slot9)
            // /* targetArgIndexRev:4 opcode:23 0800 04 */slot4 := average(slot8, slot0)
            // /* targetArgIndexRev:3 opcode:23 1209 03 */slot3 := average(slot18, slot9)
            // /* targetArgIndexRev:2 opcode:23 1000 02 */slot2 := average(slot16, slot0)
            // /* targetArgIndexRev:undefined opcode:06 050403021210 */writeOutput_bezierVertex(slot5, slot4, slot3, slot2, slot18, slot16)
            // /* targetArgIndexRev:undefined opcode:02 10f5 */writeOutput_text(4341)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:undefined opcode:08 011a */writeOutput_vertex(slot1, slot26)
            // /* targetArgIndexRev:undefined opcode:06 261a25241113 */writeOutput_bezierVertex(slot38, slot26, slot37, slot36, slot17, slot19)
            // /* targetArgIndexRev:1 opcode:21 38 01 */slot1 := 0x38
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 0b */slot11 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:23 111e 08 */slot8 := average(slot17, slot30)
            // /* targetArgIndexRev:1 opcode:23 131f 0a */slot10 := average(slot19, slot31)
            // /* targetArgIndexRev:3 opcode:21 3c 03 */slot3 := 0x3c
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 30 01 */slot1 := 0x30
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:36 03020100 01 */slot1 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0100 01 */slot1 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 1f13 00 */slot0 := sub(slot31, slot19)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:09 0800 02 */slot2 := add(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0a 1e11 00 */slot0 := sub(slot30, slot17)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:0a 0a00 09 */slot9 := sub(slot10, slot0)
            // /* targetArgIndexRev:0 opcode:0a 1f13 00 */slot0 := sub(slot31, slot19)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0a 0800 08 */slot8 := sub(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0a 1e11 00 */slot0 := sub(slot30, slot17)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:09 0a00 01 */slot1 := add(slot10, slot0)
            // /* targetArgIndexRev:0 opcode:3a 02080b 00 */slot0 := lerp_100(slot2, slot8, slot11)
            // /* targetArgIndexRev:5 opcode:23 1100 0a */slot10 := average(slot17, slot0)
            // /* targetArgIndexRev:0 opcode:3a 09010b 00 */slot0 := lerp_100(slot9, slot1, slot11)
            // /* targetArgIndexRev:4 opcode:23 1300 04 */slot4 := average(slot19, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:3a 080200 00 */slot0 := lerp_100(slot8, slot2, slot0)
            // /* targetArgIndexRev:3 opcode:23 1e00 08 */slot8 := average(slot30, slot0)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:3a 010900 00 */slot0 := lerp_100(slot1, slot9, slot0)
            // /* targetArgIndexRev:2 opcode:23 1f00 02 */slot2 := average(slot31, slot0)
            // /* targetArgIndexRev:undefined opcode:06 0a0408021e1f */writeOutput_bezierVertex(slot10, slot4, slot8, slot2, slot30, slot31)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:undefined opcode:06 2a2829270127 */writeOutput_bezierVertex(slot42, slot40, slot41, slot39, slot1, slot39)
            // /* targetArgIndexRev:5 opcode:1d 29 05 */slot5 := sub(0, slot41)
            // /* targetArgIndexRev:3 opcode:1d 2a 03 */slot3 := sub(0, slot42)
            // /* targetArgIndexRev:1 opcode:1d 1e 01 */slot1 := sub(0, slot30)
            // /* targetArgIndexRev:undefined opcode:06 05270328011f */writeOutput_bezierVertex(slot5, slot39, slot3, slot40, slot1, slot31)
            // /* targetArgIndexRev:5 opcode:1d 08 05 */slot5 := sub(0, slot8)
            // /* targetArgIndexRev:3 opcode:1d 0a 03 */slot3 := sub(0, slot10)
            // /* targetArgIndexRev:1 opcode:1d 11 01 */slot1 := sub(0, slot17)
            // /* targetArgIndexRev:undefined opcode:06 050203040113 */writeOutput_bezierVertex(slot5, slot2, slot3, slot4, slot1, slot19)
            // /* targetArgIndexRev:5 opcode:1d 25 05 */slot5 := sub(0, slot37)
            // /* targetArgIndexRev:3 opcode:1d 26 03 */slot3 := sub(0, slot38)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:1 opcode:1d 00 01 */slot1 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:06 0524031a011a */writeOutput_bezierVertex(slot5, slot36, slot3, slot26, slot1, slot26)
            // /* targetArgIndexRev:undefined opcode:02 1264 */writeOutput_text(4708)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 1d 00 */slot0 := 0x1d
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 02 */slot2 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 12e1 */writeOutput_text(4833)
            // /* targetArgIndexRev:1 opcode:21 25 08 */slot8 := 0x25
            // /* targetArgIndexRev:3 opcode:21 0d 03 */slot3 := 0x0d
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 40 01 */slot1 := 0x40
            // /* targetArgIndexRev:0 opcode:21 16 00 */slot0 := 0x16
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:36 03020100 00 */slot0 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:09 0800 10 */slot16 := add(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:21 3c 00 */slot0 := 0x3c
            // /* targetArgIndexRev:0 opcode:09 1000 00 */slot0 := add(slot16, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 130e */writeOutput_text(4878)
            // /* targetArgIndexRev:1 opcode:21 04 01 */slot1 := 0x04
            // /* targetArgIndexRev:0 opcode:21 1d 00 */slot0 := 0x1d
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 02 */slot2 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1332 */writeOutput_text(4914)
            // /* targetArgIndexRev:undefined opcode:04 10 */writeOutput_int(slot16)
            // /* targetArgIndexRev:undefined opcode:02 13a1 */writeOutput_text(5025)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:09 1000 00 */slot0 := add(slot16, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 13a8 */writeOutput_text(5032)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0cd1 */writeOutput_text(3281)
            // /* targetArgIndexRev:1 opcode:21 05 01 */slot1 := 0x05
            // /* targetArgIndexRev:0 opcode:21 1d 00 */slot0 := 0x1d
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 02 */slot2 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 13ae */writeOutput_text(5038)
            // /* targetArgIndexRev:0 opcode:21 06 00 */slot0 := 0x06
            // /* targetArgIndexRev:0 opcode:09 1000 00 */slot0 := add(slot16, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 13dc */writeOutput_text(5084)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 141c */writeOutput_text(5148)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 2c0100 00 */slot0 := ternary(slot44, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1440 */writeOutput_text(5184)
            // /* targetArgIndexRev:undefined opcode:08 1c1b */writeOutput_vertex(slot28, slot27)
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:5 opcode:0a 2100 05 */slot5 := sub(slot33, slot0)
            // /* targetArgIndexRev:0 opcode:21 0f 00 */slot0 := 0x0f
            // /* targetArgIndexRev:4 opcode:09 2200 04 */slot4 := add(slot34, slot0)
            // /* targetArgIndexRev:0 opcode:21 0f 00 */slot0 := 0x0f
            // /* targetArgIndexRev:3 opcode:09 2100 03 */slot3 := add(slot33, slot0)
            // /* targetArgIndexRev:0 opcode:21 0f 00 */slot0 := 0x0f
            // /* targetArgIndexRev:2 opcode:09 2200 02 */slot2 := add(slot34, slot0)
            // /* targetArgIndexRev:undefined opcode:06 050403021917 */writeOutput_bezierVertex(slot5, slot4, slot3, slot2, slot25, slot23)
            // /* targetArgIndexRev:undefined opcode:02 1462 */writeOutput_text(5218)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 2d0100 00 */slot0 := ternary(slot45, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1480 */writeOutput_text(5248)
            // /* targetArgIndexRev:1 opcode:21 08 01 */slot1 := 0x08
            // /* targetArgIndexRev:0 opcode:21 16 00 */slot0 := 0x16
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 17 */slot23 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 48 00 */slot0 := 0x48
            // /* targetArgIndexRev:0 opcode:0a 1700 00 */slot0 := sub(slot23, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 14af */writeOutput_text(5295)
            // /* targetArgIndexRev:1 opcode:21 03 01 */slot1 := 0x03
            // /* targetArgIndexRev:0 opcode:21 1d 00 */slot0 := 0x1d
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 02 */slot2 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 14d4 */writeOutput_text(5332)
            // /* targetArgIndexRev:0 opcode:21 05 00 */slot0 := 0x05
            // /* targetArgIndexRev:0 opcode:09 1000 00 */slot0 := add(slot16, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1546 */writeOutput_text(5446)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:2 opcode:21 28 02 */slot2 := 0x28
            // /* targetArgIndexRev:1 opcode:21 0a 01 */slot1 := 0x0a
            // /* targetArgIndexRev:0 opcode:3a 020120 0a */slot10 := lerp_100(slot2, slot1, slot32)
            // /* targetArgIndexRev:undefined opcode:04 0a */writeOutput_int(slot10)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:0 opcode:21 50 00 */slot0 := 0x50
            // /* targetArgIndexRev:0 opcode:09 1000 08 */slot8 := add(slot16, slot0)
            // /* targetArgIndexRev:undefined opcode:04 08 */writeOutput_int(slot8)
            // /* targetArgIndexRev:undefined opcode:02 0ada */writeOutput_text(2778)
            // /* targetArgIndexRev:0 opcode:1d 0a 00 */slot0 := sub(0, slot10)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 08 */writeOutput_int(slot8)
            // /* targetArgIndexRev:undefined opcode:02 0cd1 */writeOutput_text(3281)
            // /* targetArgIndexRev:1 opcode:21 02 01 */slot1 := 0x02
            // /* targetArgIndexRev:0 opcode:21 1d 00 */slot0 := 0x1d
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:2 opcode:34 0100 02 */slot2 := getFieldData_bitFlag(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 154b */writeOutput_text(5451)
            // /* targetArgIndexRev:0 opcode:21 05 00 */slot0 := 0x05
            // /* targetArgIndexRev:0 opcode:09 1000 00 */slot0 := add(slot16, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1546 */writeOutput_text(5446)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0cd1 */writeOutput_text(3281)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 2b0100 00 */slot0 := ternary(slot43, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 15c1 */writeOutput_text(5569)
            // /* targetArgIndexRev:undefined opcode:04 1a */writeOutput_int(slot26)
            // /* targetArgIndexRev:undefined opcode:02 15ee */writeOutput_text(5614)
            // /* targetArgIndexRev:0 opcode:21 32 00 */slot0 := 0x32
            // /* targetArgIndexRev:0 opcode:0a 1700 00 */slot0 := sub(slot23, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 162f */writeOutput_text(5679)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 166f */writeOutput_text(5743)
            // /* targetArgIndexRev:0 opcode:21 0f 00 */slot0 := 0x0f
            // /* targetArgIndexRev:1 opcode:38 00 01 */slot1 := getRvsValue(slot0)
            // /* targetArgIndexRev:0 opcode:2a 23 00 */slot0 := getBreedData_b_tabbyFaceOdds(slot35)
            // /* targetArgIndexRev:2 opcode:1a 0100 02 */slot2 := not(sgt(slot1, slot0))
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 169a */writeOutput_text(5786)
            // /* targetArgIndexRev:0 opcode:21 1e 00 */slot0 := 0x1e
            // /* targetArgIndexRev:0 opcode:09 1e00 00 */slot0 := add(slot30, slot0)
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:0 opcode:21 05 00 */slot0 := 0x05
            // /* targetArgIndexRev:0 opcode:0a 1f00 00 */slot0 := sub(slot31, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 16d1 */writeOutput_text(5841)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 182d */writeOutput_text(6189)
            // /* targetArgIndexRev:0 opcode:21 1e 00 */slot0 := 0x1e
            // /* targetArgIndexRev:0 opcode:0a 1a00 00 */slot0 := sub(slot26, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1868 */writeOutput_text(6248)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 16 00 */slot0 := 0x16
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 14 */slot20 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 14 */writeOutput_int(slot20)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 17 */writeOutput_int(slot23)
            // /* targetArgIndexRev:undefined opcode:02 191f */writeOutput_text(6431)
            // /* targetArgIndexRev:undefined opcode:04 14 */writeOutput_int(slot20)
            // /* targetArgIndexRev:undefined opcode:02 192d */writeOutput_text(6445)
            // /* targetArgIndexRev:undefined opcode:04 17 */writeOutput_int(slot23)
            // /* targetArgIndexRev:undefined opcode:02 1930 */writeOutput_text(6448)
            // /* targetArgIndexRev:undefined opcode:04 14 */writeOutput_int(slot20)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 17 */writeOutput_int(slot23)
            // /* targetArgIndexRev:undefined opcode:02 198a */writeOutput_text(6538)
            // /* targetArgIndexRev:3 opcode:21 40 03 */slot3 := 0x40
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 28 01 */slot1 := 0x28
            // /* targetArgIndexRev:0 opcode:21 16 00 */slot0 := 0x16
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:36 03020100 0a */slot10 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 b4 09 */slot9 := 0xb4
            // /* targetArgIndexRev:1 opcode:21 64 08 */slot8 := 0x64
            // /* targetArgIndexRev:1 opcode:21 64 01 */slot1 := 0x64
            // /* targetArgIndexRev:0 opcode:22 0000013a 00 */slot0 := 0x013a
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0c 0800 00 */slot0 := sdiv(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0900 00 */slot0 := mul(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0a00 00 */slot0 := mul(slot10, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 199f */writeOutput_text(6559)
            // /* targetArgIndexRev:1 opcode:21 10 01 */slot1 := 0x10
            // /* targetArgIndexRev:0 opcode:21 16 00 */slot0 := 0x16
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 0d */slot13 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:1d 0d 0c */slot12 := sub(0, slot13)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:1 opcode:0a 0c00 01 */slot1 := sub(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:undefined opcode:48 0100 11 */slot17 := vertex(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:01 11 */writeOutput(slot17)
            // /* targetArgIndexRev:3 opcode:21 03 03 */slot3 := 0x03
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 18 01 */slot1 := 0x18
            // /* targetArgIndexRev:0 opcode:21 16 00 */slot0 := 0x16
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:36 03020100 08 */slot8 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 20 01 */slot1 := 0x20
            // /* targetArgIndexRev:0 opcode:21 16 00 */slot0 := 0x16
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 09 */slot9 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:1d 08 02 */slot2 := sub(0, slot8)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:3a 020900 12 */slot18 := lerp_100(slot2, slot9, slot0)
            // /* targetArgIndexRev:1 opcode:21 32 01 */slot1 := 0x32
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:0b 0c00 19 */slot25 := mul(slot12, slot0)
            // /* targetArgIndexRev:1 opcode:21 32 01 */slot1 := 0x32
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:4 opcode:0b 1200 04 */slot4 := mul(slot18, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:undefined opcode:26 0c0419120112 0f */slot15 := bezierVertex(slot12, slot4, slot25, slot18, slot1, slot18)
            // /* targetArgIndexRev:undefined opcode:01 0f */writeOutput(slot15)
            // /* targetArgIndexRev:1 opcode:21 32 01 */slot1 := 0x32
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:5 opcode:0b 0d00 16 */slot22 := mul(slot13, slot0)
            // /* targetArgIndexRev:1 opcode:21 32 01 */slot1 := 0x32
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:0b 1200 02 */slot2 := mul(slot18, slot0)
            // /* targetArgIndexRev:0 opcode:21 04 00 */slot0 := 0x04
            // /* targetArgIndexRev:1 opcode:09 0d00 01 */slot1 := add(slot13, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:undefined opcode:26 16120d020100 0e */slot14 := bezierVertex(slot22, slot18, slot13, slot2, slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:01 0e */writeOutput(slot14)
            // /* targetArgIndexRev:1 opcode:1d 08 08 */slot8 := sub(0, slot8)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:3a 090800 0b */slot11 := lerp_100(slot9, slot8, slot0)
            // /* targetArgIndexRev:1 opcode:21 32 01 */slot1 := 0x32
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:4 opcode:0b 0b00 15 */slot21 := mul(slot11, slot0)
            // /* targetArgIndexRev:1 opcode:21 32 01 */slot1 := 0x32
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:0b 0d00 03 */slot3 := mul(slot13, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:undefined opcode:26 0d15030b010b 0a */slot10 := bezierVertex(slot13, slot21, slot3, slot11, slot1, slot11)
            // /* targetArgIndexRev:undefined opcode:01 0a */writeOutput(slot10)
            // /* targetArgIndexRev:1 opcode:21 32 01 */slot1 := 0x32
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:5 opcode:0b 0c00 05 */slot5 := mul(slot12, slot0)
            // /* targetArgIndexRev:1 opcode:21 32 01 */slot1 := 0x32
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:0b 0b00 13 */slot19 := mul(slot11, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:1 opcode:0a 0c00 01 */slot1 := sub(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:undefined opcode:26 050b0c130100 08 */slot8 := bezierVertex(slot5, slot11, slot12, slot19, slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:01 08 */writeOutput(slot8)
            // /* targetArgIndexRev:undefined opcode:02 19a6 */writeOutput_text(6566)
            // /* targetArgIndexRev:undefined opcode:01 11 */writeOutput(slot17)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0f */writeOutput(slot15)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0e */writeOutput(slot14)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0a */writeOutput(slot10)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 08 */writeOutput(slot8)
            // /* targetArgIndexRev:undefined opcode:02 1a18 */writeOutput_text(6680)
            // /* targetArgIndexRev:undefined opcode:01 11 */writeOutput(slot17)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0f */writeOutput(slot15)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0e */writeOutput(slot14)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0a */writeOutput(slot10)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 08 */writeOutput(slot8)
            // /* targetArgIndexRev:undefined opcode:02 1a18 */writeOutput_text(6680)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:1 opcode:0a 0c00 01 */slot1 := sub(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:undefined opcode:08 0100 */writeOutput_vertex(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:0 opcode:21 02 00 */slot0 := 0x02
            // /* targetArgIndexRev:4 opcode:0c 0900 04 */slot4 := sdiv(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:21 01 00 */slot0 := 0x01
            // /* targetArgIndexRev:2 opcode:0c 0900 02 */slot2 := sdiv(slot9, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 01 00 */slot0 := 0x01
            // /* targetArgIndexRev:0 opcode:0c 0900 00 */slot0 := sdiv(slot9, slot0)
            // /* targetArgIndexRev:undefined opcode:06 0c0419020100 */writeOutput_bezierVertex(slot12, slot4, slot25, slot2, slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:0 opcode:21 01 00 */slot0 := 0x01
            // /* targetArgIndexRev:4 opcode:0c 0900 04 */slot4 := sdiv(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:21 02 00 */slot0 := 0x02
            // /* targetArgIndexRev:2 opcode:0c 0900 02 */slot2 := sdiv(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:21 04 00 */slot0 := 0x04
            // /* targetArgIndexRev:1 opcode:09 0d00 01 */slot1 := add(slot13, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:undefined opcode:06 16040d020100 */writeOutput_bezierVertex(slot22, slot4, slot13, slot2, slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:undefined opcode:06 0d15030b010b */writeOutput_bezierVertex(slot13, slot21, slot3, slot11, slot1, slot11)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:1 opcode:0a 0c00 01 */slot1 := sub(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:undefined opcode:06 050b0c130100 */writeOutput_bezierVertex(slot5, slot11, slot12, slot19, slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:02 1a18 */writeOutput_text(6680)
            // /* targetArgIndexRev:undefined opcode:01 11 */writeOutput(slot17)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0f */writeOutput(slot15)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0e */writeOutput(slot14)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0a */writeOutput(slot10)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 08 */writeOutput(slot8)
            // /* targetArgIndexRev:undefined opcode:02 1a18 */writeOutput_text(6680)
            // /* targetArgIndexRev:undefined opcode:01 11 */writeOutput(slot17)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0f */writeOutput(slot15)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0e */writeOutput(slot14)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 0a */writeOutput(slot10)
            // /* targetArgIndexRev:undefined opcode:02 1a16 */writeOutput_text(6678)
            // /* targetArgIndexRev:undefined opcode:01 08 */writeOutput(slot8)
            // /* targetArgIndexRev:undefined opcode:02 1a1d */writeOutput_text(6685)
            // /* targetArgIndexRev:undefined opcode:04 14 */writeOutput_int(slot20)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 17 */writeOutput_int(slot23)
            // /* targetArgIndexRev:undefined opcode:02 1ac6 */writeOutput_text(6854)
            // /* targetArgIndexRev:3 opcode:21 08 03 */slot3 := 0x08
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 30 01 */slot1 := 0x30
            // /* targetArgIndexRev:0 opcode:21 16 00 */slot0 := 0x16
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:36 03020100 09 */slot9 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 09 */writeOutput_int(slot9)
            // /* targetArgIndexRev:undefined opcode:02 1afa */writeOutput_text(6906)
            // /* targetArgIndexRev:3 opcode:21 08 03 */slot3 := 0x08
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 38 01 */slot1 := 0x38
            // /* targetArgIndexRev:0 opcode:21 16 00 */slot0 := 0x16
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:36 03020100 08 */slot8 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 08 */writeOutput_int(slot8)
            // /* targetArgIndexRev:undefined opcode:02 1b01 */writeOutput_text(6913)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 17 00 */slot0 := 0x17
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 01 */slot1 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 02 00 */slot0 := 0x02
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1b08 */writeOutput_text(6920)
            // /* targetArgIndexRev:1 opcode:21 08 01 */slot1 := 0x08
            // /* targetArgIndexRev:0 opcode:21 17 00 */slot0 := 0x17
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 01 */slot1 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 02 00 */slot0 := 0x02
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1b0f */writeOutput_text(6927)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:09 0d09 00 */slot0 := add(slot13, slot9)
            // /* targetArgIndexRev:1 opcode:09 0100 01 */slot1 := add(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 03 00 */slot0 := 0x03
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:09 0108 00 */slot0 := add(slot1, slot8)
            // /* targetArgIndexRev:1 opcode:09 1200 01 */slot1 := add(slot18, slot0)
            // /* targetArgIndexRev:0 opcode:21 03 00 */slot0 := 0x03
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1b93 */writeOutput_text(7059)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:09 0109 00 */slot0 := add(slot1, slot9)
            // /* targetArgIndexRev:1 opcode:09 0c00 01 */slot1 := add(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:21 03 00 */slot0 := 0x03
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:09 0b08 00 */slot0 := add(slot11, slot8)
            // /* targetArgIndexRev:1 opcode:09 0100 01 */slot1 := add(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 03 00 */slot0 := 0x03
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1c03 */writeOutput_text(7171)
            // /* targetArgIndexRev:undefined opcode:04 14 */writeOutput_int(slot20)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 17 */writeOutput_int(slot23)
            // /* targetArgIndexRev:undefined opcode:02 1ce2 */writeOutput_text(7394)
            // /* targetArgIndexRev:undefined opcode:04 14 */writeOutput_int(slot20)
            // /* targetArgIndexRev:undefined opcode:02 192d */writeOutput_text(6445)
            // /* targetArgIndexRev:undefined opcode:04 17 */writeOutput_int(slot23)
            // /* targetArgIndexRev:undefined opcode:02 1cef */writeOutput_text(7407)
            // /* targetArgIndexRev:undefined opcode:04 14 */writeOutput_int(slot20)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:undefined opcode:04 17 */writeOutput_int(slot23)
            // /* targetArgIndexRev:undefined opcode:02 1db3 */writeOutput_text(7603)
            // /* targetArgIndexRev:undefined opcode:04 10 */writeOutput_int(slot16)
            // /* targetArgIndexRev:undefined opcode:02 1e35 */writeOutput_text(7733)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 18 00 */slot0 := 0x18
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 00 */slot0 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:2 opcode:09 1000 02 */slot2 := add(slot16, slot0)
            // /* targetArgIndexRev:1 opcode:29 021027 0a */slot10 := constrain(slot2, slot16, slot39)
            // /* targetArgIndexRev:3 opcode:21 00 03 */slot3 := 0
            // /* targetArgIndexRev:2 opcode:0a 1010 02 */slot2 := sub(slot16, slot16)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:0a 0a10 00 */slot0 := sub(slot10, slot16)
            // /* targetArgIndexRev:undefined opcode:07 03020100 */writeOutput_line(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:02 1eb2 */writeOutput_text(7858)
            // /* targetArgIndexRev:3 opcode:21 11 03 */slot3 := 0x11
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 18 01 */slot1 := 0x18
            // /* targetArgIndexRev:0 opcode:21 18 00 */slot0 := 0x18
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:36 03020100 0c */slot12 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 08 01 */slot1 := 0x08
            // /* targetArgIndexRev:0 opcode:21 18 00 */slot0 := 0x18
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 0d */slot13 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:21 02 03 */slot3 := 0x02
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 10 01 */slot1 := 0x10
            // /* targetArgIndexRev:0 opcode:21 18 00 */slot0 := 0x18
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:36 03020100 00 */slot0 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:2 opcode:09 0a00 02 */slot2 := add(slot10, slot0)
            // /* targetArgIndexRev:1 opcode:29 021027 09 */slot9 := constrain(slot2, slot16, slot39)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:1 opcode:23 010d 08 */slot8 := average(slot1, slot13)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0c00 01 */slot1 := sdiv(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:0a 090a 00 */slot0 := sub(slot9, slot10)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0800 0b */slot11 := sub(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:23 0a09 08 */slot8 := average(slot10, slot9)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0c00 01 */slot1 := sdiv(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:0a 0d00 00 */slot0 := sub(slot13, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0800 00 */slot0 := add(slot8, slot0)
            // /* targetArgIndexRev:7 opcode:21 00 07 */slot7 := 0
            // /* targetArgIndexRev:6 opcode:0a 0a10 06 */slot6 := sub(slot10, slot16)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:5 opcode:23 010b 05 */slot5 := average(slot1, slot11)
            // /* targetArgIndexRev:1 opcode:23 0a00 01 */slot1 := average(slot10, slot0)
            // /* targetArgIndexRev:4 opcode:0a 0110 04 */slot4 := sub(slot1, slot16)
            // /* targetArgIndexRev:3 opcode:23 0d0b 03 */slot3 := average(slot13, slot11)
            // /* targetArgIndexRev:1 opcode:23 0900 01 */slot1 := average(slot9, slot0)
            // /* targetArgIndexRev:2 opcode:0a 0110 02 */slot2 := sub(slot1, slot16)
            // /* targetArgIndexRev:0 opcode:0a 0910 00 */slot0 := sub(slot9, slot16)
            // /* targetArgIndexRev:undefined opcode:05 0706050403020d00 */writeOutput_bezier(slot7, slot6, slot5, slot4, slot3, slot2, slot13, slot0)
            // /* targetArgIndexRev:undefined opcode:02 1efc */writeOutput_text(7932)
            // /* targetArgIndexRev:2 opcode:2e 23 02 */slot2 := getBreedData_f_whiskers(slot35)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1f3c */writeOutput_text(7996)
            // /* targetArgIndexRev:1 opcode:21 10 01 */slot1 := 0x10
            // /* targetArgIndexRev:0 opcode:21 19 00 */slot0 := 0x19
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 09 */slot9 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:1d 09 08 */slot8 := sub(0, slot9)
            // /* targetArgIndexRev:1 opcode:21 05 01 */slot1 := 0x05
            // /* targetArgIndexRev:0 opcode:21 0a 00 */slot0 := 0x0a
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 0ad8 */writeOutput_text(2776)
            // /* targetArgIndexRev:1 opcode:21 18 01 */slot1 := 0x18
            // /* targetArgIndexRev:0 opcode:21 19 00 */slot0 := 0x19
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 00 */slot0 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 1f7b */writeOutput_text(8059)
            // /* targetArgIndexRev:0 opcode:21 11 00 */slot0 := 0x11
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 199f */writeOutput_text(6559)
            // /* targetArgIndexRev:3 opcode:21 12 03 */slot3 := 0x12
            // /* targetArgIndexRev:2 opcode:21 08 02 */slot2 := 0x08
            // /* targetArgIndexRev:1 opcode:21 30 01 */slot1 := 0x30
            // /* targetArgIndexRev:0 opcode:21 19 00 */slot0 := 0x19
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:36 03020100 0a */slot10 := getFieldData_sub_bits(slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 96 01 */slot1 := 0x96
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0900 0d */slot13 := mul(slot9, slot0)
            // /* targetArgIndexRev:1 opcode:21 20 01 */slot1 := 0x20
            // /* targetArgIndexRev:0 opcode:21 19 00 */slot0 := 0x19
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:0 opcode:35 0100 0c */slot12 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 28 01 */slot1 := 0x28
            // /* targetArgIndexRev:0 opcode:21 19 00 */slot0 := 0x19
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 0b */slot11 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:23 0d0c 08 */slot8 := average(slot13, slot12)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0a00 01 */slot1 := sdiv(slot10, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:0a 0b00 00 */slot0 := sub(slot11, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0800 08 */slot8 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:1 opcode:23 010b 09 */slot9 := average(slot1, slot11)
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0a00 01 */slot1 := sdiv(slot10, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0c0d 00 */slot0 := sub(slot12, slot13)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0900 00 */slot0 := sub(slot9, slot0)
            // /* targetArgIndexRev:5 opcode:23 0d08 05 */slot5 := average(slot13, slot8)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:4 opcode:23 0100 04 */slot4 := average(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:23 0c08 0e */slot14 := average(slot12, slot8)
            // /* targetArgIndexRev:2 opcode:23 0b00 11 */slot17 := average(slot11, slot0)
            // /* targetArgIndexRev:6 opcode:21 00 06 */slot6 := 0
            // /* targetArgIndexRev:undefined opcode:05 0d0605040e110c0b */writeOutput_bezier(slot13, slot6, slot5, slot4, slot14, slot17, slot12, slot11)
            // /* targetArgIndexRev:undefined opcode:02 1fcb */writeOutput_text(8139)
            // /* targetArgIndexRev:1 opcode:21 08 01 */slot1 := 0x08
            // /* targetArgIndexRev:0 opcode:21 19 00 */slot0 := 0x19
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 0f */slot15 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 11 09 */slot9 := 0x11
            // /* targetArgIndexRev:1 opcode:21 02 08 */slot8 := 0x02
            // /* targetArgIndexRev:1 opcode:21 39 01 */slot1 := 0x39
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0f00 00 */slot0 := mul(slot15, slot0)
            // /* targetArgIndexRev:0 opcode:09 0900 00 */slot0 := add(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 199f */writeOutput_text(6559)
            // /* targetArgIndexRev:6 opcode:21 00 06 */slot6 := 0
            // /* targetArgIndexRev:1 opcode:21 09 01 */slot1 := 0x09
            // /* targetArgIndexRev:0 opcode:21 0a 00 */slot0 := 0x0a
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:0b 0e00 03 */slot3 := mul(slot14, slot0)
            // /* targetArgIndexRev:1 opcode:21 09 01 */slot1 := 0x09
            // /* targetArgIndexRev:0 opcode:21 0a 00 */slot0 := 0x0a
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0c00 01 */slot1 := mul(slot12, slot0)
            // /* targetArgIndexRev:undefined opcode:05 0d0605040311010b */writeOutput_bezier(slot13, slot6, slot5, slot4, slot3, slot17, slot1, slot11)
            // /* targetArgIndexRev:undefined opcode:02 201b */writeOutput_text(8219)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 19 00 */slot0 := 0x19
            // /* targetArgIndexRev:0 opcode:3c 00 00 */slot0 := loadMemoryWord(slot0)
            // /* targetArgIndexRev:1 opcode:35 0100 0a */slot10 := getFieldData_byte(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 02 00 */slot0 := 0x02
            // /* targetArgIndexRev:2 opcode:19 0a00 02 */slot2 := sgt(slot10, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 2062 */writeOutput_text(8290)
            // /* targetArgIndexRev:1 opcode:21 11 09 */slot9 := 0x11
            // /* targetArgIndexRev:1 opcode:21 01 08 */slot8 := 0x01
            // /* targetArgIndexRev:1 opcode:21 39 01 */slot1 := 0x39
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0f00 00 */slot0 := mul(slot15, slot0)
            // /* targetArgIndexRev:0 opcode:09 0900 00 */slot0 := add(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 199f */writeOutput_text(6559)
            // /* targetArgIndexRev:6 opcode:21 00 06 */slot6 := 0
            // /* targetArgIndexRev:undefined opcode:05 0d0605040e110c0b */writeOutput_bezier(slot13, slot6, slot5, slot4, slot14, slot17, slot12, slot11)
            // /* targetArgIndexRev:undefined opcode:02 201b */writeOutput_text(8219)
            // /* targetArgIndexRev:0 opcode:21 03 00 */slot0 := 0x03
            // /* targetArgIndexRev:2 opcode:19 0a00 02 */slot2 := sgt(slot10, slot0)
            // /* targetArgIndexRev:1 opcode:21 01 01 */slot1 := 0x01
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:20 020100 00 */slot0 := ternary(slot2, slot0, slot1)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 2062 */writeOutput_text(8290)
            // /* targetArgIndexRev:1 opcode:21 11 09 */slot9 := 0x11
            // /* targetArgIndexRev:1 opcode:21 03 08 */slot8 := 0x03
            // /* targetArgIndexRev:1 opcode:21 39 01 */slot1 := 0x39
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0f00 00 */slot0 := mul(slot15, slot0)
            // /* targetArgIndexRev:0 opcode:09 0900 00 */slot0 := add(slot9, slot0)
            // /* targetArgIndexRev:0 opcode:1d 00 00 */slot0 := sub(0, slot0)
            // /* targetArgIndexRev:undefined opcode:04 00 */writeOutput_int(slot0)
            // /* targetArgIndexRev:undefined opcode:02 199f */writeOutput_text(6559)
            // /* targetArgIndexRev:6 opcode:21 00 06 */slot6 := 0
            // /* targetArgIndexRev:1 opcode:21 4b 01 */slot1 := 0x4b
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:3 opcode:0b 0e00 03 */slot3 := mul(slot14, slot0)
            // /* targetArgIndexRev:1 opcode:21 4b 01 */slot1 := 0x4b
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:0b 0c00 01 */slot1 := mul(slot12, slot0)
            // /* targetArgIndexRev:undefined opcode:05 0d0605040311010b */writeOutput_bezier(slot13, slot6, slot5, slot4, slot3, slot17, slot1, slot11)
            // /* targetArgIndexRev:undefined opcode:02 2077 */writeOutput_text(8311)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:undefined opcode:08 0110 */writeOutput_vertex(slot1, slot16)
            // /* targetArgIndexRev:0 opcode:21 09 00 */slot0 := 0x09
            // /* targetArgIndexRev:0 opcode:1d 00 0c */slot12 := sub(0, slot0)
            // /* targetArgIndexRev:0 opcode:21 0b 00 */slot0 := 0x0b
            // /* targetArgIndexRev:1 opcode:0a 1000 0d */slot13 := sub(slot16, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:1 opcode:23 010c 08 */slot8 := average(slot1, slot12)
            // /* targetArgIndexRev:1 opcode:21 14 01 */slot1 := 0x14
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0100 01 */slot1 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0d10 00 */slot0 := sub(slot13, slot16)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0800 08 */slot8 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:23 100d 09 */slot9 := average(slot16, slot13)
            // /* targetArgIndexRev:1 opcode:21 14 01 */slot1 := 0x14
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0100 01 */slot1 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:0 opcode:0a 0c00 00 */slot0 := sub(slot12, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0900 00 */slot0 := sub(slot9, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:5 opcode:23 0108 11 */slot17 := average(slot1, slot8)
            // /* targetArgIndexRev:4 opcode:23 1000 12 */slot18 := average(slot16, slot0)
            // /* targetArgIndexRev:3 opcode:23 0c08 0e */slot14 := average(slot12, slot8)
            // /* targetArgIndexRev:2 opcode:23 0d00 0f */slot15 := average(slot13, slot0)
            // /* targetArgIndexRev:undefined opcode:06 11120e0f0c0d */writeOutput_bezierVertex(slot17, slot18, slot14, slot15, slot12, slot13)
            // /* targetArgIndexRev:0 opcode:21 0b 00 */slot0 := 0x0b
            // /* targetArgIndexRev:1 opcode:0a 1000 09 */slot9 := sub(slot16, slot0)
            // /* targetArgIndexRev:0 opcode:21 09 00 */slot0 := 0x09
            // /* targetArgIndexRev:1 opcode:23 0c00 08 */slot8 := average(slot12, slot0)
            // /* targetArgIndexRev:1 opcode:21 14 01 */slot1 := 0x14
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0100 01 */slot1 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 090d 00 */slot0 := sub(slot9, slot13)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0800 0a */slot10 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:23 0d09 0b */slot11 := average(slot13, slot9)
            // /* targetArgIndexRev:1 opcode:21 14 01 */slot1 := 0x14
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0100 08 */slot8 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 09 01 */slot1 := 0x09
            // /* targetArgIndexRev:0 opcode:0a 010c 00 */slot0 := sub(slot1, slot12)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0b00 00 */slot0 := sub(slot11, slot0)
            // /* targetArgIndexRev:5 opcode:23 0c0a 05 */slot5 := average(slot12, slot10)
            // /* targetArgIndexRev:4 opcode:23 0d00 04 */slot4 := average(slot13, slot0)
            // /* targetArgIndexRev:1 opcode:21 09 01 */slot1 := 0x09
            // /* targetArgIndexRev:3 opcode:23 010a 03 */slot3 := average(slot1, slot10)
            // /* targetArgIndexRev:2 opcode:23 0900 02 */slot2 := average(slot9, slot0)
            // /* targetArgIndexRev:1 opcode:21 09 01 */slot1 := 0x09
            // /* targetArgIndexRev:undefined opcode:06 050403020109 */writeOutput_bezierVertex(slot5, slot4, slot3, slot2, slot1, slot9)
            // /* targetArgIndexRev:1 opcode:21 09 01 */slot1 := 0x09
            // /* targetArgIndexRev:0 opcode:21 00 00 */slot0 := 0
            // /* targetArgIndexRev:1 opcode:23 0100 08 */slot8 := average(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 14 01 */slot1 := 0x14
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0100 01 */slot1 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0a 1009 00 */slot0 := sub(slot16, slot9)
            // /* targetArgIndexRev:0 opcode:0b 0100 00 */slot0 := mul(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:09 0800 0a */slot10 := add(slot8, slot0)
            // /* targetArgIndexRev:1 opcode:23 0910 0b */slot11 := average(slot9, slot16)
            // /* targetArgIndexRev:1 opcode:21 14 01 */slot1 := 0x14
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:1 opcode:0c 0100 08 */slot8 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:0 opcode:21 09 00 */slot0 := 0x09
            // /* targetArgIndexRev:0 opcode:0a 0100 00 */slot0 := sub(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:0 opcode:0a 0b00 00 */slot0 := sub(slot11, slot0)
            // /* targetArgIndexRev:1 opcode:21 09 01 */slot1 := 0x09
            // /* targetArgIndexRev:5 opcode:23 010a 05 */slot5 := average(slot1, slot10)
            // /* targetArgIndexRev:4 opcode:23 0900 04 */slot4 := average(slot9, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:3 opcode:23 010a 03 */slot3 := average(slot1, slot10)
            // /* targetArgIndexRev:2 opcode:23 1000 02 */slot2 := average(slot16, slot0)
            // /* targetArgIndexRev:1 opcode:21 00 01 */slot1 := 0
            // /* targetArgIndexRev:undefined opcode:06 050403020110 */writeOutput_bezierVertex(slot5, slot4, slot3, slot2, slot1, slot16)
            // /* targetArgIndexRev:undefined opcode:02 2133 */writeOutput_text(8499)
            // /* targetArgIndexRev:4 opcode:21 00 04 */slot4 := 0
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:1 opcode:25 04110e0c00 0a */slot10 := bezierPoint_100(slot4, slot17, slot14, slot12, slot0)
            // /* targetArgIndexRev:0 opcode:21 14 00 */slot0 := 0x14
            // /* targetArgIndexRev:1 opcode:25 10120f0d00 09 */slot9 := bezierPoint_100(slot16, slot18, slot15, slot13, slot0)
            // /* targetArgIndexRev:0 opcode:21 01 00 */slot0 := 0x01
            // /* targetArgIndexRev:5 opcode:09 0a00 05 */slot5 := add(slot10, slot0)
            // /* targetArgIndexRev:1 opcode:21 09 08 */slot8 := 0x09
            // /* targetArgIndexRev:1 opcode:21 28 01 */slot1 := 0x28
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:4 opcode:0a 0900 0b */slot11 := sub(slot9, slot0)
            // /* targetArgIndexRev:1 opcode:21 09 08 */slot8 := 0x09
            // /* targetArgIndexRev:1 opcode:21 28 01 */slot1 := 0x28
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:3 opcode:09 0a00 03 */slot3 := add(slot10, slot0)
            // /* targetArgIndexRev:1 opcode:21 0b 08 */slot8 := 0x0b
            // /* targetArgIndexRev:1 opcode:21 3c 01 */slot1 := 0x3c
            // /* targetArgIndexRev:0 opcode:21 64 00 */slot0 := 0x64
            // /* targetArgIndexRev:0 opcode:0c 0100 00 */slot0 := sdiv(slot1, slot0)
            // /* targetArgIndexRev:0 opcode:0b 0800 00 */slot0 := mul(slot8, slot0)
            // /* targetArgIndexRev:2 opcode:0a 0900 02 */slot2 := sub(slot9, slot0)
            // /* targetArgIndexRev:4 opcode:21 00 04 */slot4 := 0
            // /* targetArgIndexRev:0 opcode:21 50 00 */slot0 := 0x50
            // /* targetArgIndexRev:1 opcode:25 04110e0c00 01 */slot1 := bezierPoint_100(slot4, slot17, slot14, slot12, slot0)
            // /* targetArgIndexRev:0 opcode:21 50 00 */slot0 := 0x50
            // /* targetArgIndexRev:0 opcode:25 10120f0d00 00 */slot0 := bezierPoint_100(slot16, slot18, slot15, slot13, slot0)
            // /* targetArgIndexRev:undefined opcode:05 0a09050b03020100 */writeOutput_bezier(slot10, slot9, slot5, slot11, slot3, slot2, slot1, slot0)
            // /* targetArgIndexRev:undefined opcode:02 2197 */writeOutput_text(8599)
        }
        generateSvgInner()

        // Finalize output
        output := getMemoryWordAddress(4096)
        // Set actual string length (pOutput - output - uint256 length))
        mstore(output, sub(sub(mload(0x00), getMemoryWordAddress(4096)), 0x20))
        // Set free memory pointer to after string
        mstore(0x40, mload(0x00))

// --- END ---    
        }

        return output;
    }
}