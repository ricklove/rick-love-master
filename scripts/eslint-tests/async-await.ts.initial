/* eslint-disable no-console */
/* eslint-disable @typescript-eslint/no-unused-vars */
const allowNoAwaitInAsync = async () => { return true; };

const basicPromise = () => new Promise<boolean>((resolve) => { resolve(true); });
const requireAwaitOnPromise = async () => { return basicPromise(); };

const voidPromise = () => new Promise<void>((resolve) => { resolve(); });
async function requireAwaitOnVoidPromise() {
    await basicPromise();
    voidPromise();
    await voidPromise();
}

const voidAsync = async () => await voidPromise();
async function requireAwaitOnVoidAsync() {
    await basicPromise();
    voidAsync();
    await voidAsync();
}

const numAsync = async () => await Promise.resolve(42);
async function requireAwaitOnNumAsync() {
    await basicPromise();
    numAsync();
    await numAsync();
}

async function requireAwaitTryCatch() {
    try {
        basicPromise();
    } catch{
        console.log(`error`);
    }
}
