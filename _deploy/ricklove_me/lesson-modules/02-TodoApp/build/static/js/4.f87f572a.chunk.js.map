{"version":3,"sources":["project/291301600535366/service.ts","project/291301600535366/todo.tsx","project/291301600535366/app.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["delay","timeMs","Promise","resolve","setTimeout","simulateNetwork","a","apiService","loadData","json","localStorage","getItem","JSON","parse","saveData","data","setItem","stringify","styles","container","padding","backgroundColor","color","itemContainer","margin","row","display","flex","flexDirection","alignItems","flex1","button","createNewTodoItem","key","Date","now","Math","random","text","isDone","TodoList","props","useState","items","setItems","loading","setLoading","error","setError","isMounted","useRef","useEffect","current","result","message","changeItem","value","s","map","x","deleteItem","filter","style","onClick","item","onChange","onDelete","TodoItem","isEditing","setIsEditing","itemText","setItemText","changeText","e","preventDefault","type","autoFocus","target","onBlur","onKeyDown","App","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/4.f87f572a.chunk.js","sourcesContent":["import { TodoData } from './types';\n\nconst delay = (timeMs = 0) => {\n    return new Promise<void>((resolve) => {\n        setTimeout(resolve, timeMs);\n    });\n};\n\nconst simulateNetwork = async () => {\n    await delay(250);\n};\n\n/** Create a mock api service that uses localStorage and simulates a network delay */\nconst createApiService = () => {\n\n    const DATA_KEY = `todo`;\n\n    const service = {\n        loadData: async () => {\n            await simulateNetwork();\n            try {\n                const json = localStorage.getItem(DATA_KEY);\n                if (!json) { return null; }\n                return JSON.parse(json) as TodoData;\n            } catch {\n                return null;\n            }\n        },\n        saveData: async (data: TodoData) => {\n            await simulateNetwork();\n            localStorage.setItem(DATA_KEY, JSON.stringify(data));\n        },\n    };\n    return service;\n};\n\nexport const apiService = createApiService();\n","import React, { useEffect, useRef, useState } from 'react';\nimport { apiService } from './service';\nimport { TodoItemData } from './types';\n\nconst styles = {\n    container: {\n        padding: 4,\n        backgroundColor: `#000000`,\n        color: `#FFFFFF`,\n    },\n    itemContainer: {\n        margin: 4,\n        padding: 4,\n        backgroundColor: `#333333`,\n        color: `#FFFFFF`,\n    },\n    row: {\n        display: `flex`,\n        flex: 1,\n        flexDirection: `row`,\n        alignItems: `center`,\n    },\n    flex1: {\n        display: `flex`,\n        flex: 1,\n    },\n    button: {\n        margin: 4,\n        padding: 8,\n        backgroundColor: `#111111`,\n    },\n} as const;\n\nconst getUniqueKey = () => {\n    return `${Date.now()}:${Math.random()}`;\n};\nconst createNewTodoItem = () => {\n    return { key: getUniqueKey(), text: `New Task`, isDone: false };\n};\n\nexport const TodoList = (props: {}) => {\n\n    const [items, setItems] = useState([] as TodoItemData[]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null as null | { message: string });\n\n    const isMounted = useRef(true);\n\n    useEffect(() => {\n        (async () => await loadData())();\n\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    const loadData = async () => {\n        setLoading(true);\n        try {\n            const result = await apiService.loadData();\n            if (!isMounted.current) { return; }\n            setItems(result?.items ?? [createNewTodoItem()]);\n            setLoading(false);\n        } catch {\n            setError({ message: `Failed to load data` });\n        }\n    };\n\n    const saveData = async () => {\n        if (!items) { return; }\n        setLoading(true);\n        try {\n            await apiService.saveData({ items });\n            if (!isMounted.current) { return; }\n            setLoading(false);\n        } catch {\n            setError({ message: `Failed to load data` });\n        }\n    };\n\n    const changeItem = (value: TodoItemData) => {\n        setItems(s => s.map(x => x.key === value.key ? value : x));\n    };\n    const addItem = () => {\n        setItems(s => [...s, createNewTodoItem()]);\n    };\n    const deleteItem = (value: TodoItemData) => {\n        setItems(s => s.filter(x => x.key !== value.key));\n    };\n\n    if (error) {\n        return (\n            <div style={styles.container}>\n                <div style={styles.row}>\n                    <span>{`❗ ${error.message}`}</span>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div style={styles.container}>\n            {loading && (\n                <div style={styles.row}>\n                    <span>{`🕒 Loading`}</span>\n                </div>\n            )}\n            <div style={styles.row}>\n                <div style={styles.flex1} />\n                <div style={styles.button} onClick={loadData} >\n                    <span>{`💽 Reload`}</span>\n                </div>\n                <div style={styles.button} onClick={saveData} >\n                    <span>{`💾 Save`}</span>\n                </div>\n            </div>\n            {items.map(x => (\n                <TodoItem key={x.key} item={x} onChange={changeItem} onDelete={deleteItem} />\n            ))}\n            <div style={styles.row}>\n                <div style={styles.button} onClick={addItem} >\n                    <span>{`➕ Add`}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst TodoItem = (props: { item: TodoItemData, onChange: (value: TodoItemData) => void, onDelete: (value: TodoItemData) => void }) => {\n\n    const [isEditing, setIsEditing] = useState(false);\n    const [itemText, setItemText] = useState(props.item.text);\n    const changeText = () => {\n        setIsEditing(false);\n        props.onChange({ ...props.item, text: itemText });\n    };\n    const toggleDone = () => {\n        props.onChange({ ...props.item, isDone: !props.item.isDone });\n    };\n\n    return (\n        <div style={styles.itemContainer}>\n            {!isEditing && (\n                <div style={styles.row} onClick={toggleDone}>\n                    <div>\n                        <span>{props.item.isDone ? `✔ 🐱‍🏍 ` : `◻ 😾 `}</span>\n                    </div>\n                    <div style={styles.flex1}>\n                        <span>{itemText}</span>\n                    </div>\n                    <div style={styles.button}\n                        onClick={(e) => { e.preventDefault(); setIsEditing(true); }}\n                    >\n                        <span>{`✏ Edit`}</span>\n                    </div>\n                    <div style={styles.button}\n                        onClick={(e) => { e.preventDefault(); props.onDelete(props.item); }}\n                    >\n                        <span>{`❌ Delete`}</span>\n                    </div>\n                </div>\n            )}\n            {isEditing && (\n                <div style={styles.row}>\n                    <input style={styles.flex1} type='text' value={itemText}\n                        autoFocus\n                        onChange={e => setItemText(e.target.value)}\n                        onBlur={e => { e.preventDefault(); changeText(); }}\n                        onKeyDown={e => { if (e.key === `Enter`) { e.preventDefault(); changeText(); } }}\n                    />\n                    <div style={styles.button} onClick={changeText}>\n                        <span>{`✔ Done`}</span>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { TodoList } from './todo';\n\nexport const App = (props: {}) => {\n    return (\n        <TodoList />\n    );\n};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}